Перем Валюта_Прежн,ФлагВыбора, Авто, Вод, Удост, Кат, ВБанк;
Перем Курс_Прежн;
Перем Режим,ПрефиксТТН;
Перем ОтвЛицо1, ОтвЛицо2;
Перем мКолвоПодписейТТН;

Перем Объем;
Перем НомерТекущейФормы;
Перем ТаблицаПечФорм;  // список печатных форм документа  
Перем мКонстСкладПД;

Перем ВалютаПечати;

Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1) Далее
Процедура РассчитатьОбъем() Далее 
Процедура ПриВыбореФирмы1() Далее
//------------------------
Процедура ПриУстановкеУчетаНП()
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если УчитыватьНП=0 Тогда
			СуммаНП=0;
		Иначе
			Если Товар.Выбран()=1 Тогда
				СтавкаНПпроц=ПолучитьСтавкуНП(Товар,ДатаДок);
				СуммаНП=Сумма*СтавкаНПпроц/100;
			Иначе
				СуммаНП=0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Форма.СуммаНП.Видимость(УчитыватьНП);   
	
КонецПроцедуры
//-----------------------------------------------
Процедура ВводСчетаФактуры()
	Перем ФормаСчФ;
	
	ДокПодч=СоздатьОбъект("Документ");
	ДокПодч.ВыбратьПодчиненныеДокументы(ДатаДок-7,ПолучитьДатуТА(),ТекущийДокумент());
	Пока  ДокПодч.ПолучитьДокумент()=1 Цикл
		Если (ДокПодч.Вид()="Счет_фактура") Тогда
			Если ДокПодч.ПометкаУдаления()=1 Тогда
				Продолжить
			КонецЕсли;
			ОткрытьФорму(ДокПодч.ТекущийДокумент(),ФормаСчФ,0);
			Возврат;
		КонецЕсли;
	КонецЦикла;   
	
	Если Проведен()=0  Тогда
		Предупреждение("Счет-фактуру нельзя вводить на основании не проведенного документа!");
		Возврат;
	КонецЕсли;    
	
	ОткрытьФорму("Документ.Счет_фактура",ФормаСчФ,ТекущийДокумент()); 
	
КонецПроцедуры
//------------------------
Процедура ВыборГлубины()
	//ДатаОплаты=БанковскаяДата(ДатаДок,Глубина);
	
КонецПроцедуры
//-----------------------------------------------
Процедура ВыборКлиента(Режим="Изменение")
	Если Клиент.Выбран()=1 Тогда         
		Если ПустоеЗначение(Клиент.ФирмаМОБ.Получить(ДатаДок))=0 Тогда
			Если Клиент.ФирмаМОБ.Получить(ДатаДок)<>Фирма1 Тогда
				Если Найти(СокрЛП(Признак),"часть1")>0 Тогда
					Ответ = Вопрос("Фирма МОБ клиента отличается от Фирмы, выбранной в документе! Изменить Фирму в документе?","Да+Нет");
					Если Ответ = "Да" Тогда
						Фирма1 = Клиент.ФирмаМОБ.Получить(ДатаДок); 
						ПриВыбореФирмы1();
					КонецЕсли;                                  
				КОнецЕсли;
			КонецЕсли;
			Основание = СокрЛП(Клиент.Договор.Получить(ДатаДок));
		КонецЕсли;
						
		Если ПризнакНакладной=Перечисление.ПризнРасхНакл.Продажа Тогда
			Если НЕ(Клиент.СуммаКредита.Получить(ДатаДок)=0) Тогда
				Глубина=Клиент.Глубина.Получить(ДатаДок);
				Форма.Глубина.Видимость(1);
				Форма.ГлубинаПодпись.Видимость(1);
				//Форма.ДатаОпл.Видимость(1);
				//Форма.ДатаОплПодпись.Видимость(1);
			Иначе
				Глубина=0;
				Форма.Глубина.Видимость(0);
				Форма.ГлубинаПодпись.Видимость(0);
				//Форма.ДатаОпл.Видимость(0);
				//Форма.ДатаОплПодпись.Видимость(0);
			КонецЕсли;
		ИначеЕсли ПризнакНакладной=Перечисление.ПризнРасхНакл.ВозвратПоставщику Тогда
			Если НЕ(Клиент.СуммаКредитаПоставщика.Получить(ДатаДок)=0) Тогда
				Глубина=Клиент.ГлубинаКредитаПоставщика.Получить(ДатаДок);
			
			Иначе
				Глубина=0;
		
			КонецЕсли;
		
		КонецЕсли;
		ВыборГлубины();
		
	Иначе
		Если Режим="Изменение" Тогда
			Предупреждение ("Выберите клиента!");
			Возврат;
		
		КонецЕсли;
		
	КонецЕсли;   
	
	//10.03.2010 Настя  
	Если Найти(Клиент.Родитель, "ПОКУПАТЕЛИ")<>0 Тогда  
		Договор=СоздатьОбъект("Справочник.Договор"); 
		Договор.ИспользоватьВладельца(Клиент);
		Если Договор.ВыбратьЭлементы()=1 тогда    
			Пока Договор.ПолучитьЭлемент()=1 Цикл  
				Если Договор.Фирма=Фирма1 Тогда
					Основание=СокрЛП(Договор.наименование); 
					Прервать;
					
				КонецЕсли;	        
				
			КонецЦикла;
			
		конецесли;   
	else
		Покупатель = Клиент.ЮрФизЛицо;
		Если ПустоеЗначение(Покупатель)=0 Тогда    
			Если ПустоеЗначение(Покупатель.ОсновнойДоговор)=0 Тогда
				Если Покупатель.ОсновнойДоговор.Фирма=Фирма1 тогда
					ДоговорПокупателя = Покупатель.ОсновнойДоговор;
					Основание = СокрЛП(ДоговорПокупателя.Наименование);
					
				КонецЕсли;  
				
			Иначе
				Договоры=СоздатьОбъект("Справочник.ДоговорыЮрЛиц"); 
				Договоры.ИспользоватьВладельца(Покупатель);
				Договоры.ВыбратьЭлементы();
				Пока Договоры.ПолучитьЭлемент()=1 Цикл  
					Если Договоры.Фирма<>Фирма1 Тогда                  
						Продолжить;
						
					КонецЕсли;
					
					Если ДатаДок<Договоры.ДатаНачала Тогда
						Продолжить;
						
					КонецЕсли;
					
					Если ПустоеЗначение(Договоры.ДатаОкончания)=0 Тогда
						Если ДатаДок>Договоры.Датаокончания тогда  
							Продолжить;
							
						КонецЕсли;
						
					КонецЕсли;
					
					ДоговорПокупателя = Договоры.текущийЭлемент();
					Основание=СокрЛП(Договоры.наименование); 
					Прервать;
					
					
				КонецЦикла;
				
			конецесли;
			
		Иначе
			Основание=Клиент.Договор.Получить(ДатаДок);  
			
		КонецЕсли;
		
	КонецЕсли;      
	
	
КонецПроцедуры
//*************************************
Процедура Подбор()
	Режим="Каталог";
	ОткрытьПодбор("Номенклатура","ДляПодбора");
	УстановитьЗначениеВПодборе("Склад",Склад);
	
КонецПроцедуры
//-----------------------------------------------
Процедура ОбработкаПодбора(Выб)
	ЗапросКоличестваВПодборе(Контекст,Режим,Выб);
	УстанЦеныРасх(Контекст,"Подбор");
	АктивизироватьСтроку();  
	
КонецПроцедуры
//---------------------------------------------
Функция СуммаПрописьюРасхНакл()
	Если ВалютаПечати.Выбран()=0 Тогда
		ВалютаПечати=Валюта;
	КонецЕсли;
	Если ФС.СуществуетФайл(КаталогИБ()+ВалютаПечати.ИмяФайлаПрописи)=1 Тогда
		Пропись(ВалютаПечати.ИмяФайлаПрописи);
	КонецЕсли;
	СтрокаСуммы=Формат(Пересчет(Итог("Сумма")- Итог("Сумма")/100*Наценка.Наценка,Валюта,Курс,ВалютаПечати,Дата_Курса),"ЧПДС");
	Пропись("");
	Возврат СтрокаСуммы; 
	
КонецФункции
//************************************************
Процедура Печать1()   
	
	Если Проведен()=0 Тогда
		Сообщить("Документ не проведен. Печать невозможна!!!");
		СтатусВозврата(0);
		Возврат;
		
	КонецЕсли; 
	
    Если ВалютаПечати.Выбран()=0 Тогда
		ВалютаПечати=Валюта;
	КонецЕсли;
	
	Фирма1.ИспользоватьДату(ДатаДок);
	Таб = СоздатьОбъект("Таблица"); 
	Таб.ИсходнаяТаблица("Таблица");

	Если УчитыватьНП=1 Тогда
		Секц="|НП";
	Иначе
		Секц="|БезНП";
	КонецЕсли;
     
	ПечВрем = ТекущееВремя();
	
	Таб.ВывестиСекцию("Шапка1"+Секц);
	Таб.ВывестиСекцию("Шапка2"+Секц); 
	Таб.ВывестиСекцию("Шапка"+Секц);
	
	тз = создатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(тз);
	тз.НоваяКолонка("КодСорт");
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку()=1 Цикл
		тз.КодСорт = тз.Товар.КодСоответствияФас;
	КонецЦикла;                                 
	тз.Сортировать("КодСорт+");
	
	ПечИтогВес = 0;
	Ном=0;
	ВСоставе=0;
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Ном=Ном+1;   
		
		ПечНП=ФРМ(Пересчет(тз.СуммаНП,Валюта,Курс,ВалютаПечати,Дата_Курса),ВалютаПечати,0);
		
		//Если Набор.Выбран()=1 Тогда
		//	Если ПустоеЗначение(ВСоставе)=1 Тогда
		//		Таб.ВывестиСекцию("ВСоставе"+Секц);
		//		ВСоставе=Набор;
		//	ИначеЕсли ВСоставе<>Набор Тогда
		//		Таб.ВывестиСекцию("ВСоставе"+Секц);
		//		ВСоставе=Набор;
		//	КонецЕсли;
		//Иначе
		//	Если ПустоеЗначение(ВСоставе)=0 Тогда
		//		ВСоставе=0;
		//		Таб.ВывестиСекцию("Пропуск"+Секц);
		//	КонецЕсли;
		//КонецЕсли;
		Таб.ВывестиСекцию("Строка"+Секц);
		
		ПечИтогВес = ПечИтогВес + тз.Товар.ВесТовара/1000*тз.Коэффициент*тз.Количество;
	КонецЦикла;
	
	ПечВсегоСумма=Итог("Сумма");
	
	ПечВсегоНДС=Пересчет(Итог("НДС")- Итог("НДС")/100*Наценка.Наценка,Валюта,Курс,ВалютаПечати,Дата_Курса);
	ПечИтого=ФРМ(Пересчет(Итог("Сумма")- Итог("Сумма")/100*Наценка.Наценка,Валюта,Курс,ВалютаПечати,Дата_Курса),ВалютаПечати,1);
	
	Если УчитыватьНП=1 Тогда
		ПечИтогоСНП=?(Константа.СуммаВключаетНДС.Получить(ДатаДок)=Перечисление.Булево.Да
		,""
		,ФРМ(Пересчет(Итог("Сумма")- Итог("Сумма")/100*Наценка.Наценка+Итог("СуммаНП")- Итог("СуммаНП")/100*Наценка.Наценка,Валюта,Курс,ВалютаПечати,Дата_Курса),ВалютаПечати,1));
		ПечВсегоНП=ФРМ(Пересчет(Итог("СуммаНП"),Валюта,Курс,ВалютаПечати,Дата_Курса),ВалютаПечати,1);
	КонецЕсли;
	
	ПечИтогоНаименований="Всего наименований "+КоличествоСтрок()+", на сумму "+Пересчет(Итог("Сумма")- Итог("Сумма")/100*Наценка.Наценка, Валюта,Курс,ВалютаПечати,Дата_Курса);
	ПечИтогоСумма="Сумма: "+СуммаПрописьюРасхНакл();
	ПечИтогКол=Итог("Количество");
	Таб.ВывестиСекцию("Секция_8");  
	
	Таб.ВывестиСекцию("Подвал"+Секц);
	Таб.Опции(0,0,0,0,ПарСтрДок);
	Таб.Показать("Печать накладной","");

КонецПроцедуры 
//*************************************
Процедура ПечНаклПФРаздельно(ПФ=0) 

	ИтогСуммНаклСкл	= 0;
	ИтогКолНаклСкл	= 0;
	ПечВрем = ТекущееВремя(); 
	
	Таб=СоздатьОбъект("Таблица");   
	Таб.ИсходнаяТаблица("Накладная");
	Таб.ВывестиСекцию("Шапка");
    
	ПечИтогСумма	= 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если ПФ=1 Тогда
			Если Товар.Вид.Признак = Перечисление.ВидыПродукции.Мороженое тогда
				Продолжить;
			КонецЕсли;
		Иначе
			Если Товар.Вид.Признак <> Перечисление.ВидыПродукции.Мороженое тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		ПечИтогСумма = ПечИтогСумма+Сумма;
		
	КонецЦикла;
	ПечИтогСумма = Формат(ПечИтогСумма,"Ч015.2, ");
	
	Таб.ВывестиСекцию("Таблица");
	
	ИтогВесТовара	= 0; 
	ПечИтогКолШт	= 0; 
	ПечИтогКол		= 0; 
    ПечИтогСумма	= 0;
	
	Ном	= 0;
	
	тз = создатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(тз);
	тз.НоваяКолонка("КодСорт");
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку()=1 Цикл
		тз.КодСорт = тз.Товар.КодСоответствияФас;
	КонецЦикла;                                 
	тз.Сортировать("КодСорт+");
	
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если ПФ=1 Тогда
			Если тз.Товар.Вид.Признак = Перечисление.ВидыПродукции.Мороженое тогда
				Продолжить;
			КонецЕсли;
		Иначе
			Если тз.Товар.Вид.Признак <> Перечисление.ВидыПродукции.Мороженое тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
			
		Ном = Ном+1; 
		
		ПечТовар 		= глПолнНаименованиеТовара(тз.Товар);
		ИтогВесТовара	= ИтогВесТовара+(тз.Товар.ВесТовара*тз.Количество*тз.Коэффициент/1000);    
		ПечИтогКолШт	= ПечИтогКолШт+тз.Количество*тз.Коэффициент; 
		ПечИтогКол		= ПечИтогКол + тз.Количество*тз.Коэффициент/тз.Товар.ЗначК; 
		ПечИтогСумма	= ПечИтогСумма + тз.Сумма;
		Таб.ВывестиСекцию("Секция_3"); 
		
	КонецЦикла;
	
	Если Ном = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	ПечИтогВес=ИтогВесТовара;
	ИтогСуммНаклСкл=ПечИтогСумма;
	ИтогКолНаклСкл=ПечИтогКол;
	
	Таб.ВывестиСекцию("Секция_5");
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,ПарСтрДок); 
	Таб.ПараметрыСтраницы(1,,,5,5,3,3,3,3,1,,); 
   	Таб.Показать();
   
	Таб.Напечатать(1);  
	
КонецПроцедуры
//*************************************
Процедура ПечатьНакладная() 
	
	Если Проведен()=0 Тогда
		Сообщить("Документ не проведен. Печать невозможна!!!");
		СтатусВозврата(0);
		Возврат;
		
	КонецЕсли;
	
	ПечНаклПФРаздельно(0);
	ПечНаклПФРаздельно(1);
	
КонецПроцедуры	
//*************************************
Процедура ВводНового(Скопирован)
	Если Скопирован=1 Тогда	//копирование документа
		Автор = Пользователь;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьШапку(Контекст);
	ПризнакНакладной=Перечисление.ПризнРасхНакл.Продажа;
	// Французов
	СтатусВСД = Перечисление.СтатусыВСД.Проект;
	//\\
	УчитыватьНП=0;
КонецПроцедуры    
//*************************************
Процедура ПТТН(Автомобиль, Водитель,ГосНомер,Удостоверение,Категор,НомерТТН)
	
	ПечВрем = ТекущееВремя();
	
	ФирмаПрод = Фирма1;	
	Фирма.ИспользоватьДату(ДатаДок);
	Фирма1.ИспользоватьДату(ДатаДок);
	ФирмаПрод.ИспользоватьДату(ДатаДок);
	
	Спр=СоздатьОбъект("Справочник.БанковскиеСчета");  
	Спр.ИспользоватьВладельца(ФирмаПрод); 
		
	Если ФирмаПрод = Константа.ОсновнаяФирма1 Тогда
		Спр.НайтиЭлемент(Константа.ОснКрайс);
	КонецЕсли;
	
	Если ФирмаПрод = Константа.ОсновнаяФирма2 Тогда
		Спр.НайтиЭлемент(Константа.ОснБорода);
	КонецЕсли;
		
	Таб=СоздатьОбъект("Таблица"); 
	Если НомерТТН="1208" Тогда
		Таб.ИсходнаяТаблица("ТТН_Новая1208л");
		Таб.ПараметрыСтраницы(2,,,,,,,,,1,,);
				
	Иначе
		Таб.ИсходнаяТаблица("ТТН");
		Таб.ПараметрыСтраницы(2,,,,,,,,,1,,);
		
	КонецЕсли;
	
	Если УчитыватьНП=1 Тогда
		Секц="|НП";
	Иначе
		Секц="|БезНП";
	КонецЕсли;  
	
	ПечОрг = СокрЛП(ФирмаПрод.ПолнНаименование)+ ", ЕГРИП: "+СокрЛП(ФирмаПрод.ЕГН)+", "+СокрЛП(ФирмаПрод.ПочтовыйАдрес)+", ИНН/КПП: "+СокрЛП(ФирмаПрод.ИНН)+"/"+СокрЛП(ФирмаПрод.КПП)+", №"+Спр.Номер+" "+СокрЛП(Спр.Банк)+", БИК "+СокрЛП(Спр.БИКБанка)+", к/с №"+СокрЛП(Спр.КоррСчетБанка);
	ПечФирма = СокрЛП(ФирмаПрод.ПолнНаименование)+", "+СокрЛП(ФирмаПрод.ЮридическийАдрес)+", ИНН/КПП: " + СокрЛП(ФирмаПрод.ИНН)+"/"+СокрЛП(ФирмаПрод.КПП)+", №" + Спр.Номер+" "+СокрЛП(Спр.Банк)+", БИК "+СокрЛП(Спр.БИКБанка)+", к/с №"+СокрЛП(Спр.КоррСчетБанка);
	
	Если СокрЛП(Клиент.ПолнНаименование)=СокрЛП(Клиент.Наименование) Тогда  	    
		ПечГрузополучатель =СокрЛП(Клиент.ПолнНаименование)+", "+СокрЛП(Клиент.АдресГрузополучателя)+", ИНН/КПП: "+СокрЛП(Клиент.ИНН)+"/"+СокрЛП(Клиент.КПП);
		
	Иначе
		ПечГрузополучатель =СокрЛП(Клиент.ПолнНаименование)+", "+СокрЛП(Клиент.АдресГрузополучателя);	
		
	КонецЕсли;

	Если СокрЛП(Клиент.АдресГрузополучателя)=СокрЛП(Клиент.Плательщик)  Тогда
		ПечКлиент = СокрЛП(Клиент.Наименование) +", "+ СокрЛП(Клиент.АдресГрузополучателя);;                              
	иначе
		ПечКлиент = СокрЛП(Клиент.Наименование) +", "+ СокрЛП(Клиент.ЮридическийАдрес)+", ИНН/КПП: "+СокрЛП(Клиент.ИНН)+"/"+СокрЛП(Клиент.КПП);;                                  
	КонецЕсли;  
	
	Если Число(ФирмаПрод.Код) = 11 Тогда
		ОтвЛица = " Рачков И.А.,                          Ионина Н.Г."; 
		
	ИначеЕсли Число(ФирмаПрод.Код) = 10 Тогда
		Приказы = СоздатьОбъект("Документ.ПриказПраваПодписи"); 
		Приказ = глПолучитьПриказПраваПодписи(ТекущийДокумент());
		Если Приказ = "" Тогда
			ОтвЛицо1 = "           ";
			ОтвЛицо2 = "";
		Иначе
			Приказы.НайтиДокумент(Приказ);
			Инд = 1;
			Пока Инд <= Мин(мКолвоПодписейТТН, Приказы.КоличествоСтрок()) Цикл
				Приказы.ПолучитьСтрокуПоНомеру(Инд);
				Текст = """" + глФИО(Приказы.ФизЛицо) + """";
				глУстановПараметр("ОтвЛицо" + Строка(Приказы.НомерСтроки), Текст);
				Инд = Инд + 1;
			КонецЦикла;	
		КонецЕсли;
		ОтвЛица = " " + ОтвЛицо1 + "                                "+ ОтвЛицо2;
		
	Иначе
		ОтвЛица = Фирма1.Руководитель;

	КонецЕсли;                                     
	
	Если НомерТТН="" Тогда
		Таб.ВывестиСекцию("Шапка"); 
		МаксКолСтр 		= 45;
		ТекСтр 			= 0;
		НомерСтраницы 	= 1;
		Страница 		= 1; 
		СтрокаКоличествоЛистов = 2;
		Таб.ВывестиСекцию("ЗаголовокТаб");
		
	КонецЕсли;
	
	Ном = 0;

	ИтогоКоличествоНаСтранице 	= 0;
	ИтогоСуммаНаСтранице 		= 0;
	ИтогоНДСНаСтранице 			= 0;
	ИтогоСуммаСНДСНаСтранице 	= 0;
	
	ИтогоКоличество = 0;
	ИтогоСумма  	= 0;
	ИтогоНДС  		= 0;
	ИтогоСуммаСНДС  = 0; 
	
	Мест 	= 0;
	Нетто 	= 0;
	ПечИтогСумма	= 0;
	ПечИтогСуммаНДС	= 0;
	ПечИтогВсегоСНДС= 0;
	
	ВСоставе=0; 
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл 
		Ном=Ном+1;
		Нетто	= Коэффициент*Количество*Товар.ВесТовара/1000+Нетто;		
		Мест	= Количество+Мест;
		
		ПечТовар 			= глПолнНаименованиеТовара(Товар);
		ЦенаТов 			= Цена;
		ПечЕдиница 			= Товар.БЕИ; 
		ПечКолвоВОдномМесте = Коэффициент; 
		ПечКоличествоМест 	= Количество;
		ПечКоличество 		= Количество*Коэффициент;
		СуммаБезНДС 		= Окр(Сумма-НДС,2,1);
		ПечНДС 				= НДС;
		СуммаСНДС 			= Сумма;  
			
		ПечНП = ФРМ(Пересчет(СуммаНП,Валюта,Курс,ВалютаПечати,Дата_Курса),ВалютаПечати,0); 
			
		ИтогоКоличествоНаСтранице 	= ИтогоКоличествоНаСтранице + ПечКоличество;
		ИтогоСуммаНаСтранице 		= ИтогоСуммаНаСтранице + СуммаБезНДС;     
		
		ИтогоНДСНаСтранице 			= ИтогоНДСНаСтранице + ПечНДС;
		ИтогоСуммаСНДСНаСтранице	= ИтогоСуммаСНДСНаСтранице + СуммаСНДС;
		
		ИтогоКоличество = ИтогоКоличество + ПечКоличество;
		ИтогоСумма  	= ИтогоСумма + СуммаБезНДС;
		ИтогоНДС  		= ИтогоНДС + ПечНДС;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС + СуммаСНДС;
		
		ТекСтр = ТекСтр + 1;
		
		Если НомерТТН="" Тогда
		
			Таб.ВывестиСекцию("Строка"); 
			Если ТекСтр = МаксКолСтр Тогда        
				
				ТекСтр = 0;                       
				НомерСтраницы = НомерСтраницы + 1;
				
				Таб.ВывестиСекцию("ИтогоПоСтранице");
				Таб.НоваяСтраница();
				Таб.ВывестиСекцию("ЗаголовокТаб");
				
				ИтогоКоличествоНаСтранице 	= 0;
				ИтогоСуммаНаСтранице 		= 0; 
				ИтогоНДСНаСтранице 			= 0;
				ИтогоСуммаСНДСНаСтранице 	= 0;
				МаксКолСтр = 57;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;                               
	
	НаСумму = Формат(ИтогоСуммаСНДС,"ЧПДС");
	Пропись("");
	ПечГлавБух =ФирмаПрод.ГлБухгалтер;
	
	Если НомерТТН="1208" Тогда 
		
		Таб.ВывестиСекцию("Лист1"); 
		
		Таб.НоваяСтраница(); 
		Таб.ИсходнаяТаблица("ТТН_Новая1208о");
		Таб.ВывестиСекцию("Лист2");
		
		Таб.ПараметрыСтраницы(1,,,5,5,5,5,0,0,1);
		Таб.Опции(0,0,0,0,ПарСтрДок);
		Таб.Защита(0);
		Таб.ТолькоПросмотр(1); 
		Таб.Показать("ТТН","");
		Таб.КоличествоЭкземпляров(2);

	Иначе   
		Таб.ВывестиСекцию("ИтогоПоСтранице");
		Таб.ВывестиСекцию("Всего");
		
		Если НомерСтраницы = 2 Тогда
			Если ТекСтр >36 Тогда                       
				СтрокаКоличествоЛистов = НомерСтраницы+1; 
				Таб.НоваяСтраница();
			иначе
				СтрокаКоличествоЛистов = НомерСтраницы+1;
			КонецЕсли;
		иначе
			Если ТекСтр >46 Тогда                       
				СтрокаКоличествоЛистов = НомерСтраницы+1; 
				Таб.НоваяСтраница();
			иначе
				СтрокаКоличествоЛистов = НомерСтраницы+1;
			КонецЕсли; 		
		КонецЕсли;
		Таб.ВывестиСекцию("Подвал");
		Таб.НоваяСтраница();
		Таб.ВывестиСекцию("Транспорт");
		
		ПечИтогоНаименований="Всего наименований "+КоличествоСтрок()+", на сумму "+Пересчет(Сумма,Валюта,Курс,ВалютаПечати,Дата_Курса);
		Таб.ПараметрыСтраницы(1,,,5,5,5,5,0,0,1);
		Таб.Опции(0,0,0,0,ПарСтрДок);
		Таб.ПараметрыСтраницы(2,,,,,,,,,1,,);
		Таб.Показать("Печать ТТН форма 1-Т","");
		Таб.КоличествоЭкземпляров(2);

	КонецЕсли;	
	
КонецПроцедуры
//*************************************
Функция Обр()
	перем Категор;
	Спр=Перечисление.КатегорияЦен;
	//Спр.ВыбратьЭлементы();
	СписВыб=СоздатьОбъект("СписокЗначений");
    КолПер=Спр.КоличествоЗначений();  
	инд=0;
	Для инд=1 по КолПер Цикл
		СписВыб.ДобавитьЗначение(Спр.ЗначениеПоНомеру(инд));
	КонецЦикла;
	стр=0;
    Банк1="";  
	
	Если СписВыб.ВыбратьЗначение(Банк1,"Выбор типа цен",стр,,0)>0 Тогда
		СписВыб.ПолучитьЗначение(стр,Банк1);    
		Категор=Спр.ЗначениеПоНомеру(стр); 
	КонецЕсли;   
	
	Возврат Категор; 
	
КонецФункции    
//*************************************
Процедура ПечатьТТН(номерТТН="")  
	ФлагПечати=0;
	РасхНаклПер=1;                    
	КонтекстФормы="";
	Категор = "";
	Если НомерТТН="" Тогда
		Категор=Обр();
	КонецЕсли;
	//СохранитьЗначение("Автомобиль","");
	//СохранитьЗначение("Водитель","");
	//СохранитьЗначение("ГосНомер","");
	//СохранитьЗначение("Удостоверение",""); 
	//СохранитьЗначение("ТранспортнаяКомпания","");
	//
	//ОткрытьФормуМодально("Отчет",,КаталогИБ()+"ExtForms\дляТТН.ert"); 
	//Автомобиль		= ВосстановитьЗначение("Автомобиль");
	//Водитель		= ВосстановитьЗначение("Водитель");
	//Удостоверение	= ВосстановитьЗначение("Удостоверение");
	//ТранспортнаяКомпания = ВосстановитьЗначение("ТранспортнаяКомпания");
	//
	//Если Водитель<>"" Тогда
		Если НомерТТН="" Тогда
			Парам = СоздатьОбъект("СписокЗначений");
			Парам.ДобавитьЗначение(ТекущийДокумент(),"Контекст");
			Парам.ДобавитьЗначение(1,"Устройство");  
			//Парам.ДобавитьЗначение(Автомобиль,"Автомобиль");
			//Парам.ДобавитьЗначение(СокрЛП(Автомобиль.ГосНомер),"ГосНомер");
			//Парам.ДОбавитьЗначение(Водитель,"Водитель"); 
			//Парам.ДОбавитьЗначение(Категор,"КатегорияЦен"); 
			Парам.ДобавитьЗначение(2,"КоличествоКопий");
		    ОткрытьФорму("Отчет",Парам,КаталогИБ()+"ExtForms\PrnForms\ТТН_1Т.ert");
			
		Иначе     
			Парам = СоздатьОбъект("СписокЗначений");
			Парам.ДобавитьЗначение(ТекущийДокумент(),"Контекст");
			//Парам.ДобавитьЗначение(Автомобиль,"Автомобиль");
			//Парам.ДобавитьЗначение(СокрЛП(Автомобиль.ГосНомер),"ГосНомер");
			//Парам.ДОбавитьЗначение(Водитель,"Водитель"); 
			Парам.ДобавитьЗначение(1,"Устройство");
			Парам.ДобавитьЗначение(2,"КоличествоКопий");   
			//Парам.ДобавитьЗначение(ТранспортнаяКомпания,"ТранспортнаяКомпания");   
			ОткрытьФорму("Отчет",Парам,КаталогИБ()+"ExtForms\PrnForms\ТТН1208л.ert");
			
		КонецЕсли;
		//ПТТН(Автомобиль,Водитель,Автомобиль.ГосНомер,Удостоверение,Категор,НомерТТН);	
	//КонецЕсли;
	//Авто   = Автомобиль;
	//Вод    = Водитель;
	//Удост  = Удостоверение;
	//Кат    = Категор;
	
КонецПроцедуры 
//*************************************
Процедура Подпись() 
	Если Подписан = 0 Тогда
		Подписан = 2
	Иначе
		Подписан = 0
	КонецЕсли;
КонецПроцедуры 
//*************************************
Процедура СортироватьСтроки()
	тз = создатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(тз);
	УдалитьСтроки();
	тз.НоваяКОлонка("КодСорт","Строка",100);
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку()=1 Цикл
		тз.КодСорт = тз.Товар.КодСоответствияФас;
	КонецЦикла;
	тз.Сортировать("КодСорт+");
	ЗагрузитьТабличнуюЧасть(тз);
	тз.УдалитьСтроки();
	
КонецПроцедуры
//*************************************
Функция ВыбратьДанныеОперации(ОсновнойДокумент)
    
	ДанныеОперации = СоздатьОбъект("СписокЗначений");
	ДанныеОперации.ДобавитьЗначение(ОсновнойДокумент, "ОсновнойДокумент");
    
    ОсновнойДокументПоРеализации = глмСерииНоменклатуры
		.ОсновнойДокументПоРеализации(ОсновнойДокумент);
	
	Если ОсновнойДокументПоРеализации <> ОсновнойДокумент Тогда
		ДанныеОперации.ДобавитьЗначение("20004", "Ошибка");
		ДанныеОперации.Установить("ОсновнойДокумент", 
			ОсновнойДокументПоРеализации);
		
		Возврат ДанныеОперации;		
    
	ИначеЕсли ОсновнойДокумент.Проведен() = 0 Тогда
		ДанныеОперации.ДобавитьЗначение("20003", "Ошибка");
		Возврат ДанныеОперации;	
	
	ИначеЕсли ОсновнойДокумент.Склад = мКонстСкладПД Тогда	
		ДанныеОперации.ДобавитьЗначение("20007", "Ошибка");
		Возврат ДанныеОперации;	

	КонецЕсли;	
	
	Возврат ДанныеОперации;
	
КонецФункции	
//*************************************
Процедура кнОформитьВСД()
	
	глмСтатусыВСД.ПередатьДанныеОперацииНаПодготовкуТранзакции(Контекст);
	
КонецПроцедуры
//*************************************
Процедура кнПринятьРезультат()

	тзОшибкиСертификатов = глмСерииНоменклатуры.ПолучитьРезультатОбработкиОперации(Контекст, "");

	тзОшибкиСертификатов.ВыбратьСтроки();
	Пока тзОшибкиСертификатов.ПолучитьСтроку() = 1 Цикл
		
		тКодОшибки = СтрЗаменить(тзОшибкиСертификатов
			.КодОшибки, ":", РазделительСтрок);
		
		КодОшибки = СтрПолучитьСтроку(тКодОшибки, 1);
		
		Если КодОшибки = "5.1" Тогда
			
			тзОшибкиСертификатов.КодОшибки = "0.9:" + глмСерииНоменклатуры
				.КодыОшибок.Получить("00016")
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	глмСерииНоменклатуры.ЗаписатьРезультатОбработкиОперации(тзОшибкиСертификатов);

КонецПроцедуры
//*************************************
Процедура кнУдалитьРезультат()
	
	тзОшибкиСертификатов = глмСерииНоменклатуры.ПолучитьРезультатОбработкиОперации(Контекст, "");
	
	тзОшибкиСертификатов.ВыбратьСтроки();
	Пока тзОшибкиСертификатов.ПолучитьСтроку() = 1 Цикл
		
		тКодОшибки = СтрЗаменить(тзОшибкиСертификатов
			.КодОшибки, ":", РазделительСтрок);
		
		КодОшибки = СтрПолучитьСтроку(тКодОшибки, 1);
		
		Если КодОшибки = "5.1" Тогда
			
			тзОшибкиСертификатов.КодОшибки = "2.1:" + глмСерииНоменклатуры
				.КодыОшибок.Получить("00012")
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	глмСерииНоменклатуры.ЗаписатьРезультатОбработкиОперации(тзОшибкиСертификатов);
	
КонецПроцедуры
//*************************************
Функция СформироватьКонтекстноеМеню(ВыбПарам) Экспорт
	
	ВыбПарам.Добавить("Открыть");
	ВыбПарам.Добавить("НайтиВЖурнале", "Найти в журнале");
	ВыбПарам.Добавить("УстановитьСтатусСертификатов", "Установить статус сертификатов");
	
	Возврат ВыбПарам;

КонецФункции	
//*************************************
Функция УстановитьСтатусСертификатов(ВыбПарам)
	Перем ВыбЗнач;
	
	Если ВвестиСтроку(ВыбЗнач, "Новый статус сертификатов:",38 ,, 60) = 1 Тогда
		
		Если СтрЧислоВхождений(ВыбЗнач, ":") = 1 Тогда
			
			глмКорректировкаЗаписейРегистров.ОтклДвижения = 0;
			глмКорректировкаЗаписейРегистров.ДатаДок = ДатаДок;
			глмКорректировкаЗаписейРегистров.КорректировкаЗаписейРегистров = ТекущийДокумент();
			глмКорректировкаЗаписейРегистров.ЗагрузитьНаборДвижений(ТекущийДокумент());
			
			НаборДвижений = глмКорректировкаЗаписейРегистров.НаборДвижений;
		    
			тзОшибки = НаборДвижений.Получить("ОшибкиСертификатов");

			тзОшибки.ВыбратьСтроки();
			Пока тзОшибки.ПолучитьСтроку() = 1 Цикл
				
				тКодОшибки = СтрЗаменить(тзОшибки
					.КодОшибки, ":", РазделительСтрок);
				
				КодОшибки = СтрПолучитьСтроку(тКодОшибки, 1);
				
				Если КодОшибки = "0.9" Тогда
	// редактирование записей по созданным сертификатам 
	// возможно только в режиме редактирования записей 
	// движений документа вручную либо переотправлением 
	// всего документа из режима "Проект" в режим 
	// "Оформлен"
					Продолжить;
				КонецЕсли;	

				тзОшибки.КодОшибки = ВыбЗнач;
				
			КонецЦикла;	

			НаборДвижений.Установить("ОшибкиСертификатов", тзОшибки);

			глмКорректировкаЗаписейРегистров.ЗаписатьНаборДвижений(Контекст);

		КонецЕсли;	
		
	КонецЕсли;	
	
	Возврат 1;
	
КонецФункции	
//------------------------------------------?
Процедура ПриОткрытии()  
	
	// Французов: отключено
	//глмЗагрузкаДанных.ЗагрузитьОбразОбъектаВКонтекст(Контекст, 12, 1);    
	//\\
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);

	ПроверкаРазрешенияРедактирования(Контекст);  
	
	//Если  (НазваниеНабораПрав()<>"Администратор") и (ДатаДок<=Константа.ДатаЗапретаОстатков)  Тогда
	//	Форма.ТолькоПросмотр(1) ;
	//КонецЕсли;       
	
	Если (ИмяПользователя()="АдмРоз") и (СокрЛП(Склад.Наименование)="РозничныйСклад") Тогда
	    Форма.ТолькоПросмотр(0); 
	
	КонецЕсли; 
	
	//КОВ 23.05.2018
	Если СуммаЧека>0 Тогда
	    Форма.толькоПросмотр(1);
		
	КонецЕсли;
	
	Если Форма.ТолькоПросмотр()=1 Тогда
		Форма.КнФирма.Доступность(0);
		Форма.КнСклад.Доступность(0);
		Форма.КнВалюта.Доступность(0);
		Форма.КнПровести.Доступность(0);
		Форма.ВводСчФ.Доступность(0);
		Форма.ПодборПоКаталогу.Доступность(0);
		Форма.ОК.Доступность(0);  
		Форма.КнопкаПоУмолчанию("Закрыть");
	Иначе
		Форма.КнопкаПоУмолчанию("ОК");
	КонецЕсли;     
	
	Если СокрЛП(Пользователь.Подразделение.Наименование)="СОП" Тогда
		Если СокрЛП(глПодразделениеКонтрагента(Клиент))<>"СОП" Тогда 
			Форма.кнРассчитатьЦены.Видимость(0); 
			//Форма.кнУстЦены.Видимость(0);
			Форма.СуммаСкидки.Видимость(0);
			Форма.рСкидка.Видимость(0);
		КонецЕсли;
	Иначе
		Форма.кнУстЦены.Видимость(0); 
		Форма.кнРассчитатьЦены.Видимость(0); 
		Форма.СуммаСкидки.Видимость(0);
		Форма.рСкидка.Видимость(0);
	КонецЕсли;
	
	// Французов
	Парам = Форма.Параметр;
    
	Если ПустоеЗначение(Парам) = 1 Тогда
		Если СтатусВСД = Перечисление.СтатусыВСД.Подписан Тогда
			глмОграничениеДоступа.ЗапретитьРедактированиеШапкиИПроведение(Контекст);
		КонецЕсли;
	
		ДанныеОперации = глмСтатусыВСД.ВыбратьДанныеОперации(Контекст);	
		
		Если ПустоеЗначение(ДанныеОперации.Получить("Ошибка")) = 0 Тогда
			
			Форма.Серия.Доступность(0);
			
		КонецЕсли;
	КонецЕсли;
	//\\
	
	ПроводитьПослеТА(1,1); 
	
	// поиск выписанных подчиненных документов.
	СФ = глНайтиСчетФактуру(Контекст, "Счет_фактура");
	Если ПустоеЗначение(СФ)=0 Тогда
		Форма.ТекстСчФ.Заголовок("№"+СокрЛП(СФ.НомерДок)+" от "+СФ.ДатаДок);
	КонецЕсли;  
	
	РассчитатьОбъем();

КонецПроцедуры
//**************************************
Процедура ВводНаОсновании(ДокОснование)
	ВидДокОсн=ДокОснование.Вид();
	Если 	(ВидДокОсн="Счет")	или	(ВидДокОсн="ПриходнаяНакладная") Тогда
		ЗаполнитьШапкуНаОсн(Контекст,ДокОснование);
		ПризнакНакладной=Перечисление.ПризнРасхНакл.Продажа;
		СтатусВСД = Перечисление.СтатусыВСД.Проект;
		Если (ВидДокОсн="ПриходнаяНакладная") Тогда
			Если (ДокОснование.ПризнакНакладной<>Перечисление.ПризнПрихНакл.ВозвратОтПокупателя) Тогда
				ПризнакНакладной = Перечисление.ПризнРасхНакл.ВозвратПоставщику;

			КонецЕсли;
		
		КонецЕсли;   
		
		ДатаДок=РабочаяДата();
		
		Если (ВидДокОсн="Счет") Тогда
			Склад		= Константа.ОсновнойСклад;
			УчитыватьНП = ДокОснование.УчитыватьНП; 
			
		Иначе
			Склад		= ДокОснование.Склад;
			УчитыватьНП=0;  
			
		КонецЕсли;	
		
		Валюта		= ДокОснование.Валюта;
		Дата_Курса	= ДокОснование.Дата_Курса;
		Курс		= ДокОснование.Курс;
		Клиент		= ДокОснование.Клиент;
		
		Валюта_Прежн= Валюта;
		Курс_Прежн  = Курс;
		ВыборКлиента();
		ДокументОснование = ДокОснование;   
		
		Основание = Основание + ВидДокОсн+" № " + ДокОснование.НомерДок + " от " + ДокОснование.ДатаДок;
			
		ДокОснование.ВыбратьСтроки();
		Пока ДокОснование.ПолучитьСтроку()=1 Цикл
			Если ДокОснование.Товар.Выбран()=0 Тогда
				Продолжить;
				
			КонецЕсли;
			
			Если ДокОснование.Товар.ВидТовара=Перечисление.ВидыТоваров.Услуга Тогда
				Продолжить;
				
			КонецЕсли;
				
			НоваяСтрока();
			Товар		= ДокОснование.Товар;
			Цена		= ДокОснование.Цена;
			Количество	= ДокОснование.Количество;
			Попытка
				Единица	= ДокОснование.Един;
			Исключение
			КонецПопытки;
			Попытка
				ЦенаКор = ДокОснование.Цена*ДокОснование.Коэффициент;
			Исключение
			КонецПопытки;
			
			Коэффициент	= ДокОснование.Коэффициент;
			Сумма		= ДокОснование.Сумма;
			НДС			= ДокОснование.НДС;
			СуммаНП		= ДокОснование.СуммаНП;
		    СтНдс		= ДокОснование.Товар.СтавкаНДС.Получить(ДокОснование.ДатаДок); 
			
		КонецЦикла;
		
	Иначе
		Предупреждение("Расходную накладную нельзя вводить на основании выбранного вида документа!",4);
		СтатусВозврата(0);
		
	КонецЕсли;
	
КонецПроцедуры
//*******************************************************
Процедура ПриЗакрытии()
	//СохранитьЗначение("ВалютаПечатиРасхНакл",ВалютаПечати);
КонецПроцедуры
//------------------------
Процедура ПриЗаписи()
	Если МожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);                    
	КонецЕсли;
	//СортироватьСтроки("+Товар,-Коэффициент");
КонецПроцедуры

//*************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	вызывается по кнопке печать
//
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	// проверим полномочия печати непроведенных документов
	//Если (Проведен()=0)  Тогда
	////Или ((Проведен()=1) И (Модифицированность()=1)) Тогда
	//	//Если глПолучитьПолномочие("РазрешитьПечатьНепроведенныхДокументов") = 0 Тогда
	//		Предупреждение("Недостаточно полномочий для печати непроведенного документа!", 60);
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	
	//Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
	//	НомерТекущейФормы = 1;
	//	Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	//КонецЕсли;
	//
	//Если НомерТекущейФормы = 1  Тогда
	//Печать(СразуНаПринтер, КолЭкз);
	//	ПечатьТорг12();
	//Иначе
	Параметры = СоздатьОбъект("СписокЗначений");
	Параметры.ДобавитьЗначение(ТекущийДокумент(),"Контекст");
	//Параметры.ДобавитьЗначение(?((Модифицированность()=0) и (ПустоеЗначение(ТекущийДокумент())=0), ТекущийДокумент(), глВзятьКонтекст(Контекст)), "Контекст");
	Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
	//Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
	Параметры.ДобавитьЗначение(1, "КоличествоКопий");
	
	ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл")); 
	
	//КонецЕсли;

КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Параметры:
//  нет.    
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  Открывает список с выбором способа печати. После выбора способа формирует
//  таблицу по выбранному способу.

Процедура ПоКнопкеВыборПечатнойФормы()
	                                   
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать(1);
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()  
//*************************************
// ИнформацияОНоменклатуре()
//
// Параметры: 
//  Нет
//
// Возвращаемое значение: 
//  Строка информации о Номенклатуре в документе
//
// Описание:
// 	Формирует строку, включающую название, артикул Номенклатуры, реквизиты партии
//
Функция ИнформацияОНоменклатуре()
	
	ИнфоТекст="";
	
	Если товар.Выбран()=0 Тогда
		Возврат(ИнфоТекст);
	КонецЕсли;
	
	ИнфоТекст="("+Товар.Код+") "+глПолнНаименованиеТовара(Товар)+"  //"+СокрЛП(Товар.Произв)+"//";
	
	Возврат(ИнфоТекст);
	
КонецФункции //ИнформацияОНоменклатуре()  
//*************************************
Процедура ВыборПечФормы()  
	
	Перем резвыбор,номерстроки;
	
	Список = СоздатьОбъект("СписокЗначений");	
	Список.ДобавитьЗначение("Печ1", "Печатная форма товарной накладной");	
	Список.ДобавитьЗначение("Печ2", "Печатная форма для склада");
 	Список.ДобавитьЗначение("Печ3", "Сертификаты");	
	Список.ДобавитьЗначение("Печ4", "Статусы сертификатов");

	Если Список.ВыбратьЗначение(резвыбор, "", номерстроки, 60, 1) <> 1 Тогда
		Возврат;	
	КонецЕсли;     
	
	Если НомерСтроки = 1 Тогда 
		//Печать1();
		Парам = СоздатьОбъект("СписокЗначений");
		Парам.ДобавитьЗначение(ТекущийДокумент(),"Контекст");
		Парам.ДобавитьЗначение(1,"Устройство");
		Парам.ДобавитьЗначение(1,"КоличествоКопий"); 
		ОткрытьФорму("Отчет",Парам,КаталогИБ()+"ExtForms\PrnForms\ТоварнаяНакладная.ert"); 
		Возврат;
	ИначеЕсли НомерСтроки = 2 Тогда 
		//ПечатьНакладная(); 
		Парам = СоздатьОбъект("СписокЗначений");
		Парам.ДобавитьЗначение(ТекущийДокумент(),"Контекст");
		Парам.ДобавитьЗначение(1,"Устройство");
		Парам.ДобавитьЗначение(1,"КоличествоКопий"); 
		ОткрытьФорму("Отчет",Парам,КаталогИБ()+"ExtForms\PrnForms\ДляСклада.ert"); 
		Возврат;
	ИначеЕсли НомерСтроки = 3 Тогда 
		//Печать1();
		Парам = СоздатьОбъект("СписокЗначений");
		Парам.ДобавитьЗначение(ТекущийДокумент(),"Контекст");
		Парам.ДобавитьЗначение(1,"Устройство");
		Парам.ДобавитьЗначение(1,"КоличествоКопий"); 
		ОткрытьФорму("Отчет",Парам,КаталогИБ()+"ExtForms\Сертификаты.ert"); 
		Возврат;
	ИначеЕсли НомерСтроки = 4 Тогда 
		//ПечатьНакладная(); 
		Парам = СоздатьОбъект("СписокЗначений");
		Парам.ДобавитьЗначение(ТекущийДокумент(),"Контекст");
		Парам.ДобавитьЗначение(1,"Устройство");
		Парам.ДобавитьЗначение(1,"КоличествоКопий"); 
		ОткрытьФорму("Отчет",Парам,КаталогИБ()+"ExtForms\ОшибкиСертификатов.ert"); 
		Возврат;
	
	КонецЕсли;  
	
КонецПроцедуры 
//*************************************
Процедура ПриВыбореТТН()       
	
	Перем резвыбор,номерстроки;
	
	список = создатьОбъект("СписокЗначений");
	список.ДобавитьЗначение("Печ1","ТТН № 1208 (новая)");
	список.ДобавитьЗначение("Печ2","ТТН"); 
	
	Если Список.ВыбратьЗначение(резвыбор, "", номерстроки, 60, 1) <> 1 Тогда
		Возврат;	
	КонецЕсли;     
	
	Если НомерСтроки = 1 Тогда 
		ПечатьТТН("1208");
		Возврат;
	ИначеЕсли НомерСтроки = 2 Тогда 
		ПечатьТТН(); 
		Возврат;
	КонецЕсли;  
	
КонецПроцедуры
//************************************* 
Процедура ВыбратьЭкспедитора()
	Перем выбЗнач;
	
	Если ВвестиЗначение(выбЗнач,"Выберите экспедитора","Справочник.Экспедиторы")>0 Тогда
		Экспедитор = выбЗнач;
		
	КонецЕсли;
	
КонецПроцедуры 
//*************************************
Процедура ПриВыбореФирмы1()
	// Французов
	ПодотчОбъект = Фирма1.ОсновнойПодотчОбъект;
	//\\
	Если Фирма1.ПлательщикНДС.Получить(ДатаДок) <> 1 Тогда
		Если Итог("НДС")>0 Тогда
			Предупреждение("Сумма НДС = "+Итог("НДС")+"."+РазделительСтрок+
					"Фирма "+Фирма1+" не является плательщиком НДС."+РазделительСтрок+
					"Реквизит НДС по товарам будет обнулен.",30);  
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				СтНДС 		= Перечисление.ЗначенияНДС.БезНДС;
				СтавкаНДС 	= "";
				НДС			= 0;
			КонецЦикла;
			
		КонецЕсли;
	
	Иначе
		Если Итог("НДС")=0 Тогда
			Предупреждение("Сумма НДС = "+Итог("НДС")+"."+РазделительСтрок+
					"Фирма "+Фирма1+" является плательщиком НДС."+РазделительСтрок+
					"Реквизит НДС по товарам будет рассчитан.",30);  
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				СтНДС 		= Товар.СтавкаНДС.Получить(РабочаяДата());
				ЗнСт		= Лев(Строка(СтНДС),2);
				СтавкаНДС	= Число(ЗнСт);
				НДС			= Сумма*СтавкаНДС/(100+СтавкаНДС);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
//*************************************
Функция Взаиморасчеты()
	рез = "";
	
	Если Клиент.Выбран()=1 Тогда
		Если Клиент.ЭтоГруппа()=0 Тогда
			рез = "Текущий долг: "+СокрЛП(Формат(регистр.ВзаиморасчетыПокупателей.Остаток(Клиент,"Долг"),"Ч015.2. ")); 
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат рез;

КонецФункции   
//*************************************
Процедура ВыбратьСклад()  
	Перем выбЗнач;
	
	Если ВвестиЗначение(выбЗнач,"Выберите склад","Справочник.МестаХранения")>0 Тогда
		Склад = выбЗнач;
		
	КонецЕсли;
	
КонецПроцедуры
//*************************************
Процедура ВыбратьПодотчОбъект()
	
	спрПодотчОбъекты = СоздатьОбъект("Справочник.схПодотчетныеОбъекты");
	спрПодотчОбъекты.ИспользоватьВладельца(Фирма1);
	Если спрПодотчОбъекты.Выбрать("Подотчетный объект (""" 
		+ Фирма1 + """)", "ФормаСписка") = 1 Тогда
			ПодотчОбъект = спрПодотчОбъекты.ТекущийЭлемент();
	КонецЕсли;	
	
КонецПроцедуры	
//*************************************
Процедура РассчитатьОбъем()
	Объем = 0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		ОбъемКор = Товар.ШиринаКоробки*Товар.ВысотаКоробки*Товар.ДлинаКоробки/1000000000;
		Объем = Объем+ОбъемКор*Количество/Товар.ЗначК*Коэффициент;
	КонецЦикла;
	
КонецПРоцедуры
//*************************************
Процедура ПриОкончанииРедактированияСтроки()
	РассчитатьОбъем();  
	
КонецПроцедуры 
//*************************************
Процедура РассчитатьЦены(реж=0)
	Перем выбЗнач, номпоз;
	
	тКЦенПФ = "";
	тКЦенЗам = "";
	СкидкаМор 	= 0;
	скидкаПфб 	= 0;
	СкидкаЗам 	= 0;
	сз = создатьОбъект("СписокЗначений");
	спрКатегорииЦен = создатьОбъект("Справочник.КатегорииЦен");  
	спрКатегорииЦен.ПорядокКодов();
	если реж=0 Тогда
		спрКатегорииЦен.ВыбратьЭлементы();
		Пока спрКатегорииЦен.ПолучитьЭлемент()=1 Цикл 
			Если (СокрЛП(спрКатегорииЦен.Код)="2") или (сокрЛП(спрКатегорииЦен.Код)="3") Тогда     //приходная и себест.
				Продолжить;
				
			КонецЕсли;
			
			тПодраздел = Пользователь.Подразделение; 
			//Если тПодраздел<>спрКатегорииЦен.Подразделение Тогда
			Если глВИерархии(тПодраздел, спрКатегорииЦен.Подразделение)=0 Тогда
				Продолжить;
				
			КонецЕсли;
			сз.ДобавитьЗначение(спрКатегорииЦен.ТекущийЭлемент(),СокрЛП(спрКатегорииЦен.Наименование));
			
		КонецЦикла;	
		
		Если сз.ВыбратьЗначение(выбЗнач,,НомПоз,,1)<>1 Тогда
			СтатусВозврата(0);
			Возврат;
			
		КонецЕсли;
		
		тКЦен = сз.ПолучитьЗначение(НомПоз);
		
		Ответ = Вопрос("Вы действительно хотите рассчитать цены по категории: "+СокрЛП(тКЦен.КатегорияЦен)+".","Да+Нет");
		Если Ответ<>"Да" Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		
	Иначе   
		КЦенПФ = Клиент.КатегорЦенаПФ; 
		КЦенЗам = Клиент.КатегорЦенаЗам;
		СкидкаМор 	= Клиент.Скидка.Получить(ДатаДок);
		скидкаПфб 	= Клиент.СкидкаПфб.Получить(ДатаДок);
		СкидкаЗам 	= Клиент.СкидкаЗам.Получить(ДатаДок);
		спрКатегорииЦен.выбратьЭлементы();
		Пока спрКатегорииЦен.ПолучитьЭлемент()=1 Цикл
			Если спрКатегорииЦен.КатегорияЦен = Клиент.КатегорЦена Тогда
				тКЦен = спрКатегорииЦен.текущийЭлемент();
			КонецЕсли; 
			
			Если ПустоеЗначение(КЦенПФ)=0 Тогда    
				Если спрКатегорииЦен.КатегорияЦен = КЦенПФ Тогда
				    тКЦенПФ = спрКатегорииЦен.ТекущийЭлемент();
					
				КонецЕсли;				
				
			КонецЕсли; 
			Если ПустоеЗначение(КЦенЗам)=0 Тогда    
				Если спрКатегорииЦен.КатегорияЦен = КЦенЗам Тогда
				    тКЦенЗам = спрКатегорииЦен.ТекущийЭлемент();
					
				КонецЕсли;				
				
			КонецЕсли;
			
		КонецЦикла;	
		
	КонецЕсли;

	спрТовары = СоздатьОбъект("Справочник.Номенклатура");
	спрТовары.ИспользоватьДату(ДатаДок);  
	
	//КОВ 16.02.2015 первый лист ТТН
	сзВидыТоваров = СоздатьОбъект("СписокЗначений");
	файлВидовСоСкидкой = КаталогИБ()+"\ExtForms\PrnForms\Скидка10.txt";
	текст = СоздатьОбъект("Текст");
	Текст.Открыть(файлВидовСоСкидкой);
	Для сч=1 по Текст.КоличествоСтрок() Цикл
		КодВида = СокрЛП(текст.ПолучитьСтроку(сч));
		сзВидыТоваров.ДобавитьЗначение(КодВида);
		
	КонецЦикла;   
	Ответ = "";
	Если сзВидыТоваров.размерСписка()>0 Тогда
		Ответ = Вопрос("Пересчитать цены по акционным товарам (скидка 10%)?","Да+Нет");	    
	КонецЕсли;

	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл   
		спрТовары.НайтиЭлемент(товар);
		
		Если спрТовары.Вид.Признак = Перечисление.ВидыПродукции.Мороженое тогда
			Цена = спрТовары.ПолучитьАтрибут(СокрЛП(тКЦен.Метаданные))*(1-СкидкаМор/100); 
			
		ИначеЕсли спрТовары.Вид.Признак = Перечисление.ВидыПродукции.ПФ тогда
			Цена = спрТовары.ПолучитьАтрибут(СокрЛП(тКЦен.Метаданные))*(1-СкидкаПфб/100); 
			Если ПустоеЗначение(ткЦенПФ)=0 тогда
				Цена = спрТовары.ПолучитьАтрибут(СокрЛП(тКЦенПФ.Метаданные));  
				
			КонецЕсли;
			
		ИначеЕсли спрТовары.Вид.Признак = Перечисление.ВидыПродукции.Заморозка тогда
			Цена = спрТовары.ПолучитьАтрибут(СокрЛП(тКЦен.Метаданные))*(1-СкидкаЗам/100); 
			Если ПустоеЗначение(ткЦенЗам)=0 тогда
				Цена = спрТовары.ПолучитьАтрибут(СокрЛП(тКЦенЗам.Метаданные));  
				
			КонецЕсли;
		Иначе                                                         
			Цена = спрТовары.ПолучитьАтрибут(СокрЛП(тКЦен.Метаданные));
					
		КонецЕсли;   
		
		Если (СкидкаМор+СкидкаПФб+СкидкаЗам)<>0 Тогда
		    ЦенаЦены_ = Окр(Цена,2,1);       //10,08
			Копейки = (ЦенаЦены_-Цел(ЦенаЦены_))*100;      			//10
			Если Копейки<10 Тогда
				Копейки = 10/100;
			Иначе
				ЗначОкр = ?(Число(Прав(Копейки,1))=0,0,10);
				Копейки = (Число(Лев(Копейки,1))*10+ЗначОкр)/100;
			КонецЕсли;   

			Цена = Цел(ЦенаЦены_)+Копейки;
			
		КонецЕсли;
		
		Если сзВидыТоваров.НайтиЗначение(СокрЛП(спрТовары.ВидыТовара.Код))>0 Тогда                                            
			Если Ответ="Да" Тогда
				Цена = Окр(Цена*0.9,2);  
				сообщить("Строка "+НомерСтроки+" для товара "+глПолнНаименованиеТовара(Товар)+" цена рассчитана со скидкой 10%.");
			КонецЕсли;
		КонецЕсли;
		Сумма	= Цена*Коэффициент*Количество;
		ЦенаКор = Цена*Коэффициент;
	    
		ЗнСт	= Число(Лев(Строка(СтНДС),2)); 
		
		Если знСт>0 Тогда
			НДС	= Сумма*знСт/(100+знСт);
			
		КонецЕсли;
		
	КонецЦикла;   
	
	ТипЦен = тКЦен.КатегорияЦен;
	
КонецПроцедуры
//*************************************
Процедура РассчитатьСкидку() 
	
//	Если СуммаСкидки>=Итог("Сумма") Тогда
//		Предупреждение("Сумма скидки превышает сумму документа. Скидка не рассчитана!!!",60);
//		СтатусВозврата(0);
//		Возврат;
//		
//	КонецЕсли;
//	
//	СкидкаМ 	= Клиент.Скидка.Получить(ДатаДок);
//	СкидкаПФ 	= Клиент.СкидкаПфб.Получить(ДатаДок);
//	СкидкаЗам 	= Клиент.СкидкаЗам.Получить(ДатаДок);
//	спрЦ = создатьОбъект("Справочник.КатегорииЦен");
//	спрЦ.ВыбратьЭлементы();
//	Пока спрЦ.ПолучитьЭлемент()=1 Цикл
//		если спрЦ.КатегорияЦен = Клиент.КатегорЦена Тогда
//			ИмяКатегории = СокрЛП(спрЦ.Метаданные);
//			прервать;
//			
//		КонецЕсли;
//		
//	КонецЦикла;       
//	спрТовары = СоздатьОбъект("Справочник.Номенклатура");
//	спрТовары.ИспользоватьДату(ДатаДок);	
//	
//	Если СуммаСкидки=0 Тогда
//		Ответ = Вопрос("Рассчитать цены клиента на дату документа без учета скидки?","Да+Нет");
//		Если Ответ = "Нет" Тогда
//			СтатусВозврата(0);
//			Возврат;
//			
//		Иначе     
//			//вернем цены по категории клиента
//			ВыбратьСтроки();
//			Пока ПолучитьСтроку()=1 Цикл
//				спрТовары.НайтиЭлемент(товар);
//				
//				Цена 	= спрТовары.ПолучитьАтрибут(ИмяКатегории);
//				Если спрТовары.Вид.Признак = Перечисление.ВидыПродукции.ПФ Тогда                                            
//					Цена = Окр(Цена*(1-СкидкаПФ/100),2,1);
//					
//				ИначеЕсли спрТовары.Вид.Признак = Перечисление.ВидыПродукции.Мороженое Тогда                                            
//					Цена = Окр(Цена*(1-СкидкаМ/100),2,1);
//					
//				ИначеЕсли спрТовары.Вид.Признак = Перечисление.ВидыПродукции.Заморозка Тогда                                            
//					Цена = Окр(Цена*(1-СкидкаЗам/100),2,1);
//				
//				КонецЕсли;
//				
//				Сумма	= Цена*Коэффициент*Количество;
//				ЦенаКор = Цена*Коэффициент;
//				
//				ЗнСт	= Число(Лев(Строка(СтНДС),2)); 
//				
//				Если знСт>0 Тогда
//					НДС	= Сумма*знСт/(100+знСт);
//					
//				КонецЕсли;    
//				
//			КонецЦикла;
//			СтатусВозврата(0);
//			Возврат;
//			
//		КонецЕсли;
//		
//	КонецЕсли;     
//	
//	//рассчет цен со скидкой
//	//подсчет суммы документа без скидки (чтобы исключить нарастающий расчет скидки при неоднократном нажатии кн."Устан.цены")
//	БылаСуммаБезСкидки = 0;
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку()=1 Цикл
//		спрТовары.НайтиЭлемент(товар);
//		
//		тЦена 	= спрТовары.ПолучитьАтрибут(ИмяКатегории);
//		Если спрТовары.Вид.Признак = Перечисление.ВидыПродукции.ПФ Тогда                                            
//			тЦена = Окр(тЦена*(1-СкидкаПФ/100),2,1);
//			
//		ИначеЕсли спрТовары.Вид.Признак = Перечисление.ВидыПродукции.Мороженое Тогда                                            
//			тЦена = Окр(тЦена*(1-СкидкаМ/100),2,1);
//			
//		ИначеЕсли спрТовары.Вид.Признак = Перечисление.ВидыПродукции.Заморозка Тогда                                            
//			тЦена = Окр(тЦена*(1-СкидкаЗам/100),2,1);
//			
//		КонецЕсли;
//		
//		БылаСуммабезСкидки	= БылаСуммаБезСкидки+тЦена*Коэффициент*Количество;
//				
//	КонецЦикла;
//	
//	ПроцентСкидки = Окр(1-СуммаСкидки/БылаСуммабезСкидки,8);  
//	ОбщаяСуммаСкидки = 0;
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку()=1 Цикл 
//		спрТовары.НайтиЭлемент(товар);
//
//		БылаЦена 	= спрТовары.ПолучитьАтрибут(ИмяКатегории);
//		Если спрТовары.Вид.Признак = Перечисление.ВидыПродукции.ПФ Тогда                                            
//			БылаЦена = Окр(БылаЦена*(1-СкидкаПФ/100),2,1);
//			
//		ИначеЕсли спрТовары.Вид.Признак = Перечисление.ВидыПродукции.Мороженое Тогда                                            
//			БылаЦена = Окр(БылаЦена*(1-СкидкаМ/100),2,1);
//			
//		ИначеЕсли спрТовары.Вид.Признак = Перечисление.ВидыПродукции.Заморозка Тогда                                            
//			БылаЦена = Окр(БылаЦена*(1-СкидкаЗам/100),2,1);
//			
//		КонецЕсли; 
//		
//		СуммаКлиентаБезСкидки = БылаЦена*Коэффициент*Количество;
//		
//		Если НомерСтроки=КоличествоСтрок() Тогда
//			Сумма = СуммаКлиентаБезСкидки - (СуммаСкидки-ОбщаяСуммаСкидки);
//			
//		Иначе
//			Сумма = СуммаКлиентаБезСкидки*ПроцентСкидки;
//			
//		КонецЕсли;
//		
//		Цена  = Сумма/(Количество*Коэффициент); 
//		ЦенаКор = Сумма/Количество;
//		ЗнСт	= Число(Лев(Строка(СтНДС),2)); 
//		Если знСт>0 Тогда
//			НДС	= Сумма*знСт/(100+знСт);
//			
//		КонецЕсли;
//		ОбщаяСуммаСкидки = ОбщаяСуммаСкидки + (СуммаКлиентаБезСкидки-Сумма);
//
//	КонецЦикла;
		
КонецПроцедуры
//*************************************               
//КОВ 02.05.18 редактировать сумму возмещения трансп.расходов в закрытом периоде
Процедура ЗаполнитьРеквизит(рекв)
	Перем выбЗнач;
	Если рекв = "Сумма" Тогда
		выбЗнач = ВозмещениеТранспортныхРасходов;
		Если ввестиЧисло(выбЗнач,"Введите сумму.",12,2)>0 Тогда
			ВозмещениеТранспортныхРасходов = выбЗнач;
			Записать();
			
		КонецЕсли;  
		
	Иначе
		выбЗнач = ДатаВозмещенияТранспРасходов;
		Если ввестиДату(выбЗнач,"Введите дату.")>0 Тогда
			ДатаВозмещенияТранспРасходов = выбЗнач;
			Записать();
			
		КонецЕсли;  
	КонецЕсли;
КонецПроцедуры  
//*************************************
// При входе в Форму запомним промежуточные переменные
ПриЗаписиПерепроводить(1);

мКонстСкладПД = Константа.СкладПД;

Валюта_Прежн=Валюта;
Курс_Прежн=Курс;
//Если МобПечать = 0 Тогда
//	ВалютаПечати=ВосстановитьЗначение("ВалютаПечатиРасхНакл");    
	
//Иначе
	ВалютаПечати = Константа.ОсновнаяВалюта; 
	
//КонецЕсли;

мКолвоПодписейТТН = 2;  

НомерТекущейФормы = 0;

ТаблицаПечФорм	  = СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка"); 