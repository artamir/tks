//--------------
Функция НайтиКорень(Док)
	// Эта процедура помогает формировать Дерево подчиненных документов
	ВД=Док.Вид();
	КореньДок=0;
	Если ВД="РасходнаяНакладная" Тогда
		КореньДок=Док.ДокументОснование;
	ИначеЕсли ВД="РасходнаяРозничная" Тогда
		КореньДок=Док.ДокументОснование;
	ИначеЕсли ВД="ПриходнаяНакладная" Тогда
		КореньДок=Док.ДокументОснование;
	ИначеЕсли ВД="Счет_фактура" Тогда
		КореньДок=Док.ДокументОснование;
	ИначеЕсли ВД="ПриходныйОрдерТБ" Тогда
		КореньДок=Док.ДокументОснование;
	ИначеЕсли ВД="Доверенность" Тогда
		КореньДок=Док.ДокументОснование;
	
	КонецЕсли;

	Если ПустоеЗначение(КореньДок)=1 Тогда
		Возврат Док;
	Иначе
		Возврат НайтиКорень(КореньДок);
	КонецЕсли;
КонецФункции

//--------------
Процедура ВывестиПодчиненные(Докум,Док,Последний,Таб,Уровень,Уровни)
	// Эта процедура помогает формировать Дерево подчиненных документов
	// каждый раз локально!!! создаем справочник подразделений
	// подчиненные документы
	ДокПодч = СоздатьОбъект("Документ");
	// для проверки наличия следующего элемента в выборке
	// создадим еще один объект!
	ПровДокПодч = СоздатьОбъект("Документ");
    ДокПодч.УстановитьФильтр(1,1,0,1,0);
    ПровДокПодч.УстановитьФильтр(1,1,0,1,0);
	А="";

	// если это первый уровень...
	Если Уровень=1 Тогда
		//...выведем Г-образную линию...
		Если Последний=1 Тогда
			Таб.ВывестиСекцию("GrHook|Lines");
		// ...или Т-образную линию
		Иначе
			Таб.ВывестиСекцию("GrTSect|Lines");
		КонецЕсли;
	Иначе
		// для первого уровня выведем линию или пустоту
		Если Уровни.ПолучитьЗначение(1,А)=1 Тогда
			Таб.ВывестиСекцию("GrLine|Lines");
		Иначе
			Таб.ВывестиСекцию("GrEmpty|Lines");
		КонецЕсли;
		// для остальных уровней присоединим линию или пустоту
		Для Сч=2 По Уровень-1 Цикл
			Если Уровни.ПолучитьЗначение(Сч,А)=1 Тогда
				Таб.ПрисоединитьСекцию("GrLine|Lines");
			Иначе
				Таб.ПрисоединитьСекцию("GrEmpty|Lines");
			КонецЕсли;
		КонецЦикла;
		Если Последний=1 Тогда
			Таб.ПрисоединитьСекцию("GrHook|Lines");
		Иначе
			Таб.ПрисоединитьСекцию("GrTSect|Lines");
		КонецЕсли;
	КонецЕсли;
	// только теперь - присоединим секцию документа
	ПечДок=""+Док+" от "+Док.ДатаДок;
	Если Док.Проведен()=0 Тогда
		ПечДок=ПечДок+" (Не проведен!)";
	Иначе
		Если Док.Вид()="РасходнаяНакладная" Тогда
			Если Док.РежимПроведения=1  Тогда
				ПечДок=ПечДок+" (Проведен частично!)";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Докум=Док Тогда
		Таб.ПрисоединитьСекцию("ТекДок|Body");
	Иначе
		Таб.ПрисоединитьСекцию("Group|Body");
	КонецЕсли;
	Уровень = Уровень+1;
	ДокПодч.ВыбратьПодчиненныеДокументы(Док.ДатаДок-30,РабочаяДата(),Док);
	ПровДокПодч.ВыбратьПодчиненныеДокументы(Док.ДатаДок-30,РабочаяДата(),Док);
	Начало = 1;
	Пока ДокПодч.ПолучитьДокумент()=1 Цикл
		Если Начало=1 Тогда
			А=ПровДокПодч.ПолучитьДокумент();
			Начало=0;
		КонецЕсли;
		Если ПровДокПодч.ПолучитьДокумент()=1 Тогда
			Уровни.УстановитьЗначение(Уровень,1,"");
			Последний = 0;
		Иначе
			Уровни.УстановитьЗначение(Уровень,0,"");
			Последний = 1;
		КонецЕсли;
		ВывестиПодчиненные(Докум,ДокПодч.ТекущийДокумент(),Последний,Таб,Уровень,Уровни);
	КонецЦикла;
   Уровень=Уровень-1;
КонецПроцедуры
//--------------
Процедура СформироватьДерево()
	// Эта процедура формирует Дерево подчиненных документов
	Докум=ВыбДокумент;
	Если Докум.Выбран()=0 Тогда
		Предупреждение("Не указан документ для построения дерева!");
		Возврат;
	КонецЕсли;
   // сначала поднимемся по подчиненности вверх и найдем корень
	КореньДок=НайтиКорень(Докум);

   // теперь от корня спускаемся вниз, показывая все на своем пути

   // сначала заполним массив уровней нулями

	Уровень = 0;
	Уровни=СоздатьОбъект("СписокЗначений");
	Для Сч=1 По 20 Цикл
		Уровни.ДобавитьЗначение(0,"");
	КонецЦикла;

	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("ДеревоДокументов");
	// подчиненные документы
	ДокПодч = СоздатьОбъект("Документ");
	// для проверки наличия следующего элемента в выборке
	// создадим еще один объект!
	ПровДокПодч = СоздатьОбъект("Документ");
    ДокПодч.УстановитьФильтр(1,1,0,1,0);
    ПровДокПодч.УстановитьФильтр(1,1,0,1,0);

	ДокПодч.ВыбратьПодчиненныеДокументы(КореньДок.ДатаДок-30,РабочаяДата(),КореньДок);
	ПровДокПодч.ВыбратьПодчиненныеДокументы(КореньДок.ДатаДок-30,РабочаяДата(),КореньДок);

	Уровень=1;
	ПечДок=""+КореньДок+" от "+КореньДок.ДатаДок;
	Если Докум=КореньДок Тогда
		Таб.ВывестиСекцию("КореньТекДок");
	Иначе
		Таб.ВывестиСекцию("Header");
	КонецЕсли;
	Начало=1;
	Пока ДокПодч.ПолучитьДокумент()=1 Цикл
		Если Начало = 1 Тогда
			А=ПровДокПодч.ПолучитьДокумент();
			Начало=0;
		КонецЕсли;
		Если ПровДокПодч.ПолучитьДокумент()=1 Тогда
			Уровни.УстановитьЗначение(1,1,"");
			Последний=0;
		Иначе
			Уровни.УстановитьЗначение(1,0,"");
			Последний=1;
		КонецЕсли;
		ВывестиПодчиненные(Докум,ДокПодч.ТекущийДокумент(),Последний,Таб,Уровень,Уровни);
	КонецЦикла;
	// Вывод заполненной формы
	Таб.Опции(0,0,0,0, "PO0005");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Структура подчиненных документов",);
КонецПроцедуры

//-------------------------------
Процедура ПриОткрытии()
	Если ТипЗначенияСтр(Форма.Параметр)="Документ" Тогда
		ВыбДокумент=Форма.Параметр;
		СформироватьДерево();
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
КонецПроцедуры
//-------------------------------
