ѕерем кс аталогѕроекта, кс»м€“аблицы—хемы«апроса,
	ксѕропѕустые—ерииѕри‘орм—ерт,
		ксѕропЌесинхр лиентовѕри‘орм—ерт, —еансаPID;
ѕерем кс аталогѕроекта2;
ѕерем кс–ежим«апросов¬ет»—, ксќсновнойѕодотчќбъект;
ѕерем м¬ести∆урнал—оединени€, м¬ести∆урнал—ертификации;
ѕерем м»м€∆урнала—оединени€;
ѕерем стрЎаблон«аписи∆урнала;
ѕерем сзѕути;
ѕерем м олво—трок¬«апросе;
//*******************************************
‘ункци€ “ест() Ёкспорт
	
	¬озврат "√лобальный модуль ""ћеркурий"" успешно подключен";
	
 онец‘ункции
//*******************************************
‘ункци€ ¬ыполнить«апрос(сз«апрос, хмлќтвет, ћетка = "")

	ћетка = ?(ћетка <> "", ћетка, _getPerformanceCounter());
	
	≈сли м¬ести∆урнал—оединени€ = 1 “огда
		
		глмќбщие‘ункции.«апись¬∆урнал("PId:" + —еансаPID 
			+ ", Tag:" + ћетка + " Conn:" 
			+ сз«апрос.ѕолучить("јдрес") + "," 
			+ сз«апрос.ѕолучить("Ћогинѕрокси") + ","
			+ сз«апрос.ѕолучить("ѕарольѕрокси"), 
				"", "", м»м€∆урнала—оединени€);

		глмќбщие‘ункции.«апись¬∆урнал("PId:" + —еансаPID 
			+ ", Tag:" + ћетка + " Req:" 
			+ сз«апрос.ѕолучить("“екст«апроса").xml, 
				"", "", м»м€∆урнала—оединени€);
	 онец≈сли;
			
	—оединение = —оздатьќбъект("WinHttp.WinHttpRequest.5.1"); 
	—оединение.Open("POST", сз«апрос.ѕолучить("јдрес"), -1); 
	—оединение.SetCredentials(сз«апрос.ѕолучить("Ћогинѕрокси"), 
		сз«апрос.ѕолучить("ѕарольѕрокси"), 0);
	 
	—оединение.Send(сз«апрос.ѕолучить("“екст«апроса").xml);
	
	ѕопытка
		—оединение.WaitForResponse(-1);
	»сключение
		глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмлќтвет, "", "", 
			"<error>HTTP The operation timed out</error>");
		
		¬озврат 0;
	 онецѕопытки;
	
	≈сли м¬ести∆урнал—оединени€ = 1 “огда
		
		глмќбщие‘ункции.«апись¬∆урнал("PId:" + —еансаPID 
			+ ", Tag:" + ћетка + " Stat:" 
			+ —оединение.StatusText, 
				"", "", м»м€∆урнала—оединени€);

		глмќбщие‘ункции.«апись¬∆урнал("PId:" + —еансаPID 
			+ ", Tag:" + ћетка + " Res:" 
			+ —оединение.ResponseText(), 
				"", "", м»м€∆урнала—оединени€);
	 онец≈сли;

	≈сли —оединение.Status = 200 “огда
		//ќтвет—ервера = —тр«аменить(—оединение
		//	.ResponseText(), —имв(10), "");
		—ообщить("	-	ответ сервера получен: " + ћетка);
		ќтвет—ервера = —оединение.ResponseText();
        —осто€ние("«акрыто соединение с сервером");
		—оединение = "";
		—осто€ние("Ќачало обработки ответа сервера");
		тќтвет—ервера = —оздатьќбъект("“екст");	
		тќтвет—ервера.ƒобавить—троку(ќтвет—ервера);
		стр»м€‘айла =  аталог¬ременных‘айлов() 
			+ "srvResp.xml";
		тќтвет—ервера.«аписать(стр»м€‘айла);
		тќтвет—ервера.ќткрыть(стр»м€‘айла);
		ќтвет—ервера = глм’ћЋ.
			¬ырезатьЁлементы(тќтвет—ервера, 
				сзѕути, "", "", 0, "");
		ќтвет—ервера = —тр«аменить(ќтвет—ервера,
			"UTF-8","WINDOWS-1251");	
		—осто€ние(" онец обработки ответа сервера");
		тќтвет—ервера.ќчистить();
		тќтвет—ервера.ƒобавить—троку(ќтвет—ервера);
		тќтвет—ервера. одова€—траница(0);
		тќтвет—ервера.«аписать(стр»м€‘айла);
		тќтвет—ервера = "";
		—осто€ние("Ќачало чтени€ xml");
		//глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмлќтвет, "", "", 
		//	ќтвет—ервера);
		глм’ћЋ.ѕрочитатьƒокумент»з‘айла(хмлќтвет, 
			"", "", стр»м€‘айла);
		—осто€ние(" онец чтени€ xml");
		—ообщить("	-	ответ сервера прин€т к исполнению: " + ћетка);
		¬озврат 1
	»наче
    	
		глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмлќтвет, "", "", 
			"<error>HTTP " + —оединение.Status + " " 
				+ —оединение.StatusText + "</error>");

		¬озврат 0;
	 онец≈сли;

 онец‘ункции

//*******************************************
‘ункци€ Envelope(хмлѕарсер, хмлЌабор—хем)
	
	»м€‘айла = глмќбщие‘ункции.¬ыгрузить“аблицу¬‘айл(кс»м€“аблицы—хемы«апроса, "xsd");
    
	глм’ћЋ.—оздатьѕарсер(хмлѕарсер);
	
	глм’ћЋ.—оздатьЌабор—хем(хмлЌабор—хем);
	
	глм’ћЋ.ƒобавить—хему»з‘айла(хмлЌабор—хем, "http://" + кс»м€“аблицы—хемы«апроса, »м€‘айла);
	
	»м€“ипа = "Envelope"; 
	
	глм’ћЋ.ѕространства»мен.ƒобавить«начение("soapenv", "http://" + кс»м€“аблицы—хемы«апроса);
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, 
		"http://" + кс»м€“аблицы—хемы«апроса, »м€“ипа);	

	хмлEnvelope = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, 
		хмлќписание“ипа, »м€“ипа); 	
	
	хмлѕарсер.appendChild(хмлEnvelope);
	
	глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope,	
		"xmlns:" + глм’ћЋ.ѕространства»мен.ѕолучить("http://" + кс»м€“аблицы—хемы«апроса), 
			"http://" + кс»м€“аблицы—хемы«апроса);
    
	¬озврат хмлEnvelope;
	
 онец‘ункции

//*******************************************
‘ункци€ SubmitApplicationRequestV14(хмлѕарсер, хмлЌабор—хем, сзѕараметры)
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");
	
	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "SubmitApplicationRequest");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);
    
	глм’ћЋ.ѕространства»мен.”становить("http://api.vetrf.ru/schema/cdm/application/ws-definitions", "ws");		 
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, "http://api.vetrf.ru/schema/cdm/application/ws-definitions", 
		кс аталогѕроекта, "application_ws_definitions_v1.4.xsd");
			
	глм’ћЋ.ѕространства»мен.”становить("http://api.vetrf.ru/schema/cdm/mercury/applications", "merc");		
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, "http://api.vetrf.ru/schema/cdm/mercury/applications", 
		кс аталогѕроекта, "applications_v1.4.xsd");
	
	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 
		
	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмлќписание“ипа = хмлЌабор—хем.getSchema("http://api.vetrf.ru/schema/cdm/application/ws-definitions")
		.elements.itemByName("submitApplicationRequest").type; 

	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлBody.appendChild(хмл«апрос);
    	
	хмлApiKey = хмл«апрос.SelectSingleNode("//apiKey");
	хмлApiKey.text = сзѕараметры.ѕолучить(" лючѕриложени€");
	
	хмлApplication = хмл«апрос.SelectSingleNode("//application");
	
	хмлServiceId = хмлApplication.appendChild(хмлѕарсер.createElement(глм’ћЋ.ѕространства»мен
		.ѕолучить("http://api.vetrf.ru/schema/cdm/application") + ":serviceId"));
	хмлServiceId.text = "mercury-g2b.service"; 				

	хмлIssuerId = хмлApplication.appendChild(хмлѕарсер.createElement(глм’ћЋ.ѕространства»мен
		.ѕолучить("http://api.vetrf.ru/schema/cdm/application") + ":issuerId"));
   	хмлIssuerId.text = сзѕараметры.ѕолучить("√”»д’—");
    
   	хмлIssueDate = хмлApplication.appendChild(хмлѕарсер.createElement(глм’ћЋ.ѕространства»мен
   		.ѕолучить("http://api.vetrf.ru/schema/cdm/application") + ":issueDate"));
   		
	хмлIssueDate.text = "" + ƒата√од(“екуща€ƒата()) + "-" + ѕрав("0" + ƒатаћес€ц(“екуща€ƒата()), 2) 
		+ "-" + ѕрав("0" + ƒата„исло(“екуща€ƒата()), 2) + "T" + “екущее¬рем€();

	хмлData = хмлApplication.appendChild(хмлѕарсер.createElement(глм’ћЋ.ѕространства»мен
		.ѕолучить("http://api.vetrf.ru/schema/cdm/application") + ":data"));
	
	¬озврат хмлData;
	
 онец‘ункции

//*******************************************
‘ункци€ ReceiveApplicationResultRequestV14(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сз«апрос = "";
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");
	
	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "ReceiveApplicationResultRequest");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);
    
	глм’ћЋ.ѕространства»мен.”становить("http://api.vetrf.ru/schema/cdm/application/ws-definitions", "ws");		 
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, "http://api.vetrf.ru/schema/cdm/application/ws-definitions", 
		кс аталогѕроекта, "application_ws_definitions_v1.4.xsd");
			
	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 
		
	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмлќписание“ипа = хмлЌабор—хем.getSchema("http://api.vetrf.ru/schema/cdm/application/ws-definitions")
		.elements.itemByName("receiveApplicationResultRequest").type; 

	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлBody.appendChild(хмл«апрос);
    	
	хмлApiKey = хмл«апрос.SelectSingleNode("//apiKey");
	хмлApiKey.text = сзѕараметры.ѕолучить(" лючѕриложени€");
	
	хмлApplicationId = хмл«апрос.SelectSingleNode("//applicationId");
	хмлApplicationId.text = сзѕараметры.ѕолучить("√”»дѕриложени€");
	
	хмлIssuerId = хмл«апрос.SelectSingleNode("//issuerId");
	хмлIssuerId.text = сзѕараметры.ѕолучить("√”»д’—");
	
	сз«апрос.”становить("“екст«апроса", хмлѕарсер); 

    сз«апрос.”становить("јдрес", ?(кс–ежим«апросов¬ет»— < 20, 
		"https://api2.vetrf.ru:8002/platform/services/ApplicationManagementService",
			"https://api.vetrf.ru/platform/services/ApplicationManagementService"));

	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ SubmitApplicationRequestV20(хмлѕарсер, хмлЌабор—хем, сзѕараметры)
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
		
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");
	
	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "SubmitApplicationRequest");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	//глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);

	глм’ћЋ.ѕространства»мен.”становить("http://api.vetrf.ru/schema/cdm/application/ws-definitions", "ws");		 
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, "http://api.vetrf.ru/schema/cdm/application/ws-definitions", 
		кс аталогѕроекта2, "application_ws_definitions_v1.1.xsd");
			
	глм’ћЋ.ѕространства»мен.”становить("http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2", "merc");		
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, "http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2", 
		кс аталогѕроекта2, "mercury_g2b_applications_v2.0.xsd");
	
	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;

	хмлќписание“ипа = хмлЌабор—хем.getSchema("http://api.vetrf.ru/schema/cdm/application/ws-definitions")
		.elements.itemByName("submitApplicationRequest").type; 

	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлBody.appendChild(хмл«апрос);
    	
	хмлApiKey = хмл«апрос.SelectSingleNode("//apiKey");
	хмлApiKey.text = сзѕараметры.ѕолучить(" лючѕриложени€");
	
	хмлApplication = хмл«апрос.SelectSingleNode("//application");
	
	хмлServiceId = хмлApplication.appendChild(хмлѕарсер.createElement(глм’ћЋ.ѕространства»мен
		.ѕолучить("http://api.vetrf.ru/schema/cdm/application") + ":serviceId"));
	хмлServiceId.text = "mercury-g2b.service:2.0"; 				

	хмлIssuerId = хмлApplication.appendChild(хмлѕарсер.createElement(глм’ћЋ.ѕространства»мен
		.ѕолучить("http://api.vetrf.ru/schema/cdm/application") + ":issuerId"));
   	хмлIssuerId.text = сзѕараметры.ѕолучить("√”»д’—");
    
   	хмлIssueDate = хмлApplication.appendChild(хмлѕарсер.createElement(глм’ћЋ.ѕространства»мен
   		.ѕолучить("http://api.vetrf.ru/schema/cdm/application") + ":issueDate"));
   		
	хмлIssueDate.text = "" + ƒата√од(“екуща€ƒата()) + "-" + ѕрав("0" + ƒатаћес€ц(“екуща€ƒата()), 2) 
		+ "-" + ѕрав("0" + ƒата„исло(“екуща€ƒата()), 2) + "T" + “екущее¬рем€();

	хмлData = хмлApplication.appendChild(хмлѕарсер.createElement(глм’ћЋ.ѕространства»мен
		.ѕолучить("http://api.vetrf.ru/schema/cdm/application") + ":data"));
	
	¬озврат хмлData;
	
 онец‘ункции

//*******************************************
‘ункци€ SubmitApplicationRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, ¬ерси€ = 1)
	
	¬озврат ?(¬ерси€ = 1, SubmitApplicationRequestV14(хмлѕарсер, 
		хмлЌабор—хем, сзѕараметры), SubmitApplicationRequestV20(хмлѕарсер, 
			хмлЌабор—хем, сзѕараметры));
	
 онец‘ункции

//*******************************************
‘ункци€ ReceiveApplicationResultRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос, ¬ерси€ = 1)
	
	//¬озврат ?(¬ерси€ = 1, ReceiveApplicationResultRequestV14(хмлѕарсер, 
	//	хмлЌабор—хем, сзѕараметры, сз«апрос), ReceiveApplicationResultRequestV20(хмлѕарсер, 
	//		хмлЌабор—хем, сзѕараметры, сз«апрос));
	¬озврат ReceiveApplicationResultRequestV14(хмлѕарсер, 
		хмлЌабор—хем, сзѕараметры, сз«апрос);
		
 онец‘ункции

//*******************************************
‘ункци€ ѕолучить–езультат«апроса ѕриложению(хмлѕарсер, хмлЌабор—хем, сзѕараметры, хмлќтвет, ¬ерси€ = 1, ћетка = "")
	ѕерем сз«апрос, хмл‘ункци€, хмл–езультат;
	
	≈сли ReceiveApplicationResultRequest(хмлѕарсер, 
		хмлЌабор—хем, сзѕараметры, сз«апрос, ¬ерси€) = 1 “огда
				
			≈сли ¬ыполнить«апрос(сз«апрос, хмлќтвет, ћетка) = 1 “огда

				стр’—Ћ = "<?xml version=""1.0"" encoding=""WINDOWS-1251""?>
					|<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"">
					|<xsl:template match=""/"">
					|	<xsl:for-each select="".//* "">
					|		<xsl:for-each select=""*[contains('status',name())]"">
					|			<xsl:element name=""status"">
					|				<xsl:value-of select="".""/>
					|			</xsl:element>
					|		</xsl:for-each>  
					|	</xsl:for-each> 
					|</xsl:template>
					|</xsl:stylesheet>
					|";  
	
				глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, "", , стр’—Ћ);
				
				глм’ћЋ.¬ыполнитьѕреобразование(хмлќтвет, "", хмл‘ункци€, хмл–езультат);
				
				–езультат = хмл–езультат.documentElement.text;

				≈сли –езультат = "COMPLETED" “огда
					¬озврат 1;
					
				»наче≈сли (–езультат = "ACCEPTED")
					»Ћ» (–езультат = "IN_PROCESS") “огда
						¬озврат -1;
				
				»наче≈сли –езультат = "REJECTED" “огда
					—ообщить("«апрос отклонен");	
					¬озврат 0;
					
				 онец≈сли;	
				
			»наче
				—ообщить("«апрос не выполнен");
				¬озврат 0;
				
			 онец≈сли;
	»наче
		—ообщить("«апрос не сформирован");
		¬озврат 0;
		
	 онец≈сли;
	
 онец‘ункции
//*******************************************
‘ункци€ ѕолучитьЌомер«а€вки(хмлќтвет)
	ѕерем хмл‘ункци€, хмл–езультат;
	
	стр’—Ћ = "<?xml version=""1.0"" encoding=""WINDOWS-1251""?>
			|<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"">
			|<xsl:template match=""/"">
			|	<xsl:for-each select="".//* "">
			|		<xsl:for-each select=""*[contains(name(),'applicationId')]"">
			|			<xsl:element name=""uuid"">
			|				<xsl:value-of select="".""/>
			|			</xsl:element>
			|		</xsl:for-each>  
			|	</xsl:for-each> 
			|</xsl:template>
			|</xsl:stylesheet>
			|";  

	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, "", , стр’—Ћ);
	
	глм’ћЋ.¬ыполнитьѕреобразование(хмлќтвет, "", хмл‘ункци€, хмл–езультат);
    		
	¬озврат хмл–езультат.documentElement.text;

 онец‘ункции	
//*******************************************
‘ункци€ ¬ыполнить«апрос ѕриложению(сз«апрос, хмлќтвет, «нач ѕопыток = 5, “аймаут = 5000, ¬ерси€ = 1, ћетка = "")
	ѕерем хмлѕарсер, хмлЌабор—хем, хмл‘ункци€, хмл–езультат;
	
	≈сли ¬ыполнить«апрос(сз«апрос, хмлќтвет, ћетка) = 1 “огда
		
		сз«апрос.”становить("√”»дѕриложени€", ѕолучитьЌомер«а€вки(хмлќтвет));
        
		–ез = -1;
	
		ѕока –ез = -1 ÷икл

			глмќбщие‘ункции.«адержѕрим(“аймаут);

			–ез = ѕолучить–езультат«апроса ѕриложению(хмлѕарсер, 
				хмлЌабор—хем, сз«апрос, хмлќтвет, ¬ерси€, ћетка);
				
			ѕопыток	= ѕопыток - 1;

			≈сли ѕопыток = 0 “огда

				ѕрервать;

			 онец≈сли;	
			
		 онец÷икла;
		
		¬озврат –ез;
		
	»наче
		—ообщить("«апрос не выполнен");
		¬озврат 0;
	
	 онец≈сли;
		
 онец‘ункции

//*******************************************
‘ункци€ GetProductByTypeListRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "GetProductByTypeList");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ѕространства»мен.”далить¬се();
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”становить(URIѕространства»мен, "ws");		 
	
	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлBody.appendChild(хмл«апрос);
    
	хмлGuid = хмлEnvelope.SelectSingleNode("//productType");
    хмлGuid.text = сзѕараметры.ѕолучить("“ип");
	
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement("count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	хмл«апрос.appendChild(хмлѕараметры);	
		
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса"); 
	//сз«апрос.ƒобавить«начение("https://api2.vetrf.ru:8002/platform/services/ProductService", "јдрес"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru:8002/platform/services/ProductService", "јдрес");
	
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ GetSubProductByProductListRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос) 
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	глм’ћЋ.ѕространства»мен.”далить¬се();

	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "GetSubProductByProductList");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");

	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);

	глм’ћЋ.ѕространства»мен.ƒобавить«начение("ws", URIѕространства»мен);

	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);

	хмлBody.appendChild(хмл«апрос);
    
	хмлGuid = хмлEnvelope.SelectSingleNode("//productGuid");
    хмлGuid.text = сзѕараметры.ѕолучить("√”»д");
	
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement("count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	хмл«апрос.appendChild(хмлѕараметры);	
		
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса"); 
	//сз«апрос.ƒобавить«начение("https://api2.vetrf.ru:8002/platform/services/ProductService", "јдрес"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru:8002/platform/services/ProductService", "јдрес");
    
	¬озврат 1;

 онец‘ункции

‘ункци€ GetSubProductByGuidRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос) 
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	глм’ћЋ.ѕространства»мен.”далить¬се();

	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");
    
	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта2, "GetSubProductByGuid");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
  	URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен"); 
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");

	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта2, »м€‘айла—хемы);

	глм’ћЋ.ѕространства»мен.ƒобавить«начение("ws", URIѕространства»мен);

	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);

	хмлBody.appendChild(хмл«апрос);
    
	хмлGuid = хмл«апрос.SelectSingleNode("//guid");
	хмлGuid.text = сзѕараметры.ѕолучить("√”»д—убѕродукта");
	
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса"); 

	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/services/2.0/ProductService", "јдрес");
    
	¬озврат 1;

 онец‘ункции

//*******************************************
‘ункци€ GetProductItemListRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос) 
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	глм’ћЋ.ѕространства»мен.”далить¬се();

	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");
    
	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта2, "GetProductItemList");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
  	URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен"); 
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");

	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта2, »м€‘айла—хемы);

	глм’ћЋ.ѕространства»мен.ƒобавить«начение("ws", URIѕространства»мен);

	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);

	хмлBody.appendChild(хмл«апрос);
    
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/dictionary/v2";
	
	//хмлGuid = хмлEnvelope.SelectSingleNode("//subProductGuid");
    ////хмлGuid.text = сзѕараметры.ѕолучить("√”»д—убѕродукта");
	//хмл«апрос.removeChild(хмлGuid);
	//
	//хмлGuid = хмлEnvelope.SelectSingleNode("//enterpriseGuid");
	√”»д’— = сзѕараметры.ѕолучить("√”»д’—");
	
	≈сли ѕустое«начение(√”»д’—) = 0 “огда
		хмлBE = хмл«апрос.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":businessEntity"));
		
		URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
		
		хмлGuid = хмлBE.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":guid"));
		хмлGuid.text = √”»д’—;
	 онец≈сли;

	√”»дѕредпри€ти€ = сзѕараметры.ѕолучить("√”»дѕредпри€ти€");
	
	≈сли ѕустое«начение(√”»дѕредпри€ти€) = 0 “огда
		хмлEnterprise = хмл«апрос.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":enterprise"));
		
		URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
		
		хмлGuid = хмлEnterprise.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":guid"));
		хмлGuid.text = √”»дѕредпри€ти€;
	 онец≈сли;

	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	//хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement("bs:count"));
	//хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	—мещение = сзѕараметры.ѕолучить("—мещение");
	≈сли ѕустое«начение(—мещение) = 0 “огда
		хмл—мещение = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":offset"));
		хмл—мещение.text = —мещение;
	 онец≈сли;
	
	//хмл«апрос.appendChild(хмлѕараметры);	
	хмл«апрос.insertBefore(хмлѕараметры, 
		?(ѕустое«начение(√”»д’—) = 0, хмлBE, хмлEnterprise));	
	
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса"); 
	//сз«апрос.ƒобавить«начение("https://api2.vetrf.ru:8002/platform/services/ProductService", "јдрес"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/services/2.0/ProductService", "јдрес");
    
	¬озврат 1;

 онец‘ункции

//*******************************************
‘ункци€ GetProductItemByGuidRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос) 
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	глм’ћЋ.ѕространства»мен.”далить¬се();

	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");
    
	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта2, "GetProductItemByGuid");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
  	URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен"); 
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");

	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта2, »м€‘айла—хемы);

	глм’ћЋ.ѕространства»мен.ƒобавить«начение("ws", URIѕространства»мен);

	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);

	хмлBody.appendChild(хмл«апрос);
	
	хмлGuid = хмл«апрос.SelectSingleNode("//guid");
	хмлGuid.text = сзѕараметры.ѕолучить("√”»дЌоменклатуры");
	
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса"); 

	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/services/2.0/ProductService", "јдрес");
    
	¬озврат 1;

 онец‘ункции

//*******************************************
‘ункци€ GetBusinessEntityListRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос) 
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	глм’ћЋ.ѕространства»мен.”далить¬се();

	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");
    
	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "GetBusinessEntityList");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);

	глм’ћЋ.ѕространства»мен.ƒобавить«начение("ws", URIѕространства»мен);

	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement("bs:count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	хмл«апрос.appendChild(хмлѕараметры);
	
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/cerberus/enterprise";
	»м€“ипа = "BusinessEntity";
	»м€ = "businessEntity";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмлЌаименование = хмлѕараметры.appendChild(хмлѕарсер.createElement("be:inn"));
	хмлЌаименование.text = сзѕараметры.ѕолучить("»ЌЌ");
	
	хмл«апрос.appendChild(хмлѕараметры);
	
	хмлBody.appendChild(хмл«апрос);
    	
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса");	
	//сз«апрос.ƒобавить«начение("https://api2.vetrf.ru:8002/platform/cerberus/services/EnterpriseService", "јдрес"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/cerberus/services/EnterpriseService", "јдрес");
    
	¬озврат 1;

 онец‘ункции

//*******************************************
‘ункци€ GetBusinessEntityByGuidRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос) 
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	глм’ћЋ.ѕространства»мен.”далить¬се();

	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");
    
	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "GetBusinessEntityByGuid");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);

	глм’ћЋ.ѕространства»мен.ƒобавить«начение("ws", URIѕространства»мен);

	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмлGUID = хмл«апрос.SelectSingleNode("//guid");
	хмлGUID.text = сзѕараметры.ѕолучить("√”»д’—");
	
	хмлBody.appendChild(хмл«апрос);
    	
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса");	
	//сз«апрос.ƒобавить«начение("https://api2.vetrf.ru:8002/platform/cerberus/services/EnterpriseService", "јдрес"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/cerberus/services/EnterpriseService", "јдрес");
    
	¬озврат 1;

 онец‘ункции

//*******************************************
‘ункци€ GetEnterpriseByGuidRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос) 
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	глм’ћЋ.ѕространства»мен.”далить¬се();

	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");
    
	// ‘ранцузов 17.12.19: переход с 1.4 на 2.0
	//сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "GetEnterpriseByGuid"); 
	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта2, "GetEnterpriseByGuid");
	//\\
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	// ‘ранцузов 17.12.19: переход с 1.4 на 2.0
	//глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы); 
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта2, »м€‘айла—хемы);
	//\\

	глм’ћЋ.ѕространства»мен.ƒобавить«начение("ws", URIѕространства»мен);

	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмлGUID = хмл«апрос.SelectSingleNode("//guid");
	хмлGUID.text = сзѕараметры.ѕолучить("√”»дѕредпри€ти€");
	
	хмлBody.appendChild(хмл«апрос);
    	
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса");	
	
	// ‘ранцузов 17.12.19: переход с 1.4 на 2.0
	//сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/cerberus/services/EnterpriseService", "јдрес"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/services/2.1/EnterpriseService", "јдрес");
	//\\
    
	¬озврат 1;

 онец‘ункции

//*******************************************
‘ункци€ GetRussianEnterpriseListRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос) 
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	глм’ћЋ.ѕространства»мен.”далить¬се();

	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");
    
	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта2, "GetRussianEnterpriseList");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта2, »м€‘айла—хемы);

	глм’ћЋ.ѕространства»мен.ƒобавить«начение("ws", URIѕространства»мен);

	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	—мещение = сзѕараметры.ѕолучить("—мещение");
	≈сли ѕустое«начение(—мещение) = 0 “огда
		хмл—мещение = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":offset"));
		хмл—мещение.text = —мещение;
	 онец≈сли;	
	
	хмл«апрос.appendChild(хмлѕараметры);	
	
	//
	глм’ћЋ.ѕространства»мен.ƒобавить«начение("ent", "http://api.vetrf.ru/schema/cdm/cerberus/enterprise");
	глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлѕарсер.documentElement, 
		"xmlns:ent", "http://api.vetrf.ru/schema/cdm/cerberus/enterprise");
		
	хмлѕредпри€тие = хмл«апрос.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить("http://api.vetrf.ru/schema/cdm/cerberus/enterprise")
			+ ":enterprise"));

	глм’ћЋ.ѕространства»мен.ƒобавить«начение("ikar", "http://api.vetrf.ru/schema/cdm/ikar");
	глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлѕарсер.documentElement, 
		"xmlns:ikar", "http://api.vetrf.ru/schema/cdm/ikar");
			
	хмлјдрес = хмлѕредпри€тие.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить("http://api.vetrf.ru/schema/cdm/ikar")
			+ ":address")); 
	хмл”лица = хмлјдрес.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить("http://api.vetrf.ru/schema/cdm/ikar")
			+ ":street"));
			
	хмл√л»д = хмл”лица.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить("http://api.vetrf.ru/schema/cdm/base")
			+ ":guid"));
	
	хмл√л»д.text = сзѕараметры.ѕолучить("√”»д”лицы");
	
	хмлƒом = хмлјдрес.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить("http://api.vetrf.ru/schema/cdm/ikar")
			+ ":house"));
	
	хмлƒом.text = сзѕараметры.ѕолучить("Ќомерƒома");
	
	—троение = сзѕараметры.ѕолучить("—троение");
	≈сли ѕустое«начение(—троение) = 0 “огда
		хмл—троение = хмлјдрес.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить("http://api.vetrf.ru/schema/cdm/ikar")
				+ ":building"));
		
		хмл—троение.text = —троение;
	 онец≈сли;	
	
	хмл«апрос.appendChild(хмлѕредпри€тие);	
	//\\
	
	хмлBody.appendChild(хмл«апрос);
    	
	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:ws=""http://api.vetrf.ru/schema/cdm/registry/ws-definitions/v2"" 
	|xmlns:ent=""http://api.vetrf.ru/schema/cdm/cerberus/enterprise"" xmlns:ikar=""http://api.vetrf.ru/schema/cdm/ikar""
	|xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2"">
	|
	|	<xsl:template match=""*"">
    |   	<xsl:apply-templates select=""*""/>
    |	</xsl:template>
    |
	|	<xsl:template match=""enterprise""> 
    |   	<xsl:element name=""dt:enterprise"">
    //|       	<xsl:copy-of select=""*|text()""/>
	|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""address""> 
    |   	<xsl:element name=""dt:address"">
    //|       	<xsl:copy-of select=""*|text()""/>
	|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""street""> 
    |   	<xsl:element name=""dt:street"">
    //|       	<xsl:copy-of select=""*|text()""/>
	|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""house""> 
    |   	<xsl:element name=""dt:house"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""*"">
	|		<xsl:element name=""{name()}"">
	|			<xsl:for-each select=""@*"">
	|			   	<xsl:attribute name=""{name()}"">
	|       			<xsl:value-of select="".""/>
	|   			</xsl:attribute>
	|			</xsl:for-each>
    |   		<xsl:apply-templates />
	|		</xsl:element>
    |	</xsl:template>
	|
    |</xsl:stylesheet>
  	|";

	хмл‘ункци€ = ""; хмл–езультат = "";

  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

  	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);
    
	сз«апрос.ƒобавить«начение(хмл–езультат.documentElement, "“екст«апроса");	
	
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/services/2.1/EnterpriseService", "јдрес");
    
	¬озврат 1;

 онец‘ункции

//*******************************************
‘ункци€ GetR13nConditionListRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта2, "GetR13nConditionList");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ѕространства»мен.”далить¬се();
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта2, »м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”становить(URIѕространства»мен, "ws");		 
	
	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлBody.appendChild(хмл«апрос);
    
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	—мещение = сзѕараметры.ѕолучить("—мещение");
	≈сли ѕустое«начение(—мещение) = 0 “огда
		хмл—мещение = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":offset"));
		хмл—мещение.text = —мещение;
	 онец≈сли;	
	
	хмл«апрос.appendChild(хмлѕараметры);	
		
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/services/2.0/RegionalizationService", "јдрес"); 
	
	¬озврат 1;

 онец‘ункции	

//*******************************************
‘ункци€ CheckShipmentRegionalizationRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	ѕерем хмл‘ункци€, хмл–езультат, тз—убѕродукты, тзƒокументы;
	
	сз«апрос = "";
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	// оболочка дл€ запроса на сервер приложений
	хмлData = SubmitApplicationRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, 2);

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта2, "CheckShipmentRegionalizationRequest");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ѕространства»мен.”далить¬се();
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта2, »м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”становить(URIѕространства»мен, "merc");		 
	
	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	//»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлѕарсер.documentElement, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлInitiator = хмл«апрос.SelectSingleNode("//initiator");
	хмлLogin = хмлInitiator.appendChild(хмлѕарсер.createElement("vd:login"));
	хмлLogin.text = сзѕараметры.ѕолучить("Ћогин»—ћеркурий");
    
	тзƒанные«апроса = сзѕараметры.ѕолучить("тзƒанные«апроса");
	
	// заполнить список суб. продуктов рейса
	тзƒанные«апроса.¬ыгрузить(тз—убѕродукты, , , "—убѕродукт");
	
	тз—убѕродукты.—вернуть("1", "");
	
	ƒл€ Ќом—тр = 1 ѕо тз—убѕродукты. оличество—трок() ÷икл
		
		хмлCargoType = ?(Ќом—тр = 1, хмл«апрос.SelectSingleNode("//cargoType"),
			хмл«апрос.insertBefore(хмлѕарсер.createElement("dt:cargoType"), хмлCargoType));
		
		хмлGUID = хмлCargoType.appendChild(хмлѕарсер.createElement(глм’ћЋ.ѕространства»мен
			.ѕолучить("http://api.vetrf.ru/schema/cdm/base") + ":guid"));
		
		хмлGUID.text = тз—убѕродукты.ѕолучить«начение(Ќом—тр, 1).√”»д;
	
	 онец÷икла;	
	
	// заполнить список клиентов рейса
	тзƒанные«апроса.¬ыгрузить(тзƒокументы, , , "–егистратор");

	тзƒокументы.—вернуть("1", "");
	сзѕараметры.”становить("“очкићаршрута", тзƒокументы);
	 
	хмлShipmentRoute = хмл«апрос.SelectSingleNode("//shipmentRoute");
	
	хмлRoutePoint = хмлShipmentRoute.appendChild(хмлѕарсер.createElement("vd:routePoint"));
	хмлSqnId = хмлRoutePoint.appendChild(хмлѕарсер.createElement("vd:sqnId"));
	хмлSqnId.text = 1;
	хмлEnterprise = хмлRoutePoint.appendChild(хмлѕарсер.createElement("vd:enterprise"));
	хмлGUID = хмлEnterprise.appendChild(хмлѕарсер.createElement(глм’ћЋ.ѕространства»мен
		.ѕолучить("http://api.vetrf.ru/schema/cdm/base") + ":guid"));
	// идентификатор предпри€ти€ - отправител€	
	хмлGUID.text = сзѕараметры.ѕолучить("√”»дѕредпри€ти€");
	
	ƒл€ Ќом—тр = 1 ѕо тзƒокументы. оличество—трок() ÷икл
	
		хмлRoutePoint = хмлShipmentRoute.appendChild(хмлѕарсер.createElement("vd:routePoint"));
		хмлSqnId = хмлRoutePoint.appendChild(хмлѕарсер.createElement("vd:sqnId"));
		хмлSqnId.text = Ќом—тр + 1;
		хмлEnterprise = хмлRoutePoint.appendChild(хмлѕарсер.createElement("vd:enterprise"));
		хмлGUID = хмлEnterprise.appendChild(хмлѕарсер.createElement(глм’ћЋ.ѕространства»мен
			.ѕолучить("http://api.vetrf.ru/schema/cdm/base") + ":guid"));
	// идентификатор предпри€ти€ - получател€		
		хмлGUID.text = тзƒокументы.ѕолучить«начение(Ќом—тр, 1). лиент.сх√”»дѕредпри€ти€;
		
	 онец÷икла;	
	
	хмлData.appendChild(хмл«апрос);
    
	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
		|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:apl=""http://api.vetrf.ru/schema/cdm/application"" 
		|xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""
		|xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2""
		|xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" >
		|
		|<xsl:template match=""*"">
	    |  	<xsl:apply-templates select=""*""/>
	    |</xsl:template>
		|
		|<xsl:template match=""apiKey"">
		|  	<xsl:element name=""ws:apiKey"">
		|      	<xsl:copy-of select=""*|text()""/>
		//|		<xsl:apply-templates select=""*""/>
	    |  	</xsl:element>
		|</xsl:template>
		|
		|<xsl:template match=""localTransactionId"">
		|  	<xsl:element name=""merc:localTransactionId"">
		|      	<xsl:copy-of select=""*|text()""/>
		//|		<xsl:apply-templates select=""*""/>
	    |  	</xsl:element>
		|</xsl:template>
		|
		|<xsl:template match=""initiator"">
		|  	<xsl:element name=""merc:initiator"">
		//|      	<xsl:copy-of select=""*|text()""/>
		|		<xsl:apply-templates select=""*""/>
	    |  	</xsl:element>
		|</xsl:template>
		|
		|<xsl:template match=""*"">
		|	<xsl:element name=""{name()}"">
		|		<xsl:for-each select=""@*"">
		|		   	<xsl:attribute name=""{name()}"">
		|      			<xsl:value-of select="".""/>
		|  			</xsl:attribute>
		|		</xsl:for-each>
		|  		<xsl:apply-templates />
		|	</xsl:element>
		|</xsl:template>
		|</xsl:stylesheet>
		|";
		
  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

 	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);

	сз«апрос.”становить("“екст«апроса", хмл–езультат.documentElement);
	
	сз«апрос.”становить("јдрес", ?(кс–ежим«апросов¬ет»— < 20, 
		"https://api2.vetrf.ru:8002/platform/services/2.0/ApplicationManagementService",
			"https://api.vetrf.ru/platform/services/2.0/ApplicationManagementService")); 
	
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ GetAllCountryListRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "GetAllCountryList");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ѕространства»мен.”далить¬се();
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”становить(URIѕространства»мен, "ws");		 
	
	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлBody.appendChild(хмл«апрос);
    
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	—мещение = сзѕараметры.ѕолучить("—мещение");
	≈сли ѕустое«начение(—мещение) = 0 “огда
		хмл—мещение = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":offset"));
		хмл—мещение.text = —мещение;
	 онец≈сли;	
	
	хмл«апрос.appendChild(хмлѕараметры);	
		
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса"); 
	сз«апрос.ƒобавить«начение("https://api2.vetrf.ru:8002/platform/ikar/services/IkarService", "јдрес"); 
	//сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/ikar/services/IkarService", "јдрес");
	
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ GetRegionListByCountryRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "GetRegionListByCountry");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
	URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен"); 
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ѕространства»мен.”далить¬се();
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”становить(URIѕространства»мен, "ws");		 
	
	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлGUID = хмл«апрос.SelectSingleNode("//countryGuid");
	хмлGUID.text = сзѕараметры.ѕолучить("√”»д–‘");
	
	хмлBody.appendChild(хмл«апрос);
    
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	—мещение = сзѕараметры.ѕолучить("—мещение");
	≈сли ѕустое«начение(—мещение) = 0 “огда
		хмл—мещение = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":offset"));
		хмл—мещение.text = —мещение;
	 онец≈сли;	
	
	хмл«апрос.insertBefore(хмлѕараметры, хмлGUID);	
		
	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:ws=""http://api.vetrf.ru/schema/cdm/ikar/ws-definitions"" 
	|xmlns:argc=""http://api.vetrf.ru/schema/cdm/argus/common"" xmlns:ent=""http://api.vetrf.ru/schema/cdm/cerberus/enterprise""
	|xmlns:pro=""http://api.vetrf.ru/schema/cdm/argus/production"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" 
	|xmlns:ikar=""http://api.vetrf.ru/schema/cdm/ikar"" >
	|
	|	<xsl:template match=""*"">
    |   	<xsl:apply-templates select=""*""/>
    |	</xsl:template>
    |
	|	<xsl:template match=""countryGuid""> 
    |   	<xsl:element name=""ikar:countryGuid"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""*"">
	|		<xsl:element name=""{name()}"">
	|			<xsl:for-each select=""@*"">
	|			   	<xsl:attribute name=""{name()}"">
	|       			<xsl:value-of select="".""/>
	|   			</xsl:attribute>
	|			</xsl:for-each>
    |   		<xsl:apply-templates />
	|		</xsl:element>
    |	</xsl:template>
	|
    |</xsl:stylesheet>
  	|";

	хмл‘ункци€ = ""; хмл–езультат = "";

  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

  	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);
    
	сз«апрос.ƒобавить«начение(хмл–езультат.documentElement, "“екст«апроса");	

	//сз«апрос.ƒобавить«начение("https://api2.vetrf.ru:8002/platform/ikar/services/IkarService", "јдрес"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/ikar/services/IkarService", "јдрес");
	
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ GetDistrictListByRegionRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "GetDistrictListByRegion");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
	URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен"); 
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ѕространства»мен.”далить¬се();
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”становить(URIѕространства»мен, "ws");		 
	
	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлGUID = хмл«апрос.SelectSingleNode("//regionGuid");
	хмлGUID.text = сзѕараметры.ѕолучить("√”»д–егион");
	
	хмлBody.appendChild(хмл«апрос);
    
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	—мещение = сзѕараметры.ѕолучить("—мещение");
	≈сли ѕустое«начение(—мещение) = 0 “огда
		хмл—мещение = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":offset"));
		хмл—мещение.text = —мещение;
	 онец≈сли;	
	
	хмл«апрос.insertBefore(хмлѕараметры, хмлGUID);	
		
	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:ws=""http://api.vetrf.ru/schema/cdm/ikar/ws-definitions"" 
	|xmlns:argc=""http://api.vetrf.ru/schema/cdm/argus/common"" xmlns:ent=""http://api.vetrf.ru/schema/cdm/cerberus/enterprise""
	|xmlns:pro=""http://api.vetrf.ru/schema/cdm/argus/production"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" 
	|xmlns:ikar=""http://api.vetrf.ru/schema/cdm/ikar"" >
	|
	|	<xsl:template match=""*"">
    |   	<xsl:apply-templates select=""*""/>
    |	</xsl:template>
    |
	|	<xsl:template match=""regionGuid""> 
    |   	<xsl:element name=""ikar:regionGuid"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""*"">
	|		<xsl:element name=""{name()}"">
	|			<xsl:for-each select=""@*"">
	|			   	<xsl:attribute name=""{name()}"">
	|       			<xsl:value-of select="".""/>
	|   			</xsl:attribute>
	|			</xsl:for-each>
    |   		<xsl:apply-templates />
	|		</xsl:element>
    |	</xsl:template>
	|
    |</xsl:stylesheet>
  	|";

	хмл‘ункци€ = ""; хмл–езультат = "";

  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

  	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);
    
	сз«апрос.ƒобавить«начение(хмл–езультат.documentElement, "“екст«апроса");	

	//сз«апрос.ƒобавить«начение("https://api2.vetrf.ru:8002/platform/ikar/services/IkarService", "јдрес"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/ikar/services/IkarService", "јдрес");
	
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ GetLocalityListByRegionRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "GetLocalityListByRegion");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
	URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен"); 
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ѕространства»мен.”далить¬се();
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”становить(URIѕространства»мен, "ws");		 
	
	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлGUID = хмл«апрос.SelectSingleNode("//regionGuid");
	хмлGUID.text = сзѕараметры.ѕолучить("√”»д–егион");
	
	хмлBody.appendChild(хмл«апрос);
    
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	—мещение = сзѕараметры.ѕолучить("—мещение");
	≈сли ѕустое«начение(—мещение) = 0 “огда
		хмл—мещение = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":offset"));
		хмл—мещение.text = —мещение;
	 онец≈сли;	
	
	хмл«апрос.insertBefore(хмлѕараметры, хмлGUID);	
		
	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:ws=""http://api.vetrf.ru/schema/cdm/ikar/ws-definitions"" 
	|xmlns:argc=""http://api.vetrf.ru/schema/cdm/argus/common"" xmlns:ent=""http://api.vetrf.ru/schema/cdm/cerberus/enterprise""
	|xmlns:pro=""http://api.vetrf.ru/schema/cdm/argus/production"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" 
	|xmlns:ikar=""http://api.vetrf.ru/schema/cdm/ikar"" >
	|
	|	<xsl:template match=""*"">
    |   	<xsl:apply-templates select=""*""/>
    |	</xsl:template>
    |
	|	<xsl:template match=""regionGuid""> 
    |   	<xsl:element name=""ikar:regionGuid"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""*"">
	|		<xsl:element name=""{name()}"">
	|			<xsl:for-each select=""@*"">
	|			   	<xsl:attribute name=""{name()}"">
	|       			<xsl:value-of select="".""/>
	|   			</xsl:attribute>
	|			</xsl:for-each>
    |   		<xsl:apply-templates />
	|		</xsl:element>
    |	</xsl:template>
	|
    |</xsl:stylesheet>
  	|";

	хмл‘ункци€ = ""; хмл–езультат = "";

  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

  	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);
    
	сз«апрос.ƒобавить«начение(хмл–езультат.documentElement, "“екст«апроса");	

	//сз«апрос.ƒобавить«начение("https://api2.vetrf.ru:8002/platform/ikar/services/IkarService", "јдрес"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/ikar/services/IkarService", "јдрес");
	
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ GetLocalityListByDistrictRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "GetLocalityListByDistrict");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
	URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен"); 
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ѕространства»мен.”далить¬се();
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”становить(URIѕространства»мен, "ws");		 
	
	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлGUID = хмл«апрос.SelectSingleNode("//districtGuid");
	хмлGUID.text = сзѕараметры.ѕолучить("√”»д–айон");
	
	хмлBody.appendChild(хмл«апрос);
    
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	—мещение = сзѕараметры.ѕолучить("—мещение");
	≈сли ѕустое«начение(—мещение) = 0 “огда
		хмл—мещение = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":offset"));
		хмл—мещение.text = —мещение;
	 онец≈сли;	
	
	хмл«апрос.insertBefore(хмлѕараметры, хмлGUID);	
		
	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:ws=""http://api.vetrf.ru/schema/cdm/ikar/ws-definitions"" 
	|xmlns:argc=""http://api.vetrf.ru/schema/cdm/argus/common"" xmlns:ent=""http://api.vetrf.ru/schema/cdm/cerberus/enterprise""
	|xmlns:pro=""http://api.vetrf.ru/schema/cdm/argus/production"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" 
	|xmlns:ikar=""http://api.vetrf.ru/schema/cdm/ikar"" >
	|
	|	<xsl:template match=""*"">
    |   	<xsl:apply-templates select=""*""/>
    |	</xsl:template>
    |
	|	<xsl:template match=""districtGuid""> 
    |   	<xsl:element name=""ikar:districtGuid"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""*"">
	|		<xsl:element name=""{name()}"">
	|			<xsl:for-each select=""@*"">
	|			   	<xsl:attribute name=""{name()}"">
	|       			<xsl:value-of select="".""/>
	|   			</xsl:attribute>
	|			</xsl:for-each>
    |   		<xsl:apply-templates />
	|		</xsl:element>
    |	</xsl:template>
	|
    |</xsl:stylesheet>
  	|";

	хмл‘ункци€ = ""; хмл–езультат = "";

  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

  	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);
    
	сз«апрос.ƒобавить«начение(хмл–езультат.documentElement, "“екст«апроса");	

	//сз«апрос.ƒобавить«начение("https://api2.vetrf.ru:8002/platform/ikar/services/IkarService", "јдрес"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/ikar/services/IkarService", "јдрес");
	
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ GetStreetListByLocalityRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта, "GetStreetListByLocality");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
	URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен"); 
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	
	глм’ћЋ.ѕространства»мен.”далить¬се();
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта, »м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”становить(URIѕространства»мен, "ws");		 
	
	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлGUID = хмл«апрос.SelectSingleNode("//localityGuid");
	хмлGUID.text = сзѕараметры.ѕолучить("√”»дћестности");
	
	хмлBody.appendChild(хмл«апрос);
    
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	—мещение = сзѕараметры.ѕолучить("—мещение");
	≈сли ѕустое«начение(—мещение) = 0 “огда
		хмл—мещение = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":offset"));
		хмл—мещение.text = —мещение;
	 онец≈сли;	
	
	хмл«апрос.insertBefore(хмлѕараметры, хмлGUID);	
		
	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:ws=""http://api.vetrf.ru/schema/cdm/ikar/ws-definitions"" 
	|xmlns:argc=""http://api.vetrf.ru/schema/cdm/argus/common"" xmlns:ent=""http://api.vetrf.ru/schema/cdm/cerberus/enterprise""
	|xmlns:pro=""http://api.vetrf.ru/schema/cdm/argus/production"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" 
	|xmlns:ikar=""http://api.vetrf.ru/schema/cdm/ikar"" >
	|
	|	<xsl:template match=""*"">
    |   	<xsl:apply-templates select=""*""/>
    |	</xsl:template>
    |
	|	<xsl:template match=""localityGuid""> 
    |   	<xsl:element name=""ikar:localityGuid"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""*"">
	|		<xsl:element name=""{name()}"">
	|			<xsl:for-each select=""@*"">
	|			   	<xsl:attribute name=""{name()}"">
	|       			<xsl:value-of select="".""/>
	|   			</xsl:attribute>
	|			</xsl:for-each>
    |   		<xsl:apply-templates />
	|		</xsl:element>
    |	</xsl:template>
	|
    |</xsl:stylesheet>
  	|";

	хмл‘ункци€ = ""; хмл–езультат = "";

  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

  	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);
    
	сз«апрос.ƒобавить«начение(хмл–езультат.documentElement, "“екст«апроса");	

	//сз«апрос.ƒобавить«начение("https://api2.vetrf.ru:8002/platform/ikar/services/IkarService", "јдрес"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/ikar/services/IkarService", "јдрес");
	
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ GetStockEntryListRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сз«апрос = "";
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	// оболочка дл€ запроса на сервер приложений
	хмлData = SubmitApplicationRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, 2);
	
	// построение запроса 
	»м€«апроса = "GetStockEntryListRequest";	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, 
		"http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2", »м€«апроса); 
	
	глм’ћЋ.ѕространства»мен.ƒобавить«начение("xs", "http://www.w3.org/2001/XMLSchema");
	глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлѕарсер.documentElement, 
		"xmlns:xs", "http://www.w3.org/2001/XMLSchema");
	
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, 
		хмлЌабор—хем, хмлќписание“ипа, "getStockEntryListRequest");
	
	хмлInitiator = хмл«апрос.SelectSingleNode("//initiator");
	хмлLogin = хмлInitiator.appendChild(хмлѕарсер.createElement("vd:login"));
	хмлLogin.text = сзѕараметры.ѕолучить("Ћогин»—ћеркурий");
		
	// √”»д поднадзорного объекта
	хмлenterprise = хмл«апрос.SelectSingleNode("//enterpriseGuid");
	хмлenterprise.text = сзѕараметры.ѕолучить("√”»дѕредпри€ти€");

	// количество записей в результате запроса
	хмлListOpts = хмл«апрос.insertBefore(хмлѕарсер.createElement("bs:listOptions"), хмлenterprise);
	хмлCnt = хмлListOpts.appendChild(хмлѕарсер.createElement("bs:count"));
	хмлCnt.text = 1000;

	хмлSearchPattern = хмл«апрос.appendChild(хмлѕарсер.createElement("merc:searchPattern"));
	хмлBlankFilter = хмлSearchPattern.appendChild(хмлѕарсер.createElement("vd:blankFilter"));
	хмлBlankFilter.text = "NOT_BLANK";

	хмлData.appendChild(хмл«апрос);
    	
	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:apl=""http://api.vetrf.ru/schema/cdm/application"" 
	|xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""
	|xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2""
	|xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" >
	|
	|	<xsl:template match=""*"">
    |   	<xsl:apply-templates select=""*""/>
    |	</xsl:template>
    |
	|	<xsl:template match=""localTransactionId""> 
    |   	<xsl:element name=""merc:localTransactionId"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""initiator"">
	|   	<xsl:element name=""merc:initiator"">
    //|       	<xsl:copy-of select=""*|text()""/>
	|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""apiKey"">
	|   	<xsl:element name=""ws:apiKey"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
    |
	|	<xsl:template match=""enterpriseGuid""> 
    |   	<xsl:element name=""dt:enterpriseGuid"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""*"">
	|		<xsl:element name=""{name()}"">
	|			<xsl:for-each select=""@*"">
	|			   	<xsl:attribute name=""{name()}"">
	|       			<xsl:value-of select="".""/>
	|   			</xsl:attribute>
	|			</xsl:for-each>
    |   		<xsl:apply-templates />
	|		</xsl:element>
    |	</xsl:template>
	|
    |</xsl:stylesheet>
  	|";

	хмл‘ункци€ = ""; хмл–езультат = "";

  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

  	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);

	сз«апрос.”становить("“екст«апроса", хмл–езультат.documentElement);

    сз«апрос.”становить("јдрес", ?(кс–ежим«апросов¬ет»— < 20, 
		"https://api2.vetrf.ru:8002/platform/services/2.0/ApplicationManagementService",
			"https://api.vetrf.ru/platform/services/2.0/ApplicationManagementService"));
	
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ GetPurposeListRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	хмлEnvelope = Envelope(хмлѕарсер, хмлЌабор—хем);
	хмлBody = хмлEnvelope.SelectSingleNode("//Body");

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта2, "GetPurposeList");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");
	сообщить(»м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”далить¬се();
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта2, »м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”становить(URIѕространства»мен, "ws");		 
	
	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлEnvelope, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
		
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
    
	хмлBody.appendChild(хмл«апрос);
    
	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
	
	—мещение = сзѕараметры.ѕолучить("—мещение");
	≈сли ѕустое«начение(—мещение) = 0 “огда
		хмл—мещение = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
			.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":offset"));
		хмл—мещение.text = —мещение;
	 онец≈сли;	
	
	хмл«апрос.appendChild(хмлѕараметры);	
		
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса"); 
	сз«апрос.ƒобавить«начение("https://api.vetrf.ru/platform/services/2.0/DictionaryService", "јдрес"); 
	¬озврат 1;
	
 онец‘ункции

//*******************************************
ѕроцедура ”казатьѕрефиксыѕространства»мен(хмлѕарсер)
	
	хмлѕарсер.setProperty("SelectionLanguage", "XPath");
	хмлѕарсер.setProperty("SelectionNamespaces",
	//	" xmlns:bs='http://api.vetrf.ru/schema/cdm/base'"
	//+	" xmlns:argc='http://api.vetrf.ru/schema/cdm/argus/common'"
	//+	" xmlns:ent ='http://api.vetrf.ru/schema/cdm/cerberus/enterprise'"
	//+	" xmlns:prod='http://api.vetrf.ru/schema/cdm/argus/production'"
	//+	" xmlns:ns2 ='http://api.vetrf.ru/schema/cdm/mercury/vet-document'"
	//+	" xmlns:ns1 ='http://api.vetrf.ru/schema/cdm/mercury/applications'");
		" xmlns:bs='http://api.vetrf.ru/schema/cdm/base'"
	+	" xmlns:argc='http://api.vetrf.ru/schema/cdm/argus/common'"
	+	" xmlns:ent ='http://api.vetrf.ru/schema/cdm/cerberus/enterprise'"
	+	" xmlns:prod='http://api.vetrf.ru/schema/cdm/argus/production'"
	+	" xmlns:vd ='http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2'"
	+	" xmlns:dt='http://api.vetrf.ru/schema/cdm/dictionary/v2'"
	+	" xmlns:merc ='http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2'"); 

 онецѕроцедуры	

//*******************************************
‘ункци€ PrepareOutcomingConsignmentRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сз«апрос = "";
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	// оболочка дл€ запроса на сервер приложений
	хмлData = SubmitApplicationRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, 2);

	// построение запроса 
	»м€«апроса = "PrepareOutgoingConsignmentRequest";	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, 
		"http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2", »м€«апроса); 
	
	глм’ћЋ.ѕространства»мен.ƒобавить«начение("xs", "http://www.w3.org/2001/XMLSchema");
	глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлѕарсер.documentElement, 
		"xmlns:xs", "http://www.w3.org/2001/XMLSchema");
	
	//хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, 
	//	хмлЌабор—хем, хмлќписание“ипа, "prepareOutcomingConsignmentRequest");
	хмл«апрос = хмлѕарсер.createElement("merc:prepareOutgoingConsignmentRequest");
	
	хмлInitiator = хмл«апрос.appendChild(хмлѕарсер.createElement("merc:localTransactionId"));
	
	//хмлInitiator = хмл«апрос.SelectSingleNode("//initiator");
	хмлInitiator = хмл«апрос.appendChild(хмлѕарсер.createElement("merc:initiator"));
	хмлLogin = хмлInitiator.appendChild(хмлѕарсер.createElement("vd:login"));
	хмлLogin.text = сзѕараметры.ѕолучить("Ћогин»—ћеркурий");
	
	хмлData.appendChild(хмл«апрос);
	    
  	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
		|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:apl=""http://api.vetrf.ru/schema/cdm/application"" 
		|xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""
		|xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2""
		|xmlns:env=""http://schemas.xmlsoap.org/soap/envelope/"" >
		|<xsl:key name=""delivery"" match=""—трока"" use=""–егистратор""/>
		|<xsl:key name=""doc"" match=""ƒокумент.–асходна€Ќакладна€"" use=""Ref""/>
		|<xsl:key name=""client"" match=""—правочник. онтрагенты"" use=""Ref""/>
		|<xsl:key name=""firm"" match=""—правочник.‘ирмы"" use=""Ref""/>
		|<xsl:key name=""object"" match=""—правочник.схѕодотчетныеќбъекты"" use=""Ref""/>
		|<xsl:key name=""auto"" match=""—правочник.јвтомобили"" use=""Ref""/>
		|<xsl:key name=""tovar"" match=""—правочник.Ќоменклатура"" use=""Ref""/>
		|<xsl:key name=""series"" match=""—правочник.сх—ерииЌоменклатуры"" use=""Ref""/>
		|<xsl:key name=""stockItem"" match=""vd:stockEntry"" use=""concat(vd:batch/vd:productItem/bs:guid,
		|	'#',vd:batch/vd:dateOfProduction/vd:firstDate/dt:year/.,'-',vd:batch/vd:dateOfProduction/vd:firstDate/dt:month/.,
		|		'-',vd:batch/vd:dateOfProduction/vd:firstDate/dt:day/.)""/>
		|<xsl:key name=""subProduct"" match=""—правочник.сх—убѕродукты"" use=""Ref""/>
		|<xsl:key name=""stockSubProduct"" match=""vd:stockEntry"" use=""concat(vd:batch/vd:subProduct/bs:guid,
		|	'#',vd:batch/vd:dateOfProduction/vd:firstDate/dt:year/.,'-',vd:batch/vd:dateOfProduction/vd:firstDate/dt:month/.,
		|		'-',vd:batch/vd:dateOfProduction/vd:firstDate/dt:day/.)""/>
		|<xsl:template match=""/"">
		|<ROOT>
		|	<xsl:for-each select=""//—трока[(generate-id(.)=
		|		generate-id(key('delivery', –егистратор)[1]))]"">
		|		<xsl:sort select=""delivery""/>
		|		<xsl:for-each select=""key('delivery', –егистратор)"">
		|			<xsl:if test=""position() = 1"">
		|				<xsl:variable name=""doc"" select=""–егистратор""/> 
		|				<xsl:variable name=""transport"" select=""“ранспорт""/> 
		|				<xsl:element name=""merc:delivery"">
		|					<xsl:for-each select=""key('doc', –егистратор)"">
		|						<xsl:if test=""position() = 1"">
		|							<xsl:variable name=""issueNumber"" select=""Ќомерƒок""/>
		|							<xsl:variable name=""issueDate"" select=""ƒатаƒок""/>
		|							<xsl:element name=""vd:deliveryDate"">
		|								<xsl:value-of select=""$issueDate""/>
		|							</xsl:element>
		|							<xsl:for-each select=""key('object', ѕодотчќбъект)"">
		|								<xsl:if test=""position() = 1"">
		|									<xsl:variable name=""consignorEnt"" select=""√”»дѕредпри€ти€""/>
		|									<xsl:for-each select=""key('firm', ¬ладелец)"">
		|										<xsl:if test=""position() = 1"">
		|											<xsl:element name=""vd:consignor"">
		|												<xsl:element name=""dt:businessEntity"">";
		≈сли кс–ежим«апросов¬ет»— >= 20 “огда
			стр’—Ћ = стр’—Ћ + "								<xsl:element name=""bs:guid"">
		|														<xsl:value-of select=""сх√”»д’—""/>
		|													</xsl:element>";
		»наче
	// идентификатор “   райс-“орг -а в тестовом контуре »— ћеркурий:	
			стр’—Ћ = стр’—Ћ + "								<xsl:element name=""bs:guid"">72657afb-2369-42bd-9b77-b6ca074bd67d</xsl:element>";
		 онец≈сли;
		стр’—Ћ = стр’—Ћ + "								</xsl:element>
        |												<xsl:element name=""dt:enterprise"">";
		≈сли кс–ежим«апросов¬ет»— >= 20 “огда
			стр’—Ћ = стр’—Ћ + "								<xsl:element name=""bs:guid"">
		|														<xsl:value-of select=""$consignorEnt""/>
		|													</xsl:element>";
		»наче
			стр’—Ћ = стр’—Ћ + "								<xsl:element name=""bs:guid"">8e02df9f-7c16-4050-a84b-951f3ab88511</xsl:element>";
		 онец≈сли;
		стр’—Ћ = стр’—Ћ + "								</xsl:element>
		|											</xsl:element>
		|										</xsl:if>
		|									</xsl:for-each>
		|								</xsl:if>
		|							</xsl:for-each>
		|							<xsl:for-each select=""key('client',  лиент)"">
		|								<xsl:if test=""position() = 1"">
		|									<xsl:element name=""vd:consignee"">
		|										<xsl:element name=""dt:businessEntity"">";
		≈сли кс–ежим«апросов¬ет»— >= 20 “огда
			стр’—Ћ = стр’—Ћ + "						<xsl:element name=""bs:guid"">
		|												<xsl:value-of select=""сх√”»д’—""/>
		|											</xsl:element>";
		»наче
	// идентификатор ќќќ ¬доволь в тестовом контуре »— ћеркурий:	
			стр’—Ћ = стр’—Ћ + "						<xsl:element name=""bs:guid"">453f2550-5a39-490d-b07b-e39c4f496762</xsl:element>";
		 онец≈сли;
		стр’—Ћ = стр’—Ћ + "						</xsl:element>
        |										<xsl:element name=""dt:enterprise"">";
		≈сли кс–ежим«апросов¬ет»— >= 20 “огда
			стр’—Ћ = стр’—Ћ + "						<xsl:element name=""bs:guid"">
		|												<xsl:value-of select=""сх√”»дѕредпри€ти€""/>
		|											</xsl:element>";
		»наче
			стр’—Ћ = стр’—Ћ + "						<xsl:element name=""bs:guid"">69f419fa-296d-41a2-89e6-80aecf660d6d</xsl:element>";
		 онец≈сли;
		стр’—Ћ = стр’—Ћ + "						</xsl:element>
		|									</xsl:element>
		|								</xsl:if>
		|							</xsl:for-each>
		|							<xsl:for-each select=""key('delivery', $doc)"">
		|								<xsl:variable name="" оличествоЎт"" select=""substring-before(normalize-space( оличество),'.')""/>													
		|								<xsl:element name=""vd:consignment"">
		|									<xsl:attribute name=""id"">
		|										<xsl:value-of select=""concat('cons',Ќомер—троки)""/>
		|									</xsl:attribute>
        |									<xsl:element name=""vd:volume"">
		|										<xsl:value-of select=""¬ес""/> 
		|									</xsl:element>
        |									<xsl:element name=""vd:unit"">
        |										<xsl:element name=""bs:uuid"">069792f0-053d-11e1-99b4-d8d385fbc9e8</xsl:element>
        |									</xsl:element>
        // упаковка, потребительский уровень
		|									<xsl:element name=""vd:packageList"">
		|										<xsl:element name=""dt:package"">
		|											<xsl:element name=""dt:level"">2</xsl:element>
		|											<xsl:element name=""dt:packingType"">
		|												<xsl:element name=""bs:uuid"">3b530c95-3bb0-4675-b081-cd56394558f1</xsl:element>
		|												<xsl:element name=""bs:guid"">eb23a947-4fd9-46e6-8a6f-f258433500e7</xsl:element>
		|												<xsl:element name=""dt:globalID"">PK</xsl:element>
		|												<xsl:element name=""dt:name"">”паковка</xsl:element>
		|											</xsl:element>
		|											<xsl:element name=""dt:quantity"">
		|												<xsl:value-of select=""$ оличествоЎт""/>
		|											</xsl:element>
		|										</xsl:element>
		|									</xsl:element>
		//\\
		|									<xsl:variable name=""series_id"" select=""ѕараметры—ерии""/>
        |									<xsl:element name=""vd:sourceStockEntry"">
        |										<xsl:element name=""bs:uuid"">
		|											<xsl:choose>
		|												<xsl:when test=""normalize-space(√”»д“овара/.)=''"">
		|													<xsl:for-each select=""key('subProduct', —убѕродукт)"">
		|														<xsl:if test=""position() = 1"">
		|															<xsl:for-each select=""key('stockSubProduct', concat(√”»ƒ,'#',$series_id))"">
		// интересно, сможет ли он так (это нужно дл€ того, чтобы корректно списывалс€ неидентифицированный товар):
		|                                                           	<xsl:sort select=""vd:batch/vd:productItem/bs:guid"" order=""ascending""/>
		//\\
		|                                                           	<xsl:sort select=""bs:updateDate"" order=""descending""/>
		|																<xsl:if test=""position() = 1"">
		|																	<xsl:value-of select=""bs:uuid""/> 
		|																</xsl:if>
		|															</xsl:for-each>
		|														</xsl:if>
		|													</xsl:for-each>
		|												</xsl:when>
		|												<xsl:otherwise>
		|													<xsl:for-each select=""key('stockItem', concat(√”»д“овара,'#',$series_id))"">
		|                                                      	<xsl:sort select=""bs:updateDate"" order=""descending""/>
		|														<xsl:if test=""position() = 1"">
		|															<xsl:value-of select=""bs:uuid""/> 
		|														</xsl:if>
		|													</xsl:for-each>
		|												</xsl:otherwise>
		|											</xsl:choose>
		|										</xsl:element>
        |									</xsl:element>
        |								</xsl:element>
		|							</xsl:for-each>
		|							<xsl:for-each select=""key('auto', $transport)"">
      	|								<xsl:if test=""position() = 1"">
		|									<xsl:element name=""vd:transportInfo"">
        |										<xsl:element name=""vd:transportType"">1</xsl:element>
        |										<xsl:element name=""vd:transportNumber"">
        |											<xsl:element name=""vd:vehicleNumber"">
		|												<xsl:value-of select=""√осЌомер""/>
		|											</xsl:element>
		|										</xsl:element>
        |									</xsl:element>
		|									<xsl:element name=""vd:transportStorageType"">FROZEN</xsl:element>
  		|									<xsl:element name=""vd:accompanyingForms"">
		|										<xsl:element name=""vd:waybill"">
		|											<xsl:element name=""vd:issueNumber"">
		|                      			  				<xsl:value-of select=""$issueNumber""/>
		|											</xsl:element>
		|											<xsl:element name=""vd:issueDate"">
		|                      	  	  					<xsl:value-of select=""substring($issueDate, 1, 10)""/>
		|											</xsl:element>
		|											<xsl:element name=""vd:type"">1</xsl:element>
        //|											<xsl:element name=""shp:broker"">
        //|												<xsl:element name=""bs:guid""/>
        //|											</xsl:element> 
		|										</xsl:element>
		|										<xsl:for-each select=""key('delivery', $doc)"">
		|											<xsl:element name=""vd:vetCertificate"">
		|												<xsl:attribute name=""for"">
		|													<xsl:value-of select=""concat('cons',Ќомер—троки)""/>
		|												</xsl:attribute>
		|												<xsl:element name=""vd:authentication"">
        |													<xsl:element name=""vd:purpose"">
        |														<xsl:element name=""bs:guid"">0778b8cb-f49d-4ed9-88b9-5f70af00a211</xsl:element>
        |													</xsl:element>
        |													<xsl:element name=""vd:cargoInspected"">true</xsl:element>
        |													<xsl:element name=""vd:cargoExpertized"">VSERAW</xsl:element>
        |													<xsl:element name=""vd:locationProsperity"">ћестность благополучна по заразным болезн€м животных</xsl:element>
		|													<xsl:if test=""–ешение='2'"">
		|														<xsl:for-each select=""descendant::–ег”слови€/—писок«начений/√”»д"">
		|															<xsl:element name=""vd:r13nClause"">
		|																<xsl:element name=""vd:condition"">
		|																	<xsl:element name=""bs:guid"">
		|																		<xsl:value-of select="".""/>
		|																	</xsl:element>
		|																</xsl:element>
		|															</xsl:element>
		|														</xsl:for-each>
		//|														<vd:specialMarks>ѕеремещение должно осуществл€тьс€ в соответствии с правилами регионализации.</vd:specialMarks>
		|													</xsl:if>
        |												</xsl:element>
		|												<xsl:element name=""vd:statusChange"">
        |													<xsl:element name=""vd:status"">CONFIRMED</xsl:element>
        |													<xsl:element name=""vd:specifiedPerson"">
        |														<xsl:element name=""vd:fio"">–убай јлЄна јлександровна</xsl:element>
        |														<xsl:element name=""vd:post"">ветеринар</xsl:element>
        |													</xsl:element>
		|													<xsl:element name=""vd:actualDateTime"">
		|                      	  	  							<xsl:value-of select=""$issueDate""/>
		|													</xsl:element>
        |												</xsl:element>
        |											</xsl:element>
		|										</xsl:for-each>
		|									</xsl:element>
 		|								</xsl:if>
		|							</xsl:for-each>
        |						</xsl:if>
		|					</xsl:for-each>
		|				</xsl:element>
		|			</xsl:if>
		|		</xsl:for-each>
		|	</xsl:for-each>
		|</ROOT>
		|</xsl:template>
		|</xsl:stylesheet>
		|";

	хмл‘ункци€ = ""; хмл–езультат = "";

  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);
  	глм’ћЋ.¬ыполнитьѕреобразование(сзѕараметры.ѕолучить("ƒанные«апроса"), "", хмл‘ункци€, хмл–езультат);
    
  	 олво”злов = хмл–езультат.documentElement.childNodes.length;	
  		
  	ƒл€ номѕост = 0 ѕо  олво”злов - 1 ÷икл
  		
  	// после добавлени€, узел удал€етс€ из "хмл–езультат"	
  		хмл«апрос.appendChild(хмл–езультат.documentElement.childNodes(0));
  	 онец÷икла;	
  	
//  “аб”сл–егиона = сзѕараметры.ѕолучить("“аб”сл–егиона");
//  	
//	хмлѕарсер.setProperty("SelectionLanguage", "XPath");
//	хмлѕарсер.setProperty("SelectionNamespaces", 
//		"xmlns:vd='http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2'");
//
//  	¬ыборка = хмлѕарсер.selectNodes("//vd:authentication");
//  	
//  	ƒл€ ном”зла = 0 ѕо ¬ыборка.length - 1 ÷икл
//  		
//  		хмл”зел = ¬ыборка.item(ном”зла);
//  		
//  		“аб”сл–егиона.¬ыбрать—троки();
//  		ѕока “аб”сл–егиона.ѕолучить—троку() = 1 ÷икл
//  			
//	  		r13nClause = хмл”зел.appendChild(хмлѕарсер.createElement("vd:r13nClause"));
//	  		
//	  		condition = r13nClause.appendChild(хмлѕарсер.createElement("vd:condition"));
//			
//	  		guid = condition.appendChild(хмлѕарсер.createElement("bs:guid"));
//			guid.text = “аб”сл–егиона.√”»д;
//			
//  		 онец÷икла;
//  	 онец÷икла;	
  	
	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
		|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:apl=""http://api.vetrf.ru/schema/cdm/application"" 
		|xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""
		|xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2""
		|xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" >
		|
		|<xsl:template match=""*"">
	    |  	<xsl:apply-templates select=""*""/>
	    |</xsl:template>
		|
		|<xsl:template match=""apiKey"">
		|  	<xsl:element name=""ws:apiKey"">
		|      	<xsl:copy-of select=""*|text()""/>
		//|		<xsl:apply-templates select=""*""/>
	    |  	</xsl:element>
		|</xsl:template>
		|
		|<xsl:template match=""*"">
		|	<xsl:element name=""{name()}"">
		|		<xsl:for-each select=""@*"">
		|		   	<xsl:attribute name=""{name()}"">
		|      			<xsl:value-of select="".""/>
		|  			</xsl:attribute>
		|		</xsl:for-each>
		|  		<xsl:apply-templates />
		|	</xsl:element>
		|</xsl:template>
		|</xsl:stylesheet>
		|";
		
  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

 	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);

	сз«апрос.”становить("“екст«апроса", хмл–езультат.documentElement);
	
    сз«апрос.”становить("јдрес", ?(кс–ежим«апросов¬ет»— < 20, 
		"https://api2.vetrf.ru:8002/platform/services/2.0/ApplicationManagementService",
			"https://api.vetrf.ru/platform/services/2.0/ApplicationManagementService"));
    
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ ResolveDiscrepancyRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	// оболочка дл€ запроса на сервер приложений
	хмлData = SubmitApplicationRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, 2);

	// построение запроса 
	»м€«апроса = "ResolveDiscrepancyRequest";	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, 
		"http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2", »м€«апроса); 
	
	глм’ћЋ.ѕространства»мен.ƒобавить«начение("xs", "http://www.w3.org/2001/XMLSchema");
	глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлѕарсер.documentElement, 
		"xmlns:xs", "http://www.w3.org/2001/XMLSchema");
	
	хмл«апрос = хмлѕарсер.createElement("merc:resolveDiscrepancyRequest");
	
	хмлInitiator = хмл«апрос.appendChild(хмлѕарсер.createElement("merc:localTransactionId"));
	
	хмлInitiator = хмл«апрос.appendChild(хмлѕарсер.createElement("merc:initiator"));
	хмлLogin = хмлInitiator.appendChild(хмлѕарсер.createElement("vd:login"));
	хмлLogin.text = сзѕараметры.ѕолучить("Ћогин»—ћеркурий");
	
	хмлEnterprise = хмл«апрос.appendChild(хмлѕарсер.createElement("merc:enterprise"));
	хмлGuid = хмлEnterprise.appendChild(хмлѕарсер.createElement("bs:guid"));
	хмлGuid.text = сзѕараметры.ѕолучить("√”»дѕредпри€ти€");
    
	хмлInventoryDate = хмл«апрос.appendChild(хмлѕарсер.createElement("merc:inventoryDate"));
	хмлInventoryDate.text = глм’ћЋ.ƒата2—трока(сзѕараметры.ѕолучить("ƒата»нвентаризации"), "");
	
	хмлResponsible = хмл«апрос.appendChild(хмлѕарсер.createElement("merc:responsible"));
	хмлLogin = хмлResponsible.appendChild(хмлѕарсер.createElement("vd:login"));
	хмлLogin.text = сзѕараметры.ѕолучить("Ћогин»—ћеркурий");
	
	хмлStockDiscrepancy = хмл«апрос.appendChild(хмлѕарсер.createElement("merc:stockDiscrepancy"));
	хмлResultingList = хмлStockDiscrepancy.appendChild(хмлѕарсер.createElement("vd:resultingList"));
	
	стрЎаблон»нвентаризации =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:apl=""http://api.vetrf.ru/schema/cdm/application"" 
	|xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""
	|xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2""
	|xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" >
	|	<xsl:template match=""/"">
	|		<root>
	|			<xsl:for-each select=""//—трока"">
	|				<xsl:element name=""vd:stockEntry""> 
	|					<xsl:element name=""vd:batch""> 
	|						<xsl:element name=""vd:productType"">
	|							<xsl:value-of select=""“ип""/>
	|						</xsl:element>
	|						<xsl:element name=""vd:product"">
	|							<xsl:value-of select=""ѕродукт""/>
	|						</xsl:element>
	|						<xsl:element name=""vd:subProduct"">
	|							<xsl:value-of select=""—убѕродукт""/>
	|						</xsl:element>
	|						<xsl:element name=""vd:productItem"">
	|							<xsl:choose>
	|								<xsl:when test=""normalize-space(√”»д“овара/.)=''"">
	|									<xsl:element name=""dt:name"">
	|										<xsl:value-of select=""—убѕродуктЌаим""/>
    |									</xsl:element>
	|								</xsl:when>
	|								<xsl:otherwise>
	|									<xsl:element name=""bs:guid"">
	|										<xsl:value-of select=""√”»д“овара""/>
    |									</xsl:element>
	|								</xsl:otherwise>
	|							</xsl:choose>
    |						</xsl:element>
	|						<xsl:element name=""vd:volume"">
	|							<xsl:value-of select=""¬ес""/>
	|						</xsl:element>
    |						<xsl:element name=""vd:unit"">
    |							<xsl:element name=""bs:uuid"">069792f0-053d-11e1-99b4-d8d385fbc9e8</xsl:element>
    |						</xsl:element>
    |						<xsl:element name=""vd:dateOfProduction"">
    |							<xsl:element name=""vd:firstDate"">
	|								<xsl:variable name=""tile""
	|									select=""substring-after(ѕараметры—ерии,'-')""/>
    |								<xsl:element name=""vd:year"">
    |									<xsl:value-of select=""substring-before(ѕараметры—ерии,'-')""/>
    |								</xsl:element>
    |								<xsl:element name=""vd:month"">
    |									<xsl:value-of select=""substring-before($tile,'-')""/>
    |								</xsl:element>
    |								<xsl:element name=""vd:day"">
    |									<xsl:value-of select=""substring-after($tile,'-')""/>
    |								</xsl:element>
    |							</xsl:element>
    |						</xsl:element>
    |						<xsl:element name=""vd:expiryDate"">
    |							<xsl:element name=""vd:firstDate"">
	|								<xsl:variable name=""tile"" 
	|									select=""substring-after(Ќачало”тилизации,'-')""/>
    |								<xsl:element name=""vd:year"">
    |									<xsl:value-of select=""substring-before(Ќачало”тилизации,'-')""/>
    |								</xsl:element>
    |								<xsl:element name=""vd:month"">
    |									<xsl:value-of select=""substring-before($tile,'-')""/>
    |								</xsl:element>
    |								<xsl:element name=""vd:day"">
    |									<xsl:value-of select=""substring-after($tile,'-')""/>
    |								</xsl:element>
    |							</xsl:element>
    |						</xsl:element>
    |						<xsl:element name=""vd:perishable"">false</xsl:element>
	|						<xsl:element name=""vd:origin"">
	|							<xsl:element name=""vd:country"">
	|								<xsl:element name=""bs:guid"">
	|									<xsl:value-of select=""—трана""/>
	|								</xsl:element>
	|							</xsl:element>
	|							<xsl:element name=""vd:producer"">
	|								<xsl:element name=""dt:enterprise"">
	|									<xsl:element name=""bs:guid"">
	|										<xsl:value-of select=""ѕроизводитель""/>
	|									</xsl:element>
	|								</xsl:element>
	|							</xsl:element>
	|						</xsl:element>
	|						<xsl:element name=""vd:lowGradeCargo"">false</xsl:element>
	|						<xsl:element name=""vd:owner"">
	|							<xsl:element name=""bs:guid""/>
	|						</xsl:element>
	|					</xsl:element>
	|				</xsl:element>
	|			</xsl:for-each>
	|		</root>
	|	</xsl:template>
    |</xsl:stylesheet>
  	|";
  	
	хмл‘ункци€ = ""; хмл–езультат = "";
	
	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, "", "", стрЎаблон»нвентаризации);

	глм’ћЋ.¬ыполнитьѕреобразование(сзѕараметры.ѕолучить("ƒанные«апроса"), "", хмл‘ункци€, хмл–езультат);
    
  	”казатьѕрефиксыѕространства»мен(хмл–езультат);	
	
  	 олво”злов = хмл–езультат.documentElement.childNodes.length;	
  		
  	ƒл€ номѕост = 0 ѕо  олво”злов - 1 ÷икл
  		хмлResultingList.appendChild(хмл–езультат.documentElement.childNodes(0));
  	 онец÷икла;	
  	
	хмлData.appendChild(хмл«апрос);
    	
	сз«апрос.ƒобавить«начение(хмлѕарсер, "“екст«апроса");
	
    сз«апрос.ƒобавить«начение(?(кс–ежим«апросов¬ет»— < 20, 
		"https://api2.vetrf.ru:8002/platform/services/2.0/ApplicationManagementService",
			"https://api.vetrf.ru/platform/services/2.0/ApplicationManagementService"), "јдрес");
    
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ GetVetDocumentListRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сз«апрос = "";
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	// оболочка дл€ запроса на сервер приложений
	хмлData = SubmitApplicationRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, 2);
	
	// построение запроса 
	»м€«апроса = "GetVetDocumentListRequest";	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, 
		"http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2", »м€«апроса); 
	
	глм’ћЋ.ѕространства»мен.ƒобавить«начение("xs", "http://www.w3.org/2001/XMLSchema");
	глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлѕарсер.documentElement, 
		"xmlns:xs", "http://www.w3.org/2001/XMLSchema");
	
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, 
		хмлЌабор—хем, хмлќписание“ипа, "getVetDocumentListRequest");
	
	хмлInitiator = хмл«апрос.SelectSingleNode("//initiator");
	хмлLogin = хмлInitiator.appendChild(хмлѕарсер.createElement("vd:login"));
	хмлLogin.text = сзѕараметры.ѕолучить("Ћогин»—ћеркурий");
	
	// √”»д поднадзорного объекта
	хмлenterprise = хмл«апрос.SelectSingleNode("//enterpriseGuid");
	хмлenterprise.text = сзѕараметры.ѕолучить("√”»дѕредпри€ти€");

	URIѕространства»мен = "http://api.vetrf.ru/schema/cdm/base";
	»м€“ипа = "ListOptions";
	»м€ = "listOptions";
	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа);
	хмлѕараметры = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмлќписание“ипа, »м€);
	
	хмл оличество = хмлѕараметры.appendChild(хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":count"));
	хмл оличество.text = сзѕараметры.ѕолучить(" оличество");
    
	хмл«апрос.insertBefore(хмлѕараметры, хмлenterprise);
	
	хмл“ип = хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить("http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2") + ":vetDocumentType");
    хмл“ип.text = "INCOMING";

	хмл«апрос.insertBefore(хмл“ип, хмлenterprise);

	хмл—татус = хмлѕарсер.createElement(глм’ћЋ
		.ѕространства»мен.ѕолучить("http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2") + ":vetDocumentStatus");
    хмл—татус.text = "CONFIRMED";

	хмл«апрос.insertBefore(хмл—татус, хмлenterprise);
	
	хмлData.appendChild(хмл«апрос);
	
	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:apl=""http://api.vetrf.ru/schema/cdm/application"" 
	|xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""
	|xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2""
	|xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" >
	|
	|	<xsl:template match=""*"">
    |   	<xsl:apply-templates select=""*""/>
    |	</xsl:template>
    |
	|	<xsl:template match=""localTransactionId""> 
    |   	<xsl:element name=""merc:localTransactionId"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""initiator"">
	|   	<xsl:element name=""merc:initiator"">
    //|       	<xsl:copy-of select=""*|text()""/>
	|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""apiKey"">
	|   	<xsl:element name=""ws:apiKey"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
    |
	|	<xsl:template match=""enterpriseGuid""> 
    |   	<xsl:element name=""dt:enterpriseGuid"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""*"">
	|		<xsl:element name=""{name()}"">
	|			<xsl:for-each select=""@*"">
	|			   	<xsl:attribute name=""{name()}"">
	|       			<xsl:value-of select="".""/>
	|   			</xsl:attribute>
	|			</xsl:for-each>
    |   		<xsl:apply-templates />
	|		</xsl:element>
    |	</xsl:template>
	|
    |</xsl:stylesheet>
  	|";

	хмл‘ункци€ = ""; хмл–езультат = "";

  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

  	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);

	сз«апрос.”становить("“екст«апроса", хмл–езультат.documentElement);

    сз«апрос.”становить("јдрес", ?(кс–ежим«апросов¬ет»— < 20, 
		"https://api2.vetrf.ru:8002/platform/services/2.0/ApplicationManagementService",
			"https://api.vetrf.ru/platform/services/2.0/ApplicationManagementService"));
	
	¬озврат 1;

 онец‘ункции

//*******************************************
‘ункци€ GetVetDocumentByUuidRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сз«апрос = "";
	
	сзѕараметры.¬ыгрузить(сз«апрос);
	
	// оболочка дл€ запроса на сервер приложений
	хмлData = SubmitApplicationRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, 2);
	
	// построение запроса 
	»м€«апроса = "GetVetDocumentByUuidRequest";	
	хмлќписание“ипа = глм’ћЋ.ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, 
		"http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2", »м€«апроса); 
	
	глм’ћЋ.ѕространства»мен.ƒобавить«начение("xs", "http://www.w3.org/2001/XMLSchema");
	глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлѕарсер.documentElement, 
		"xmlns:xs", "http://www.w3.org/2001/XMLSchema");
	
	хмл«апрос = глм’ћЋ.ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, 
		хмлЌабор—хем, хмлќписание“ипа, "getVetDocumentByUuidRequest");
	
	хмлInitiator = хмл«апрос.SelectSingleNode("//initiator");
	хмлLogin = хмлInitiator.appendChild(хмлѕарсер.createElement("vd:login"));
	хмлLogin.text = сзѕараметры.ѕолучить("Ћогин»—ћеркурий");
	
	// √”»д поднадзорного объекта
	хмлenterprise = хмл«апрос.SelectSingleNode("//enterpriseGuid");
	хмлenterprise.text = сзѕараметры.ѕолучить("√”»дѕредпри€ти€");

	хмлvetdocument = хмл«апрос.SelectSingleNode("//uuid");
	хмлvetdocument.text = сзѕараметры.ѕолучить("√”»д¬ет—видетельства");

	хмлData.appendChild(хмл«апрос);
    	
	стр’—Ћ =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:apl=""http://api.vetrf.ru/schema/cdm/application"" 
	|xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""
	|xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2""
	|xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" >
	|
	|	<xsl:template match=""*"">
    |   	<xsl:apply-templates select=""*""/>
    |	</xsl:template>
    |
	|	<xsl:template match=""localTransactionId""> 
    |   	<xsl:element name=""merc:localTransactionId"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""initiator"">
	|   	<xsl:element name=""merc:initiator"">
    //|       	<xsl:copy-of select=""*|text()""/>
	|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""apiKey"">
	|   	<xsl:element name=""ws:apiKey"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
    |
	|	<xsl:template match=""enterpriseGuid""> 
    |   	<xsl:element name=""dt:enterpriseGuid"">
    |       	<xsl:copy-of select=""*|text()""/>
	//|			<xsl:apply-templates select=""*""/>
    |    	</xsl:element>
    |	</xsl:template>
	|
	|	<xsl:template match=""*"">
	|		<xsl:element name=""{name()}"">
	|			<xsl:for-each select=""@*"">
	|			   	<xsl:attribute name=""{name()}"">
	|       			<xsl:value-of select="".""/>
	|   			</xsl:attribute>
	|			</xsl:for-each>
    |   		<xsl:apply-templates />
	|		</xsl:element>
    |	</xsl:template>
	|
    |</xsl:stylesheet>
  	|";

	хмл‘ункци€ = ""; хмл–езультат = "";

  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

  	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);

	сз«апрос.”становить("“екст«апроса", хмл–езультат.documentElement);

    сз«апрос.”становить("јдрес", ?(кс–ежим«апросов¬ет»— < 20, 
		"https://api2.vetrf.ru:8002/platform/services/2.0/ApplicationManagementService",
			"https://api.vetrf.ru/platform/services/2.0/ApplicationManagementService"));
	
	¬озврат 1;
	
 онец‘ункции

//*******************************************
‘ункци€ ProcessIncomingConsignmentRequest(хмлѕарсер, хмлЌабор—хем, сзѕараметры, сз«апрос)
	
	сз«апрос = "";

	сзѕараметры.¬ыгрузить(сз«апрос);

	сзќписание—ообщени€—ервиса = глм’ћЋ.Ќайтиќписание—ообщени€—ервиса(кс аталогѕроекта2, "ProcessIncomingConsignmentRequest");
	
	»м€‘айла—хемы = сзќписание—ообщени€—ервиса.ѕолучить("»м€‘айла");
    URIѕространства»мен = сзќписание—ообщени€—ервиса.ѕолучить("ѕространство»мен");
	»м€ = сзќписание—ообщени€—ервиса.ѕолучить("»м€");
	ѕрефикс = сзќписание—ообщени€—ервиса.ѕолучить("ѕрефикс");

	глм’ћЋ.ѕространства»мен.”далить¬се();
	глм’ћЋ.ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, URIѕространства»мен, кс аталогѕроекта2, »м€‘айла—хемы);
	глм’ћЋ.ѕространства»мен.”становить(URIѕространства»мен, "ws");		 
	
	»м€ = —тр«аменить(»м€, ѕрефикс + ":", ""); 

	хмлќписание“ипа = хмлЌабор—хем.getSchema(URIѕространства»мен)
		.elements.itemByName(»м€).type; 

	»м€ = глм’ћЋ.ѕространства»мен.ѕолучить(URIѕространства»мен) + ":" + —тр«аменить(»м€, ѕрефикс + ":", ""); 

	ƒл€ Ќ = 1 ѕо глм’ћЋ.ѕространства»мен.–азмер—писка() ÷икл
		ѕрефикс = глм’ћЋ.ѕространства»мен.ѕолучить«начение(Ќ, URIѕространства»мен);
		глм’ћЋ.ƒобавитьјтрибут(хмлѕарсер, хмлѕарсер.documentElement, "xmlns:" + ѕрефикс, URIѕространства»мен);
	 онец÷икла;
	     
	стр’—Ћ = "<?xml version=""1.0"" encoding=""UTF-8""?>
	|<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""
	|	xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions""
	|	xmlns:app=""http://api.vetrf.ru/schema/cdm/application"" xmlns:bs=""http://api.vetrf.ru/schema/cdm/base""
	|	xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2"" xmlns:ns1=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""
	|	xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""
	|	xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"">
	|	<xsl:template match=""//soap:Body"">
	|		<xsl:element name=""soap:Envelope"">
	|			<xsl:element name=""soap:Header""/>
	|			<xsl:element name=""soap:Body"">
	|				<xsl:element name=""ws:submitApplicationRequest"">
	|					<xsl:element name=""ws:apiKey""/>
	|					<xsl:element name=""app:application"">
	|						<xsl:element name=""app:serviceId"">mercury-g2b.service:2.0</xsl:element>
	|						<xsl:element name=""app:issuerId"">
	|							<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:issuerId""/>
	|						</xsl:element>
	|						<xsl:element name=""app:issueDate""/>
	|						<xsl:element name=""app:data"">
	|							<xsl:element name=""merc:processIncomingConsignmentRequest"">
	|								<xsl:element name=""merc:localTransactionId""/>
	|								<xsl:element name=""merc:initiator"">
	|									<xsl:element name=""vd:login""/>
	|								</xsl:element>
	|								<xsl:element name=""merc:delivery"">
	|									<xsl:element name=""vd:deliveryDate""/>
	|									<xsl:element name=""vd:consignor"">
	|										<xsl:element name=""dt:businessEntity"">
	|											<xsl:element name=""bs:guid"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:consignor/dt:businessEntity/bs:guid""/>
	|											</xsl:element>
	|										</xsl:element>
	|										<xsl:element name=""dt:enterprise"">
	|											<xsl:element name=""bs:guid"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:consignor/dt:enterprise/bs:guid""/>
	|											</xsl:element>
	|										</xsl:element>
	|									</xsl:element>
	|									<xsl:element name=""vd:consignee"">
	|										<xsl:element name=""dt:businessEntity"">
	|											<xsl:element name=""bs:guid"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:consignee/dt:businessEntity/bs:guid""/>
	|											</xsl:element>
	|										</xsl:element>
	|										<xsl:element name=""dt:enterprise"">
	|											<xsl:element name=""bs:guid"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:consignee/dt:enterprise/bs:guid""/>
	|											</xsl:element>
	|										</xsl:element>
	|									</xsl:element>
	|									<xsl:element name=""vd:consignment"">
	|										<xsl:element name=""vd:productType"">
	|											<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:productType""/>
	|										</xsl:element>
	|										<xsl:element name=""vd:product"">
	|											<xsl:element name=""bs:guid"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:product/bs:guid""/>
	|											</xsl:element>
	|										</xsl:element>
	|										<xsl:element name=""vd:subProduct"">
	|											<xsl:element name=""bs:guid"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:subProduct/bs:guid""/>
	|											</xsl:element>
	|										</xsl:element>
	|										<xsl:element name=""vd:productItem"">
	|											<xsl:element name=""bs:guid"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:productItem/bs:guid""/>
	|											</xsl:element>
	|										</xsl:element>
	|										<xsl:element name=""vd:volume"">
	|											<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:volume""/>
	|										</xsl:element>
	|										<xsl:element name=""vd:unit"">
	|											<xsl:element name=""bs:guid"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:unit/bs:guid""/>
	|											</xsl:element>
	|										</xsl:element>
	|										<xsl:element name=""vd:dateOfProduction"">
	|											<xsl:copy-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:dateOfProduction/./*""/>
	|										</xsl:element>
	|										<xsl:element name=""vd:expiryDate"">
	|											<xsl:copy-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:expiryDate/./*""/>
	|										</xsl:element>
	|										<xsl:for-each select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:batchID"">
	|											<xsl:element name=""vd:batchID"">
	|												<xsl:value-of select="".""/>
	|											</xsl:element>
	|										</xsl:for-each>
	|										<xsl:element name=""vd:perishable"">
	|											<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:perishable""/>
	|										</xsl:element>
	|										<xsl:element name=""vd:origin"">
	|											<xsl:element name=""vd:country"">
	|												<xsl:element name=""bs:guid"">
	|													<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:origin/vd:country/bs:guid""/>
	|												</xsl:element>
	|											</xsl:element>
	|											<xsl:element name=""vd:producer"">
	|												<xsl:element name=""dt:enterprise"">
	|													<xsl:element name=""bs:guid"">
	|														<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:origin/vd:producer/dt:enterprise/bs:guid""/>
	|													</xsl:element>
	|												</xsl:element>
	|												<xsl:element name=""dt:role"">
	|													<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:origin/vd:producer/dt:role""/>
	|												</xsl:element>
	|											</xsl:element>
	|										</xsl:element>
	|										<xsl:element name=""vd:lowGradeCargo"">
	|											<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:batch/vd:lowGradeCargo""/>
	|										</xsl:element>
	|									</xsl:element>
	|									<xsl:element name=""vd:transportInfo"">
	|										<xsl:copy-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:transportInfo/./*""/>
	|									</xsl:element>
	|									<xsl:element name=""vd:transportStorageType"">
	|										<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:certifiedConsignment/vd:transportStorageType""/>
	|									</xsl:element>
	|									<xsl:element name=""vd:accompanyingForms"">
	|										<xsl:element name=""vd:waybill"">
	|											<xsl:element name=""vd:issueSeries""/>
	|											<xsl:element name=""vd:issueNumber"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:referencedDocument/vd:issueNumber""/>
	|											</xsl:element>
	|											<xsl:element name=""vd:issueDate"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:referencedDocument/vd:issueDate""/>
	|											</xsl:element>
	|											<xsl:element name=""vd:type"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/vd:referencedDocument/vd:type""/>
	|											</xsl:element>
	|										</xsl:element>
	|										<xsl:element name=""vd:vetCertificate"">
	|											<xsl:element name=""bs:uuid"">
	|												<xsl:value-of select=""ws:receiveApplicationResultResponse/app:application/app:result/ns1:getVetDocumentByUuidResponse/vd:vetDocument/bs:uuid""/>
	|											</xsl:element>
	|										</xsl:element>
	|									</xsl:element>
	|								</xsl:element>
	|								<xsl:element name=""merc:deliveryFacts"">
	|									<xsl:element name=""vd:vetCertificatePresence"">ELECTRONIC</xsl:element>
	|									<xsl:element name=""vd:docInspection"">
	|										<xsl:element name=""vd:responsible"">
	|											<xsl:element name=""vd:login""/>
	|										</xsl:element>
	|										<xsl:element name=""vd:result"">CORRESPONDS</xsl:element>
	|									</xsl:element>
	|									<xsl:element name=""vd:vetInspection"">
	|										<xsl:element name=""vd:responsible"">
	|											<xsl:element name=""vd:login""/>
	|										</xsl:element>
	|										<xsl:element name=""vd:result"">CORRESPONDS</xsl:element>
	|									</xsl:element>
	|									<xsl:element name=""vd:decision"">ACCEPT_ALL</xsl:element>
	|								</xsl:element>
	|							</xsl:element>
	|						</xsl:element>
	|					</xsl:element>
	|				</xsl:element>
	|			</xsl:element>
	|		</xsl:element>
	|	</xsl:template>
	|</xsl:stylesheet>
	|";
	
	хмл‘ункци€ = ""; хмл–езультат = "";

  	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ);

  	глм’ћЋ.¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);
    
   	хмл–езультат.setProperty("SelectionLanguage", "XPath");
	хмл–езультат.setProperty("SelectionNamespaces",
		"  xmlns:bs='http://api.vetrf.ru/schema/cdm/base' "
 		    + "xmlns:app='http://api.vetrf.ru/schema/cdm/application' " 
 		    + "xmlns:vd='http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2' " 
 			+ "xmlns:ws='http://api.vetrf.ru/schema/cdm/application/ws-definitions'");
		 		
  	хмлApiKey = хмл–езультат.SelectSingleNode("//ws:apiKey");
	хмлApiKey.text = сзѕараметры.ѕолучить(" лючѕриложени€");

   	хмлIssueDate = хмл–езультат.SelectSingleNode("//app:issueDate");
	хмлIssueDate.text = "" + ƒата√од(“екуща€ƒата()) + "-" + ѕрав("0" + ƒатаћес€ц(“екуща€ƒата()), 2) 
		+ "-" + ѕрав("0" + ƒата„исло(“екуща€ƒата()), 2) + "T" + “екущее¬рем€();

   	хмлDeliveryDate = хмл–езультат.SelectSingleNode("//vd:deliveryDate");
	хмлDeliveryDate.text = "" + ƒата√од(“екуща€ƒата()) + "-" + ѕрав("0" + ƒатаћес€ц(“екуща€ƒата()), 2) 
		+ "-" + ѕрав("0" + ƒата„исло(“екуща€ƒата()), 2) + "T" + “екущее¬рем€();

	хмл¬ыборка = хмл–езультат.SelectNodes("//vd:login");	
				
	ƒл€ ном«аписи = 0 ѕо хмл¬ыборка.length - 1 ÷икл           

		хмл«апись = хмл¬ыборка.item(ном«аписи);  
		хмл«апись.text = сзѕараметры.ѕолучить("Ћогин»—ћеркурий");
		
	 онец÷икла;	

	сз«апрос.”становить("“екст«апроса", хмл–езультат.documentElement);

    сз«апрос.”становить("јдрес", ?(кс–ежим«апросов¬ет»— < 20, 
		"https://api2.vetrf.ru:8002/platform/services/2.0/ApplicationManagementService",
			"https://api.vetrf.ru/platform/services/2.0/ApplicationManagementService"));
	
	¬озврат 1;

 онец‘ункции

//*******************************************
ѕроцедура «адатьѕараметры—оединени€(	// устанавливает параметры подключени€ к »— "ћеркурий"
				 						// параметры:
	ѕодотчќбъект, 						//	подотчетный объект
	сзѕараметры)						//	список значений - результат обработки
	
	≈сли кс–ежим«апросов¬ет»— < 20 “огда
	// режим работы в тестовом контуре »— "ћеркурий" 
	// (при подключении, нужно убедитьс€, что 
	// соединение устанавливаетс€ с тестовым сервером)	
		сзѕараметры.”становить("Ћогинѕрокси", "kraistorg-170918");
		сзѕараметры.”становить("ѕарольѕрокси", "8TsM8aN3y");
		сзѕараметры.”становить("Ћогин»—ћеркурий", "francuzov_al_170918");
		сзѕараметры.”становить(" лючѕриложени€", 
			"ZTM1ZjQ5YjMtYmQxMy00MzQ4LWFmMWItODQ4MDk1ODMyMjY2NzI2NTdhZmItMjM2OS00MmJkLTliNzctYjZjYTA3NGJkNjdk");
		сзѕараметры.”становить("√”»д’—", "72657afb-2369-42bd-9b77-b6ca074bd67d");
		сзѕараметры.”становить("√”»дѕредпри€ти€", "8e02df9f-7c16-4050-a84b-951f3ab88511");
	»наче
	// режим работы в продуктивном контуре (дл€ каждого 
	// юр. лица на основании реквизитов справочника)	
		¬ладелец = ѕодотчќбъект.¬ладелец;
		
		сзѕараметры.”становить("Ћогинѕрокси", —окрЋѕ(¬ладелец.схЋогинѕрокси));
		сзѕараметры.”становить("ѕарольѕрокси", —окрЋѕ(¬ладелец.схѕарольѕрокси));
		сзѕараметры.”становить("Ћогин»—ћеркурий", —окрЋѕ(¬ладелец.схЋогин»—ћеркурий));
		сзѕараметры.”становить(" лючѕриложени€", —окрЋѕ(¬ладелец.сх лючѕриложени€));
		сзѕараметры.”становить("√”»д’—", —окрЋѕ(¬ладелец.сх√”»д’—));
		сзѕараметры.”становить("√”»дѕредпри€ти€", —окрЋѕ(ѕодотчќбъект.√”»дѕредпри€ти€));
	 онец≈сли;

 онецѕроцедуры
//*******************************************
‘ункци€ ѕолучить“аблицу–егионализации(ƒанныеќперации, тзƒанные«апроса, «нач сзѕараметры)
	ѕерем хмлѕарсер, хмлЌабор—хем, хмлќтвет, сз«апрос;
	
	“аб = —оздатьќбъект("“аблица«начений");
	//“аб.Ќова€ олонка("√”»д"); 
	
	сзѕараметры.”становить("тзƒанные«апроса", тзƒанные«апроса);
	
	≈сли CheckShipmentRegionalizationRequest(хмлѕарсер, 
		хмлЌабор—хем, сзѕараметры, сз«апрос) = 1 “огда
			
			≈сли ¬ыполнить«апрос ѕриложению(сз«апрос, 
				хмлќтвет, 5, 10000) = 1 “огда
					
				”казатьѕрефиксыѕространства»мен(хмлќтвет);	
                
				//тзƒокументы = сзѕараметры.ѕолучить("“очкићаршрута");
				тзƒанные«апроса.¬ыгрузить(“аб, , , "“овар");

				“аб.—вернуть("“овар", "");

				“аб.Ќова€ олонка("–ег”слови€");
					
				“аб.Ќова€ олонка("–ешение");		
					
				//хмл¬ыборка = хмлќтвет.SelectNodes("//dt:condition/bs:guid");	 
				хмл¬ыборка = хмлќтвет.SelectNodes("//vd:r13nRouteSection");	
		        
				// возможно, первые точки маршрута будут в нашем регионе
				Ќайдены—пецифические”слови€ = 0;
				
				ƒл€ ном«аписи = 0 ѕо хмл¬ыборка.length - 1 ÷икл
                    
//					“аб = глмќбщие‘ункции.¬ыбратьѕо«начению(тзƒанные«апроса, 
//						"–егистратор", тзƒокументы.ѕолучить«начение(ном«аписи + 1, 1));
//					
//					//“аб.—вернуть("–егистратор,“овар", ""); 
//					“аб.—вернуть("“овар", "");
//
//					“аб.Ќова€ олонка("–ег”слови€");
//					
//					“аб.Ќова€ олонка("–ешение");		
					
					//“аб.Ќова€—трока();
					//“аб.√”»д = хмл¬ыборка.item(ном«аписи).text;
                    хмл—екци€ = хмл¬ыборка.item(ном«аписи);
					
					хмлѕравила = хмл—екци€.SelectNodes("vd:appliedR13nRule");	
					
					ƒл€ номѕравила = 0 ѕо хмлѕравила.length - 1 ÷икл
						
						хмлѕравило = хмлѕравила.item(номѕравила);
						
						гуид—убѕродукта = хмлѕравило.SelectSingleNode("dt:cargoType/bs:guid").text;
						
						–ешение = хмлѕравило.SelectSingleNode("dt:decision").text;

						≈сли –ешение = "2" “огда
							
							Ќайдены—пецифические”слови€ = 1;
							
							хмл”слови€ = хмлѕравило.SelectNodes("descendant::dt:condition/bs:guid");

						 онец≈сли;
						
						“аб.¬ыбрать—троки();
						
						ѕока “аб.ѕолучить—троку() = 1 ÷икл
							≈сли —окрЋѕ(“аб.“овар.сх—убѕродукт.√”»ƒ) = гуид—убѕродукта “огда
								
								“аб.–ешение = –ешение;
								
								“аб.–ег”слови€ = —оздатьќбъект("—писок«начений");
								
								≈сли –ешение = "2" “огда
									
									ƒл€ ном”слови€ = 0 ѕо хмл”слови€.length - 1 ÷икл
										
										”словие = хмл”слови€.item(ном”слови€).text;

										“аб.–ег”слови€.ƒобавить«начение(”словие, "√”»д");
										
									 онец÷икла;
								 онец≈сли;	
							 онец≈сли;	
						 онец÷икла;	
					 онец÷икла;	
					
					≈сли Ќайдены—пецифические”слови€ = 0 “огда
						≈сли ном«аписи > 0 “огда
// оптимизаци€ заполнени€ статусов (без группировки по точкам доставки)		
							ѕродолжить;
						 онец≈сли;	
					 онец≈сли;
					
					сз ол¬кл = —оздатьќбъект("—писок«начений");
					//сз ол¬кл.»з—троки—–азделител€ми("""–егистратор"",""“овар"""); 
					сз ол¬кл.»з—троки—–азделител€ми("""“овар""");
			
					 люч = глм“аблицы«начений.—оздать«апись(тзƒанные«апроса, сз ол¬кл, "", "");

					тзƒанные«апроса = глм“аблицы«начений.Ћевое—оединение(тзƒанные«апроса, 
						“аб,  люч, "", 0);

					≈сли Ќайдены—пецифические”слови€ = 1 “огда
// выход из цикла перебора параметров регионализации с текущими значени€ми 
// регионализации	
						ѕрервать;
					 онец≈сли;	
					//\\
				 онец÷икла;
			»наче
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " не удалось выполнить запрос регионализации"
						, "", "", "glSERT");
			 онец≈сли;
	»наче
		глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
			+ " не удалось составить запрос регионализации"
				, "", "", "glSERT");
	 онец≈сли;
		
	¬озврат тзƒанные«апроса;
	
 онец‘ункции

//*******************************************
‘ункци€ ѕроверка»дентификации лиента(ѕодотчќбъект,  лиент)
	ѕерем хмлѕарсер, хмлќтвет, сз«апрос;
	
	 лиенты = —оздатьќбъект("—правочник. онтрагенты");
	// возможно, понадобитс€ записать контрагента
	 лиенты.ЌайтиЁлемент( лиент);
	
	≈сли —окрЋѕ( лиенты.сх√”»дѕредпри€ти€) = "" “огда
	// клиент еще не синхронизировалс€ со справочником ¬ет»—	
		¬озврат "10007";
	»наче≈сли —окрЋѕ( лиенты.сх√”»д’—) = "" “огда
	// иногда, бывает и такое...	
		¬озврат "10007";
	 онец≈сли;	

	сзѕараметры = —оздатьќбъект("—писок«начений");
	«адатьѕараметры—оединени€(ѕодотчќбъект, сзѕараметры);
	
	ƒл€  олвоѕопыток = 1 ѕо 5 ÷икл

		сзѕараметры.”становить("√”»дѕредпри€ти€", 
			 лиенты.сх√”»дѕредпри€ти€);
			
		≈сли GetEnterpriseByGuidRequest(хмлѕарсер, 
			"", сзѕараметры, сз«апрос) = 1 “огда
	// выполнение запроса по текущему идентификатору			
				≈сли ¬ыполнить«апрос(сз«апрос, хмлќтвет, "") = 1 “огда
					”казатьѕрефиксыѕространства»мен(хмлќтвет);
			
					хмл¬ыборка = хмлќтвет.SelectNodes("//dt:enterprise");
					≈сли хмл¬ыборка.length > 0 “огда
						хмл«апись = хмл¬ыборка.item(0); 
						хмл¬ыборка—татусов = хмл«апись
							.SelectNodes("./dt:registryStatus");
						≈сли хмл«апись.SelectNodes("./bs:active")
							.item(0).text <> "true" “огда
	// запись неактивна в системе
	// уберу пока динамическую подстройку - к этим данным довери€ нет						
	//						хмл¬ыборка = хмлќтвет.SelectNodes("//bs:next");
	//						≈сли хмл¬ыборка.length > 0 “огда
	//							 лиенты.сх√”»дѕредпри€ти€ = хмл¬ыборка.item(0).text;
	//							ѕопытка
	//// запись следующего иднтификатора в качестве текущего
	//								 лиенты.«аписать();
	//								¬озврат "00020";
	//							»сключение                
	//// не удалось записать контрагента								
	//								¬озврат "10021";	
	//							 онецѕопытки;	
	//						»наче
	// не удалось найти следующий идентификатор							
								¬озврат "10021";	
	//						 онец≈сли;
	//\\                
						»наче≈сли хмл¬ыборка—татусов
							.length = 0 “огда
	// нет никаких сведений об активности записи в реестре                    	
								¬озврат "00012";
							
						»наче≈сли хмл¬ыборка—татусов
							.item(0).text <> "VERIFIED"	“огда
	// запись активна, но действие ее приостановлено
								¬озврат "10021";	
						»наче
	// текущий идентификатор - действующа€ запись
							¬озврат "00012";
						 онец≈сли;	
					»наче
	// сервер в ответ на запрос выдал что-то невн€тное					
						¬озврат "10021";	
					 онец≈сли;	
				»наче
	// запрос не удалось выполнить				
					¬озврат "10021";	
				 онец≈сли;		
		 онец≈сли;
	 онец÷икла;	

	// обработка закончилась ничем
	¬озврат "10021";	
	
 онец‘ункции

//*******************************************
‘ункци€ јвтоподбор—ерий(ƒанныеќперации)
	
	¬озврат 0;
	
 онец‘ункции
//*******************************************
‘ункци€ ѕров¬озм‘орм—ерт(хмл∆урналѕродукции, тзƒанные«апроса)
	ѕерем хмл‘ункци€, хмл–езультат, тз∆урналѕродукции;
	
	–ез = 1;
	
	глм’ћЋ.ѕрочитатьƒокумент»з—троки(хмл‘ункци€, 
		"", "", стрЎаблон«аписи∆урнала);
	// парсинг результата - ответа на запрос 
	// получени€ записей журнала продукции	
  	глм’ћЋ.¬ыполнитьѕреобразование(хмл∆урналѕродукции, 
  		"", хмл‘ункци€, хмл–езультат);
	
    ≈сли глм’ћЋ.ѕрочитать«начение(тз∆урналѕродукции, хмл–езультат, 
		"", хмл–езультат.documentElement, 0) = 1 “огда 
		
		тз∆урналѕродукции.—ортировать("√”»д—убѕродукта,√”»д“овара,"
			+ "ѕараметры—ерии,јктивность-,ƒатаќбновлени€-");	
		
		Ќом—тр«апр = тзƒанные«апроса. оличество—трок();
		ѕока Ќом—тр«апр > 0 ÷икл	
			тзƒанные«апроса.ѕолучить—трокуѕоЌомеру(Ќом—тр«апр);
			≈сли тзƒанные«апроса.¬ес > 0 “огда
	// если пустой идентификатор товара - проведение по свернутой 
	// номенклатуре - √”»д“овара записи журнала продукции также 
	// должен быть пустой			
				»м€ ол = ?(—окрЋѕ(тзƒанные«апроса.√”»д“овара) <> "", 
					"√”»д“овара", "√”»д—убѕродукта");

				“ек«нач = —окрЋѕ(тзƒанные«апроса
					.ѕолучить«начение(Ќом—тр«апр, »м€ ол)); 

	// если указан идентификатор товара - продажа 
	// по позици€м => искать именно позицию
				Ќом—тр∆урн = 0;
				≈сли тз∆урналѕродукции.Ќайти«начение(“ек«нач, 
					Ќом—тр∆урн, »м€ ол) = 1 “огда
						ѕока 1=1 ÷икл
							≈сли Ќом—тр∆урн > тз∆урналѕродукции
								. оличество—трок() “огда
	// если товара достаточно - мы не должны 
	// дойти до этой строки								
									–ез = 0;
	// переход к циклу по запис€м запроса на списание							
									ѕрервать;
							 онец≈сли;
							тз∆урналѕродукции.ѕолучить—трокуѕоЌомеру(Ќом—тр∆урн);
	// итератор обхода по строкам журнала продукции						
							Ќом—тр∆урн = Ќом—тр∆урн + 1;
							≈сли —окрЋѕ(тз∆урналѕродукции
								.јктивность) = "false" “огда
	// активные записи по продукту идут выше неактивных
									–ез = 0;
									ѕрервать;
								
							»наче≈сли —окрЋѕ(тз∆урналѕродукции.√”»д“овара) 
								<> —окрЋѕ(тзƒанные«апроса.√”»д“овара) “огда
	// "прошли" до строк журнала с другим товаром
	// и не списали весь товар
									–ез = 0;
									ѕрервать;
									
							»наче≈сли —окрЋѕ(тз∆урналѕродукции.√”»д—убѕродукта) 
								<> —окрЋѕ(тзƒанные«апроса.√”»д—убѕродукта) “огда
	// "прошли" все строки журнала с другим видом товара
	// и не списали весь товар
									–ез = 0;
									ѕрервать;
									
							»наче≈сли —окрЋѕ(тз∆урналѕродукции.ѕараметры—ерии) 
								<> —окрЋѕ(тзƒанные«апроса.ѕараметры—ерии) “огда
	// не совпали серии продукта - пропускаем
									ѕродолжить;
							 онец≈сли;	
	// нашли запись журнала продукции, дл€ списани€ товара
	                        ≈сли тзƒанные«апроса.¬ес <= тз∆урналѕродукции.¬ес “огда
								
								тз∆урналѕродукции.¬ес = тз∆урналѕродукции.¬ес
									- тзƒанные«апроса.¬ес;
	// стандартный выход при списании партии товара
								тзƒанные«апроса.”далить—троку(Ќом—тр«апр);
								ѕрервать;
							»наче
	// мы не сможем закрыть потребности списанием этой записи
								–ез = 0;
								ѕрервать;
	
							 онец≈сли;	
						 онец÷икла;	
				»наче
	// товара с данным идентификатором нет
	// в запис€х по журналу вообще не проходил
					–ез = 0;
				 онец≈сли;
			»наче
	// строка с нулевым количеством на списание			
				тзƒанные«апроса.”далить—троку(Ќом—тр«апр);
			 онец≈сли;	
	// итератор обхода по строкам запроса на списание
			Ќом—тр«апр = Ќом—тр«апр - 1;
		 онец÷икла;
	»наче
    // ошибка в формате файла записей журнала продукции
		–ез = 0;
	 онец≈сли;
	
	¬озврат –ез;
	
 онец‘ункции	
//*******************************************
ѕроцедура «аписатьƒанныеќ—ертификатах(тзќшибки, хмлќтвет)

	”казатьѕрефиксыѕространства»мен(хмлќтвет);
	
	тзќшибки.¬ыбрать—троки();
	ѕока тзќшибки.ѕолучить—троку() = 1 ÷икл
		
		≈сли тзќшибки.ќтметка = 1 “огда
			т одќшибки = —тр«аменить(тзќшибки
				. одќшибки, ":", –азделитель—трок);
			
			 одќшибки = —трѕолучить—троку(т одќшибки, 1);
			
			≈сли ( одќшибки = "1.1") »Ћ» ( одќшибки = "5.1") “огда
				
				Ќомерƒок = —окрЋѕ(тзќшибки.–егистратор.Ќомерƒок);
				√”»д—убѕродукта = —окрЋѕ(тзќшибки.“овар.сх—убѕродукт.√”»д); 
				√”»дЌаим = —окрЋѕ(тзќшибки.“овар.сх√”»д);
				
				ƒатаѕроизв = тзќшибки.—ери€.Ќачалоѕроизводства;
				ƒатаѕроизв = "" + ƒата√од(ƒатаѕроизв) 
					+ ƒатаћес€ц(ƒатаѕроизв) + ƒата„исло(ƒатаѕроизв);
	// выборка идентификатора ветсвидетельсьва 
	// по данным партии товара					
				стр“екст«апроса—убѕрод = "//merc:vetDocument[vd:referencedDocument/vd:issueNumber/.='" 
					+ Ќомерƒок + "' and vd:certifiedConsignment/vd:batch/vd:subProduct/bs:guid/.='" 
					+ √”»д—убѕродукта + "' and vd:certifiedConsignment/vd:batch/vd:dateOfProduction/vd:firstDate/.='" 
					+ ƒатаѕроизв + "']/bs:uuid/."; 
		
				стр“екст«апросаЌаим = —тр«аменить(стр“екст«апроса—убѕрод, "vd:subProduct", "vd:productItem");	 
				стр“екст«апросаЌаим = —тр«аменить(стр“екст«апросаЌаим, √”»д—убѕродукта, √”»дЌаим);	
		
				¬ыборка = хмлќтвет.SelectNodes(стр“екст«апросаЌаим);
				
				≈сли ¬ыборка.length = 0 “огда
					¬ыборка = хмлќтвет.SelectNodes(стр“екст«апроса—убѕрод);
				 онец≈сли;	
				
				≈сли ¬ыборка.length > 0 “огда
					тзќшибки.√”»д¬ет—видетельства = ¬ыборка.item(0).text;
					
					тзќшибки. одќшибки = "0.9:" 
						+ глм—ерииЌоменклатуры
							. одыќшибок.ѕолучить("00016");
				»наче
	// что то пошло не так...
					тзќшибки. одќшибки = "5.2:" 
						+ глм—ерииЌоменклатуры. одыќшибок
							.ѕолучить("10018");
				 онец≈сли;
			 онец≈сли;	
		 онец≈сли;
	 онец÷икла;	
	
	глм—ерииЌоменклатуры
		.«аписать–езультатќбработкиќперации(тзќшибки);

 онецѕроцедуры	
//*******************************************
‘ункци€ —оздать«а€вку(ƒанныеќперации, тзƒанные«апроса, сзѕараметры)
	ѕерем хмлѕарсер, хмлƒанные«апроса, хмлЌабор—хем, 
		хмл орень, хмлЎаблон, сз«апрос, хмлќтвет, 
			тзƒокументы, тзƒанные»нвентаризации;
	
	≈сли тзƒанные«апроса. оличество—трок() = 0 “огда
	// запрос по пустой таблице формируетс€ и 
	// не производитс€
		≈сли м¬ести∆урнал—ертификации = 1 “огда
			глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
				+ " на оформление за€вки передан пустой набор строк", 
					"", "", "glSERT");
		 онец≈сли;		
		¬озврат 1;
	»наче≈сли ѕустое«начение(сзѕараметры.ѕолучить("√”»д’—")) = 1 “огда
		≈сли м¬ести∆урнал—ертификации = 1 “огда
			глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
				+ " фирма не настроена на передачу данных в ¬ет»—", 
					"", "", "glSERT");
		 онец≈сли;		
		¬озврат 1;
	 онец≈сли;	
	
	// шаблон-фильтр выгрузки объектов учетной
	// системы в »— "ћеркурий"
	стр»м€Ўаблона = глмќбщие‘ункции
		.¬ыгрузить“аблицу¬‘айл("VetisObjectFilter", "xsl");
    
	≈сли глм’ћЋ.—оздатьЁлементƒокумента(хмлЎаблон, 
		хмлЌабор—хем, "", "ROOT", "windows-1251") = 0 “огда
			≈сли м¬ести∆урнал—ертификации = 1 “огда
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " не удалось создать xml-документ", 
						"", "", "glSERT");
			 онец≈сли;		
			¬озврат 0;
	»наче≈сли глм’ћЋ.ѕрочитатьƒокумент»з‘айла(хмлЎаблон, 
		"", "", стр»м€Ўаблона) = 0 “огда
			≈сли м¬ести∆урнал—ертификации = 1 “огда
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " не удалось прочитать xml-документ", 
						"", "", "glSERT");
			 онец≈сли;		
			¬озврат 0;
	 онец≈сли;

	// выполнение запроса к журналу »— "ћеркурий", 
	// загрузка результата в исходный файл дл€ 
	// формировани€ запроса
	≈сли глм’ћЋ.—оздатьЁлементƒокумента(хмлƒанные«апроса, 
		хмлЌабор—хем, хмл орень, "ROOT", "windows-1251") = 0 “огда
			≈сли м¬ести∆урнал—ертификации = 1 “огда
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " не удалось создать xml-документ", 
						"", "", "glSERT");
			 онец≈сли;		
			¬озврат 0;
    
	»наче≈сли GetStockEntryListRequest(хмлѕарсер, 
		хмлЌабор—хем, сзѕараметры, сз«апрос) = 0 “огда
			≈сли м¬ести∆урнал—ертификации = 1 “огда
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " не удалось создать запрос к журналу продукции"
						, "", "", "glSERT");
			 онец≈сли;		
			¬озврат 0;
				
	»наче≈сли ¬ыполнить«апрос ѕриложению(сз«апрос, 
		хмлќтвет, 5, 30000) <> 1 “огда
    // дальше, за€вку не ждем, пробуем в другой раз
			≈сли м¬ести∆урнал—ертификации = 1 “огда
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " не удалось выполнить запрос к журналу продукции"
						, "", "", "glSERT");
			
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ хмлќтвет.xml , "", "", "glSERT");
			 онец≈сли;		
			¬озврат 0;
	»наче
   		тзќшибки = глм—ерииЌоменклатуры
			.ѕолучить–езультатќбработкиќперации(ƒанныеќперации
				.ѕолучить("ќсновнойƒокумент"), "");

		”казатьѕрефиксыѕространства»мен(хмлќтвет);	
	// выборка данных записей журнала продукции
	// в »— "ћеркурий"
		хмл¬ыборка = хмлќтвет.SelectNodes("//vd:stockEntry");	
		
		ном«аписи = хмл¬ыборка.length - 1;
		ѕока ном«аписи >= 0 ÷икл
			хмл«апись = хмл¬ыборка.item(ном«аписи);
	// обратный обход, т.к. узел удал€етс€ из документа, 
	// при добавлении в новый		
		    ном«аписи = ном«аписи - 1;
			хмл—татус = хмл«апись.SelectNodes("./bs:active").item(0);
			≈сли хмл—татус.text = "true" “огда
	// добавл€ем только активные записи журнала			
				хмл¬ес = хмл«апись.SelectNodes("./vd:batch/vd:volume").item(0);
				≈сли „исло(хмл¬ес.text) > 0 “огда 
	// добавл€ем только записи с ненулевым остатком
					хмл орень.appendChild(хмл«апись);
					
				 онец≈сли;
			 онец≈сли;
		 онец÷икла;
		
		тзƒанные«апроса.¬ыгрузить(тзƒанные»нвентаризации);
		
		≈сли ѕров¬озм‘орм—ерт(хмлƒанные«апроса, тзƒанные»нвентаризации) = 0 “огда
	// тут различный набор действий, в зависимости 
	// от настройки модул€ и текущего статуса операции
			—татусќформл = Ћев("0.9:" + глм—ерииЌоменклатуры
				. одыќшибок.ѕолучить("00016"), 38);
				
			 одќшибки = ?(тзќшибки
				.Ќайти«начение(—татусќформл, 0, 
					" одќшибки") = 0, "4.6:", "5.3:") 
						+ глм—ерииЌоменклатуры
							. одыќшибок.ѕолучить("10013");
			
	    	тзƒанные»нвентаризации.Ќова€ олонка(" одќшибки");
			тзƒанные»нвентаризации.«аполнить( одќшибки, , , " одќшибки");

			сз ол¬кл = —оздатьќбъект("—писок«начений");
			сз ол¬кл.»з—троки—–азделител€ми("""“овар"",""—ери€""");
	
			 люч = глм“аблицы«начений.—оздать«апись(тзќшибки, сз ол¬кл, "", "");
			тзќшибки = глм“аблицы«начений.Ћевое—оединение(тзќшибки, 
				тзƒанные»нвентаризации,  люч, "", 0);
		    
			глм—ерииЌоменклатуры
				.«аписать–езультатќбработкиќперации(тзќшибки);
	// не удалось выпустить транспортный сертификат
			≈сли м¬ести∆урнал—ертификации = 1 “огда
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " недостаточно остатка дл€ выпуска сертификата", 
						"", "", "glSERT");
			 онец≈сли;		
			¬озврат 0;
		 онец≈сли;		
		
	 онец≈сли;
    
	тзƒанные«апроса.¬ыгрузить(тзƒанные»нвентаризации);
		
	тзƒанные»нвентаризации.—вернуть("—убѕродукт,√”»д“овара"
		+ ",ѕараметры—ерии,–егистратор,“овар,—ери€,“ранспорт", "¬ес,  оличество");
	
	// региональные услови€
	тзƒанные»нвентаризации = ѕолучить“аблицу–егионализации(ƒанныеќперации, 
		тзƒанные»нвентаризации, сзѕараметры);
	//\\	
		
	≈сли глм’ћЋ.—ериализовать«начение(тзƒанные»нвентаризации, 
		хмлƒанные«апроса, хмл орень, хмлЌабор—хем, хмлЎаблон, 1) = 0 “огда
			≈сли м¬ести∆урнал—ертификации = 1 “огда
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " не удалось сериализовать данные запроса", 
						"", "", "glSERT");
			 онец≈сли;		
			¬озврат 0;
	 онец≈сли;

	–ежим«апросов = кс–ежим«апросов¬ет»— 
		- ÷ел(кс–ежим«апросов¬ет»— / 10) * 10;
	
	≈сли –ежим«апросов = 0 “огда
	// формирование только исходного файла 
	// выгрузки, без формировани€ самого запроса
		глм’ћЋ.¬ывестиƒокумент¬‘айл(хмлƒанные«апроса, 
			 аталог»Ѕ() + "SYSLOG\VetIS.xml");
			
		≈сли м¬ести∆урнал—ертификации = 1 “огда
			глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
				+ " записаны исходные данные запроса", 
					"", "", "glSERT");
		 онец≈сли;		
		¬озврат 0;
	 онец≈сли;
	
	сзѕараметры.”становить("ƒанные«апроса", хмлƒанные«апроса);
	
	//сзѕараметры.”становить("“аб”сл–егиона", 
	//	ѕолучить“аблицу–егионализации(ƒанныеќперации, 
	//		тзƒанные»нвентаризации, сзѕараметры));
	
	// формирование запроса на регистрацию 
	// транспортной транзакции и его выполнение
	≈сли PrepareOutcomingConsignmentRequest(хмлѕарсер, 
		хмлЌабор—хем, сзѕараметры, сз«апрос) = 0 “огда
			≈сли м¬ести∆урнал—ертификации = 1 “огда
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " не удалось создать запрос на создание партии", 
						"", "", "glSERT");
			 онец≈сли;		
			¬озврат 0;
	»наче
		≈сли –ежим«апросов = 1 “огда
	// только формирование и выгрузка текста 
	// запроса
			“екст = —оздатьќбъект("“екст");
			“екст.ƒобавить—троку(сз«апрос.ѕолучить("“екст«апроса").xml);
			“екст.«аписать( аталог»Ѕ() + "SYSLOG\VetIS.xml");
		
			≈сли м¬ести∆урнал—ертификации = 1 “огда
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " записан запрос на создание партии", 
						"", "", "glSERT");
			 онец≈сли;		
			¬озврат 0;
		»наче≈сли –ежим«апросов = 2 “огда
			
			ћетка = _getPerformanceCounter();
			
			тзƒанные»нвентаризации
				.¬ыгрузить(тзƒокументы, , , "–егистратор,“овар,—ери€");

			тзƒокументы.—вернуть("–егистратор,“овар,—ери€", "");
			тзƒокументы.Ќова€ олонка("ќтметка");
			тзƒокументы.«аполнить(1, , , "ќтметка");
	
	// перевод операции в статус ожидани€ транзакции 
	// ¬ет»— нужно выбрать только те коды ошибок, которые 
	// соответствуют переданным данным запроса (по 
	// подотчетному объекту)				
			сз ол¬кл = —оздатьќбъект("—писок«начений");
			сз ол¬кл.»з—троки—–азделител€ми("""–егистратор"",""“овар"",""—ери€""");
	
			 люч = глм“аблицы«начений.—оздать«апись(тзќшибки, сз ол¬кл, "", "");

			тзќшибки = глм“аблицы«начений.Ћевое—оединение(тзќшибки, 
				тзƒокументы,  люч, "", 0);
            
			тзќшибки.¬ыбрать—троки();
			ѕока тзќшибки.ѕолучить—троку() = 1 ÷икл
				
				≈сли тзќшибки.ќтметка = 1 “огда
					т одќшибки = —тр«аменить(тзќшибки
						. одќшибки, ":", –азделитель—трок);
					
					 одќшибки = —трѕолучить—троку(т одќшибки, 1);
					
					≈сли  одќшибки = "2.1" “огда
						
						тзќшибки.ƒоп»нфо = ћетка;
						тзќшибки. одќшибки = "5.1:" + глм—ерииЌоменклатуры
							. одыќшибок.ѕолучить("10015")
					 онец≈сли;	
				 онец≈сли;
			 онец÷икла;	
				
			глм—ерииЌоменклатуры
				.«аписать–езультатќбработкиќперации(тзќшибки);

			≈сли м¬ести∆урнал—ертификации = 1 “огда
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " запрос на создание партии сформирован", 
						"", "", "glSERT");
			 онец≈сли;
	// выполнение запроса на сервисе ¬ет»—
	    	–ез = ¬ыполнить«апрос ѕриложению(сз«апрос, хмлќтвет, 5, 10000, , ћетка); 
	// сохранение в документе идентификатора
	// за€вки дл€ обработки результата
			≈сли м¬ести∆урнал—ертификации = 1 “огда
				глмќбщие‘ункции.«апись¬∆урнал("" + —еансаPID 
					+ " запрос на создание партии выполнен с кодом #" + –ез, 
						"", "", "glSERT");
			 онец≈сли;

			≈сли –ез = 1 “огда
	// результат: completed 
                «аписатьƒанныеќ—ертификатах(тзќшибки, хмлќтвет);
				
			»наче≈сли –ез = -1 “огда
	// результат: accepted или in_process
		        тзќшибки.¬ыбрать—троки();
				ѕока тзќшибки.ѕолучить—троку() = 1 ÷икл
	// нужно выбрать только те коды ошибок, которые 
	// соответствуют переданным данным запроса (по 
	// подотчетному объекту)				
					≈сли тзќшибки.ќтметка = 1 “огда
						т одќшибки = —тр«аменить(тзќшибки
							. одќшибки, ":", –азделитель—трок);
						
						 одќшибки = —трѕолучить—троку(т одќшибки, 1);
						
						≈сли  одќшибки = "5.1" “огда
							
							тзќшибки.ƒоп»нфо = ѕолучитьЌомер«а€вки(хмлќтвет);
							тзќшибки. одќшибки = "1.1:" + глм—ерииЌоменклатуры
								. одыќшибок.ѕолучить("00017");
						 онец≈сли;	
					 онец≈сли;
				 онец÷икла;
	
				глм—ерииЌоменклатуры.«аписать–езультатќбработкиќперации(тзќшибки);
			»наче //{–ез = 0}
	// общий глюк в работе системы, сохран€ть что-то 
	// в статусах сертификатов не имеет смысла
				¬озврат 0;
			 онец≈сли;	
		 онец≈сли;
	 онец≈сли;
	
	¬озврат 1;
	
 онец‘ункции	
//*******************************************
‘ункци€ —оздатьЌабор«а€вокЌаќформление“ранспортнойѕартии(ƒанныеќперации)	
    ѕерем ѕодотчќбъект;

	// параметры подключени€ к серверу »— "ћеркурий"
	сзѕараметры = —оздатьќбъект("—писок«начений");	
	
	тзќшибки = глм—ерииЌоменклатуры
		.ѕолучить–езультатќбработкиќперации(ƒанныеќперации
			.ѕолучить("ќсновнойƒокумент"), "");

	≈сли кс–ежим«апросов¬ет»— < 10 “огда

		тзќшибки.¬ыбрать—троки();
		ѕока тзќшибки.ѕолучить—троку() = 1 ÷икл
			т одќшибки = —тр«аменить(тзќшибки
				. одќшибки, ":", –азделитель—трок);
				
			 одќшибки = —трѕолучить—троку(т одќшибки, 1);

			≈сли  одќшибки = "2.1" “огда
				тзќшибки. одќшибки = "0.1:" 
					+ глм—ерииЌоменклатуры
						. одыќшибок.ѕолучить("00014");
			 онец≈сли;	
		 онец÷икла;	

		¬озврат глм—ерииЌоменклатуры
			.«аписать–езультатќбработкиќперации(тзќшибки);
	 онец≈сли;
    
	тз—ертификаты = глм—ерииЌоменклатуры
		.¬ыбратьƒвижени€ѕо—ертификатам(ƒанныеќперации
			.ѕолучить("ќсновнойƒокумент"));
	
	тз—ертификаты.ѕолучить—трокуѕоЌомеру(1);
	
    сз ол¬кл = —оздатьќбъект("—писок«начений");
	сз ол¬кл.»з—троки—–азделител€ми("""–егистратор"",""“овар"",""—ери€""");
	
	 люч = глм“аблицы«начений.—оздать«апись(тз—ертификаты, сз ол¬кл, "", "");
    
	тз—ертификаты = глм“аблицы«начений
		.Ћевое—оединение(тз—ертификаты, 
			тзќшибки,  люч, "", 1);
	
	 одќшибки = Ћев("2.1:" + глм—ерииЌоменклатуры
		. одыќшибок.ѕолучить("00012"), 38);		
			
	тз—ертификаты = глмќбщие‘ункции
		.¬ыбратьѕо«начению(тз—ертификаты, 
			" одќшибки",  одќшибки);
	
	// формирование запросов происходит по каждой
	// фирме отдельно
	тз—ертификаты.—ортировать("ѕодотчќбъект*,–егистратор*");
    
	тзƒанные«апроса = —оздатьќбъект("“аблица«начений");
	тзƒанные«апроса.Ќова€ олонка("“ип","—трока");
	тзƒанные«апроса.Ќова€ олонка("ѕродукт");
	тзƒанные«апроса.Ќова€ олонка("—убѕродукт"); 
	тзƒанные«апроса.Ќова€ олонка("√”»д—убѕродукта");
	тзƒанные«апроса.Ќова€ олонка("Ќаим—убѕродукта");
	тзƒанные«апроса.Ќова€ олонка("“овар");
	тзƒанные«апроса.Ќова€ олонка("√”»д“овара");
	тзƒанные«апроса.Ќова€ олонка("—ери€");
	тзƒанные«апроса.Ќова€ олонка("ѕараметры—ерии");
	тзƒанные«апроса.Ќова€ олонка("¬ес","„исло");
	тзƒанные«апроса.Ќова€ олонка(" оличество","„исло");
	тзƒанные«апроса.Ќова€ олонка("–егистратор"); 
	тзƒанные«апроса.Ќова€ олонка("“ранспорт"); 
	тзƒанные«апроса.Ќова€ олонка("Ќачало”тилизации"); 
	тзƒанные«апроса.Ќова€ олонка("ѕроизводитель");
	тзƒанные«апроса.Ќова€ олонка("—трана");
	
	Ќ— = 1;
	
	ѕока 1=1 ÷икл
		
		≈сли Ќ— > ћин(м олво—трок¬«апросе,
			тз—ертификаты. оличество—трок()) “огда
	// запрос и результат выполнени€ должен быть 
	// компактным в случае, когда ограничиваемс€ 
	// 3-им уровнем иерархии
			тзƒанные«апроса.—вернуть("“ип,ѕродукт,—убѕродукт,"
				+ "√”»д—убѕродукта,Ќаим—убѕродукта,“овар,√”»д“овара,"
				+ "—ери€,ѕараметры—ерии,–егистратор,“ранспорт,"
				+ "Ќачало”тилизации,ѕроизводитель,—трана","¬ес,  оличество");
	// закончили формирование сертификатов по всем
	// фирмам, текуща€ - последн€€
			¬озврат —оздать«а€вку(ƒанныеќперации, 
				тзƒанные«апроса, сзѕараметры);
		»наче
			
			тз—ертификаты.ѕолучить—трокуѕоЌомеру(Ќ—);
	// итератор цикла		
			Ќ— = Ќ— + 1;
			
			≈сли тз—ертификаты.ѕодотчќбъект <> ѕодотчќбъект “огда
	// закончили формирование данных запроса по
	// текущей фирме, можно переходить к отправке
				≈сли ѕустое«начение(ѕодотчќбъект) = 0 “огда
					тзƒанные«апроса.—вернуть("“ип,ѕродукт,—убѕродукт,"
						+ "√”»д—убѕродукта,Ќаим—убѕродукта,“овар,√”»д“овара,"
						+ "—ери€,ѕараметры—ерии,–егистратор,“ранспорт,"
						+ "Ќачало”тилизации,ѕроизводитель,—трана","¬ес,  оличество");
					≈сли —оздать«а€вку(ƒанныеќперации,
						тзƒанные«апроса, сзѕараметры) = 0 “огда
							¬озврат 0;
					 онец≈сли;		
				 онец≈сли;
	// установить разделитель учета			
				ѕодотчќбъект = тз—ертификаты.ѕодотчќбъект;
	// инициализаци€ данных запроса, заполнение
	// набора параметров
				тзƒанные«апроса.”далить—троки();
				
				сзѕараметры.”далить¬се();
	// в идеале, все за€вки к приложению проводить
	// через "—оздать«а€вку", различа€ их по
	// параметру "‘ункци€"
				сзѕараметры.”становить("‘ункци€",
					"PrepareOutcomingConsignmentRequest");
					
				«адатьѕараметры—оединени€(ѕодотчќбъект, сзѕараметры);
	// контроль параметров соединени€ производитс€
	// на стороне сервера ¬етис, при отправке запроса
			 онец≈сли;	
		 онец≈сли;	
		
		тзƒанные«апроса.Ќова€—трока();

		тзƒанные«апроса.“ип 		 = тз—ертификаты.“овар.сх“ип;
		тзƒанные«апроса.ѕродукт 	 = тз—ертификаты.“овар.схѕродукт.√”»д;
		тзƒанные«апроса.—убѕродукт   =   тз—ертификаты.“овар.сх—убѕродукт;
		тзƒанные«апроса.Ќаим—убѕродукта 
			= тз—ертификаты.“овар.сх—убѕродукт.Ќаименование;
		тзƒанные«апроса.√”»д—убѕродукта 
			= тз—ертификаты.“овар.сх—убѕродукт.√”»д;
	    
		тзƒанные«апроса.“овар		 = тз—ертификаты.“овар;	
		≈сли (тз—ертификаты. лиент.сх—верткаѕо¬идуѕрод = 0) 
			и (тз—ертификаты.“овар.ѕроизв.сх—верткаѕо¬идуѕрод = 0) “огда
				тзƒанные«апроса.√”»д“овара   = тз—ертификаты.“овар.сх√у»ƒ;
		 онец≈сли;

		тзƒанные«апроса.—ери€		 = тз—ертификаты.—ери€;	
		Ќачалоѕроизводства = тз—ертификаты.—ери€.Ќачалоѕроизводства;
	// идентификатор серии дл€ подборе в журнале	
		тзƒанные«апроса.ѕараметры—ерии = "" + ƒата√од(Ќачалоѕроизводства) 
			+ "-" + ƒатаћес€ц(Ќачалоѕроизводства) 
				+ "-" + ƒата„исло(Ќачалоѕроизводства);
					
		Ќачало”тилизации = ƒобавитьћес€ц(Ќачалоѕроизводства, 
			тз—ертификаты.“овар.—рок√одности);
			                                
		тзƒанные«апроса.Ќачало”тилизации = "" + ƒата√од(Ќачало”тилизации) 
			+ "-" + ƒатаћес€ц(Ќачало”тилизации) 
				+ "-" + ƒата„исло(Ќачало”тилизации);
				
		тзƒанные«апроса.ѕроизводитель  = тз—ертификаты.“овар.ѕроизв.сх√”»д;
		тзƒанные«апроса.—трана  = тз—ертификаты.“овар.ѕроизв.—трана.сх√”»д;

		тзƒанные«апроса.¬ес = тз—ертификаты.¬ес;
		тзƒанные«апроса. оличество = тз—ертификаты. оличество;
		тзƒанные«апроса.–егистратор = тз—ертификаты.–егистратор;
		тзƒанные«апроса.“ранспорт = тз—ертификаты
			.ќсновнойƒокумент.јвтомобиль;
	 онец÷икла;	
	
	¬озврат 0;
	
 онец‘ункции
//*******************************************
‘ункци€ —оздатьЌабор«а€вокЌа–егистрациюЌесоответствийѕо»нвентаризации(ƒанныеќперации)
	
	¬озврат 0;
	
 онец‘ункции
//*******************************************
‘ункци€ —оздатьЌабор«а€вокЌајннулирование¬етеринарного—ертификата(ƒанныеќперации)
	
	¬озврат 1;
	
 онец‘ункции
//*******************************************
‘ункци€ —оздать“ранзакцию(ƒанныеќперации)
	
	ќсновнойƒокумент = ƒанныеќперации.ѕолучить("ќсновнойƒокумент");
	≈сли ((ќсновнойƒокумент.“екущийƒокумент().¬ид() = "–асходна€Ќакладна€")
		»Ћ» (ќсновнойƒокумент.“екущийƒокумент().¬ид() = "“ранспортна€Ќакладна€")
		»Ћ» (ќсновнойƒокумент.“екущийƒокумент().¬ид() = "–ейс")) 
		» (ќсновнойƒокумент.—татус¬—ƒ = ѕеречисление.—татусы¬—ƒ.ќформлен) “огда
				¬озврат —оздатьЌабор«а€вокЌаќформление“ранспортнойѕартии(ƒанныеќперации);
	
	»наче≈сли (ќсновнойƒокумент.“екущийƒокумент().¬ид() = "ѕересортица")
		» (ќсновнойƒокумент.—татус¬—ƒ = ѕеречисление.—татусы¬—ƒ.ќформлен) “огда
			¬озврат —оздатьЌабор«а€вокЌа–егистрациюЌесоответствийѕо»нвентаризации(ƒанныеќперации);

	»наче≈сли ќсновнойƒокумент.—татус¬—ƒ = ѕеречисление.—татусы¬—ƒ.јннулирован “огда
		¬озврат —оздатьЌабор«а€вокЌајннулирование¬етеринарного—ертификата(ƒанныеќперации);
	 онец≈сли;	
	
 онец‘ункции
//*******************************************
ѕроцедура ѕроверить—татус“ранзакции(ƒанныеќперации)
	ѕерем хмлѕарсер, хмлЌабор—хем, хмлќтвет, тз оды«а€вок;
	
	сзѕараметры = —оздатьќбъект("—писок«начений");
	
	тзќшибки = глм—ерииЌоменклатуры
		.ѕолучить–езультатќбработкиќперации(ƒанныеќперации
			.ѕолучить("ќсновнойƒокумент"), "");
			
	тзќшибки.¬ыгрузить(тз оды«а€вок, , , " одќшибки, ƒоп»нфо");
	тзќшибки.Ќова€ олонка("ќтметка");

	сз ол¬кл = —оздатьќбъект("—писок«начений");
	сз ол¬кл.»з—троки—–азделител€ми("""ƒоп»нфо""");

	 люч = глм“аблицы«начений.—оздать«апись(тзќшибки, сз ол¬кл, "", "");
	
	 одќшибки = Ћев("1.1:" + глм—ерииЌоменклатуры
		. одыќшибок.ѕолучить("00017"), 38);
	
	// список идентификаторов за€вок по операций	
	тз оды«а€вок = глмќбщие‘ункции
		.¬ыбратьѕо«начению(тз оды«а€вок, 
			" одќшибки",  одќшибки);
			
	тз оды«а€вок.—вернуть("ƒоп»нфо", "");	
	
	// однострочна€ таблица дл€ установки флага 
	// обработки строк кодов ошибок
	тзѕарам«а€вки = —оздатьќбъект("“аблица«начений");
	тзѕарам«а€вки.Ќова€ олонка("ƒоп»нфо");
	тзѕарам«а€вки.Ќова€ олонка("ќтметка");
	тзѕарам«а€вки.Ќова€—трока();
	
	тз оды«а€вок.¬ыбрать—троки();
	ѕока тз оды«а€вок.ѕолучить—троку() = 1 ÷икл
	 	
		тзѕарам«а€вки.ƒоп»нфо = тз оды«а€вок.ƒоп»нфо;
		тзѕарам«а€вки.ќтметка = 1;
    // отметка строк таблицы ошибок дл€ обработки
		тзќшибки.«аполнить(0, , , "ќтметка");
		тзќшибки = глм“аблицы«начений.Ћевое—оединение(тзќшибки, 
			тзѕарам«а€вки,  люч, "", 0);
		
		Ќ— = 0;
		≈сли тзќшибки.Ќайти«начение(1, Ќ—, "ќтметка") = 1 “огда	

			«адатьѕараметры—оединени€(тзќшибки.ѕолучить«начение(Ќ—, 
				"–егистратор").ѕодотчќбъект, сзѕараметры);
		
			сзѕараметры.”становить("√”»дѕриложени€", 
				—окрЋѕ(тзѕарам«а€вки.ƒоп»нфо));
	// выборка данных по текущей за€вке			
			≈сли ѕолучить–езультат«апроса ѕриложению(хмлѕарсер, 
				хмлЌабор—хем, сзѕараметры, хмлќтвет, 1, "") = 1 “огда
	// запись данных о сертификатах, при успешном статусе за€вке				
					«аписатьƒанныеќ—ертификатах(тзќшибки, хмлќтвет);
			 онец≈сли;	
		 онец≈сли;
	 онец÷икла;
	
 онецѕроцедуры
//*******************************************
‘ункци€ ѕров√”»д лиентов( олво¬«апросе = 5, »нтервалѕроверки = 5)
	
	—ообщить("ѕроверка идентификации клиентов");
	
	 лиенты = —оздатьќбъект("—правочник. онтрагенты");
	 лиенты.»спользоватьƒату(“екуща€ƒата());
	
	“екст«апроса = "SELECT TOP " +  олво¬«апросе + " 
		|   id AS [ лиент $—правочник. онтрагенты], 
		|	sp7231 AS ƒатаѕров√”»д
		|FROM 
		|   sc46 
		|WHERE 
		|   id IN(SELECT 
		|      objid 
		|   FROM 
		|      1sconst 
		|   WHERE id = ' 4IC' AND value <> '     0')
		|ORDER BY
		|   sp7231 asc
		|";
		
	тз лиенты = глмOLEDBQuery
		.¬ыполнить»нструкцию(“екст«апроса, "", 1, 0, 0, 0);	

	тз лиенты.¬ыбрать—троки();
	
	ѕока тз лиенты.ѕолучить—троку() = 1 ÷икл
		
		≈сли тз лиенты.ƒатаѕров√”»д	> “екуща€ƒата() - »нтервалѕроверки “огда
// последн€€ проверка была сравнительно недавно				
		
		»наче≈сли  лиенты.ЌайтиЁлемент(тз лиенты. лиент) = 0 “огда
	
		»наче≈сли ѕустое«начение( лиенты.сх√”»дѕредпри€ти€) = 1 “огда
// по клиенту не ведетс€ работа с электронными ветеринарными сертификатами			
		
		»наче
			 одќш = ѕроверка»дентификации лиента(ксќсновнойѕодотчќбъект, 
				 лиенты.“екущийЁлемент());
	
			≈сли глмќбщие‘ункции.ќбработатьќшибку( одќш, 
				"глм—ерииЌоменклатуры",  онтекст) = 1 “огда

// очистка сведений идентификации клиента					
					 лиенты.сх√”»дѕредпри€ти€ = "";
			 онец≈сли;			
		 онец≈сли;	
		
		 лиенты.схƒатаѕров√”»д = “екуща€ƒата();
		 лиенты.схѕользѕров√”»д = глѕользователь;
		
		ѕопытка
// запись статуса проверки следует в любом случае			
			 лиенты.«аписать();
			
		»сключение
			—ообщить("ќшибка при записи """ +  лиенты.Ќаименование 
				+ " (" +  лиенты.Ќомер““ + ")""", "!");
			—ообщить("«адание завершено с ошибками", "!");
			
			¬озврат 0;
			
		 онецѕопытки;	
		
	 онец÷икла;	
	
	—ообщить("«адание завершено");
				
	¬озврат 1;
	
 онец‘ункции
//*******************************************
кс–ежим«апросов¬ет»— =  онстанта.–ежим«апросов¬ет»—;

кс аталогѕроекта =  аталог»Ѕ() + "ExtForms\UniReps\api\";
кс»м€“аблицы—хемы«апроса = "schemas.xmlsoap.org/soap/envelope/";
ксѕропѕустые—ерииѕри‘орм—ерт 
	=  онстанта.ѕропѕустые—ерииѕри‘орм—ерт;
ксѕропЌесинхр лиентовѕри‘орм—ерт 
	=  онстанта.ѕропЌесинхр лиентовѕри‘орм—ерт;
кс аталогѕроекта2 =  аталог»Ѕ() + "ExtForms\UniReps\api2\";

ксќсновнойѕодотчќбъект =  онстанта.ќсновна€‘ирма1.ќсновнойѕодотчќбъект;

—еансаPID = глмќбщие‘ункции.ѕолучитьPID();
//сзѕути = "";
сзѕути = —оздатьќбъект("—писок«начений");
сзѕути.ƒобавить«начение("\?xml\soap:Envelope\soap:Body\receiveApplicationResultResponse\application\result\merc:prepareOutgoingConsignmentResponse\merc:stockEntry"); 
сзѕути.ƒобавить«начение("\?xml\soap:Envelope\soap:Body\receiveApplicationResultResponse\application\result\merc:prepareOutgoingConsignmentResponse\merc:vetDocument\vd:authentication");
сзѕути.ƒобавить«начение("\?xml\soap:Envelope\soap:Body\receiveApplicationResultResponse\application\result\merc:prepareOutgoingConsignmentResponse\merc:vetDocument\vd:certifiedConsignment\vd:batch\vd:batchID");
сзѕути.ƒобавить«начение("\?xml\soap:Envelope\soap:Body\receiveApplicationResultResponse\application\result\merc:prepareOutgoingConsignmentResponse\merc:vetDocument\vd:certifiedConsignment\vd:transportInfo");
сзѕути.ƒобавить«начение("\?xml\soap:Envelope\soap:Body\receiveApplicationResultResponse\application\result\merc:prepareOutgoingConsignmentResponse\merc:vetDocument\vd:certifiedConsignment\vd:batch\vd:origin");
сзѕути.ƒобавить«начение("\?xml\soap:Envelope\soap:Body\receiveApplicationResultResponse\application\result\merc:prepareOutgoingConsignmentResponse\merc:vetDocument\vd:statusChange");

м¬ести∆урнал—оединени€ = 1;
м¬ести∆урнал—ертификации = 1;

м олво—трок¬«апросе = 30;

м»м€∆урнала—оединени€ = ?(—окрЋѕ(глѕользователь) = "FonovoeZadanie", "glVetIS", "glVetISUsr");
    
стрЎаблон«аписи∆урнала =  "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema""
	|xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:apl=""http://api.vetrf.ru/schema/cdm/application"" 
	|xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""
	|xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2""
	|xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" >
	|	<xsl:template match=""/"">
	|		<“аблица«начений>
	|			<xsl:for-each select=""//vd:stockEntry"">
	|				<xsl:element name=""—трока"">
	|					<xsl:element name=""Ќомер—троки"">
	|						<xsl:value-of select=""position()""/>
	|					</xsl:element>
	|					<xsl:element name=""јктивность"">
	|						<xsl:value-of select=""concat('&quot;',bs:active,'&quot;')""/>
	|					</xsl:element>
	|					<xsl:element name=""ƒатаќбновлени€"">
	|						<xsl:value-of select=""concat('&quot;',bs:updateDate,'&quot;')""/>
	|					</xsl:element>
	|					<xsl:element name=""√”»д—убѕродукта"">
	|						<xsl:value-of select=""concat('&quot;',vd:batch/vd:subProduct/bs:guid,'&quot;')""/>
	|					</xsl:element>
	|					<xsl:element name=""√”»д“овара"">
	|						<xsl:value-of select=""concat('&quot;',vd:batch/vd:productItem/bs:guid,'&quot;')""/>
	|					</xsl:element>
	|					<xsl:element name=""¬ес"">
	|						<xsl:value-of select=""vd:batch/vd:volume""/>
	|					</xsl:element>
	|					<xsl:element name=""ѕараметры—ерии"">
	|						<xsl:value-of select=""concat('&quot;',vd:batch/vd:dateOfProduction/vd:firstDate/dt:year,
	|							'-',vd:batch/vd:dateOfProduction/vd:firstDate/dt:month,
	|								'-',vd:batch/vd:dateOfProduction/vd:firstDate/dt:day,'&quot;')""/>
	|					</xsl:element>
	|					<xsl:element name=""¬ет—ертификат"">
	|						<xsl:value-of select=""concat('&quot;',vd:vetDocument/bs:uuid,'&quot;')""/>
	|					</xsl:element>
	|					<xsl:element name=""ѕроизводитель"">
	|						<xsl:value-of select=""concat('&quot;',vd:batch/vd:origin/vd:producer/dt:enterprise/bs:guid,'&quot;')""/>
	|					</xsl:element>
	|				</xsl:element>
	|			</xsl:for-each>
    |		</“аблица«начений>
	|	</xsl:template>
    |</xsl:stylesheet>
  	|";
