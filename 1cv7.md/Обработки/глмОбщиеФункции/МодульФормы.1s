Функция Тест() Экспорт

	Возврат "Глобальный модуль ""Общие функции"" успешно подключен";

КонецФункции

Функция ПолнНаименованиеТовара(Товар)
	
	Возврат Товар.Наименование;
	
КонецФункции

Функция ОбработатьОшибку(КодОшибки, Модуль, Конт = "")
	
	Сообщение = Шаблон("[" + Модуль + ".КодыОшибок.Получить(""" 
		+ КодОшибки + """)]");
	
	Рез = Число(Лев(КодОшибки, 1));
		
	Если (Рез = 0) И (ПустоеЗначение(Сообщение) = 0) Тогда
		Сообщить(Сообщение);
		
	ИначеЕсли Рез = 1 Тогда
		Сообщить(Сообщение, "!");
		
	ИначеЕсли (Рез = 2) 
		И (ТипЗначенияСтр(Конт) = "ГрупповойКонтекст") Тогда
			Предупреждение(Сообщение, 1);

	КонецЕсли;
	
	Возврат Рез;
	
КонецФункции

Процедура ЗадержПрим(Мсек) Экспорт
	
	WinAPI= СоздатьОбъект("DynamicWrapperX.2");
	WinAPI.Register("KERNEL32.DLL", "Sleep", "i=l", "f=s");
	WinAPI.Sleep(Мсек);
	
КонецПроцедуры

Функция ПолучитьPID() Экспорт
    Перем oLocator, oService, oShell, oApp, oChildProcess;
    Перем чPID;
    
	чPID = -1;
    
	Попытка
        oLocator = СоздатьОбъект("WbemScripting.SWbemLocator");
        oService = oLocator.ConnectServer(".", "root\CIMV2");
        oShell = СоздатьОбъект("WScript.Shell");
        oApp = oShell.Exec("rundll32.exe kernel32,Sleep");
        oChildProcess = oService.Get("Win32_Process.Handle=" + oApp.ProcessID);
        чPID = oChildProcess.ParentProcessID;
        oChildProcess.Terminate();
    Исключение
    
	КонецПопытки;
    
	Возврат чPID;
	
КонецФункции

Функция ПолучитьИмяВременногоФайла(стрРасширениеФайла="tmp") Экспорт
    
	стрПолноеИмяФайла = "";
    флНашли = 0;
    Для сч = 1 По 1000 Цикл
        стрИмяФайла = СтрЗаменить(ТекущаяДата(), ".", "") 
			+ СокрЛП(_IdToStr(_GetPerformanceCounter()))
				+ ПолучитьPID() + "." + стрРасширениеФайла;
        стрПолноеИмяФайла = КаталогВременныхФайлов() + стрИмяФайла;
        Если ФС.СуществуетФайл(стрПолноеИмяФайла) = 0 Тогда
            флНашли=1;
            Прервать;
        КонецЕсли;
    КонецЦикла;
    Если флНашли=0 Тогда
        Сообщить("Ошибка создания временного файла в директории");
        Возврат "";
	КонецЕсли;
	
    Возврат стрПолноеИмяФайла;
	
КонецФункции

Функция ЕстьРеквизитШапки(ИмяРеквизита, ВидДокумента) Экспорт     
	
	Если ПустоеЗначение(ИмяРеквизита) = 1 Тогда
		Возврат 0;
	
	ИначеЕсли Метаданные.ОбщийРеквизитДокумента(ИмяРеквизита).Выбран() = 1 Тогда
		Возврат 1;
		
	ИначеЕсли ПустоеЗначение(ВидДокумента) = 1 Тогда
		Возврат 0;
	
	ИначеЕсли Метаданные.Документ(ВидДокумента).РеквизитШапки(ИмяРеквизита).Выбран() = 1 Тогда
		Возврат 1;
		
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция ЕстьРеквизитМнЧ(ИмяРеквизита,ВидДокумента) Экспорт
	Перем Реквизит;    

	Если (ПустоеЗначение(ВидДокумента) = 1) 
		ИЛИ (ПустоеЗначение(ИмяРеквизита) = 1) Тогда

			Возврат 0;

	КонецЕсли;

	Реквизит = Метаданные.Документ(ВидДокумента)
		.РеквизитТабличнойЧасти(ИмяРеквизита);
		
	Возврат Реквизит.Выбран();
	
КонецФункции

Функция ВыгрузитьТаблицуВФайл(ИмяТаблицы, стрРасширениеФайла="mxl")

	тИмяТаблицы = СтрЗаменить(ИмяТаблицы, ";", РазделительСтрок);
		
	ТабМакет = СоздатьОбъект("Таблица");
	ТабМакет.ИсходнаяТаблица(СтрПолучитьСтроку(тИмяТаблицы, 1));
	
	Если СтрКоличествоСтрок(тИмяТаблицы) > 1 Тогда
		ТабМакет.ВывестиСекцию(СтрПолучитьСтроку(тИмяТаблицы, 2));
	Иначе	
		ТабМакет.Вывести();
	КонецЕсли;	

	файлМакета = СоздатьОбъект("Текст");
	
	КолСтр = ТабМакет.ВысотаТаблицы();
	Для Н = 1 По КолСтр Цикл

		Стр = ТабМакет.Область(Н, 1, Н, 1).Текст;
		файлМакета.ДобавитьСтроку(Стр);

	КонецЦикла;   		
	
	имяФайлаМакета = ПолучитьИмяВременногоФайла(стрРасширениеФайла);
	файлМакета.Записать(имяФайлаМакета);		
	
	Возврат имяФайлаМакета;
	
КонецФункции

Процедура СформироватьДеревоДокументов(Док)  Экспорт

	Если ТипЗначенияСтр(Док) = "Документ" Тогда

		Докум = Док;

	ИначеЕсли ТипЗначенияСтр(Док) = "ГрупповойКонтекст" Тогда

		Если Док.СравнитьТА() = -2 Тогда
			Предупреждение("Выбранный документ еще не записан!");
			Возврат;
		Иначе
			Докум = Док.ТекущийДокумент();
		КонецЕсли;

	Иначе
		Предупреждение("При вызове проц. СформироватьДеревоДокументов в параметре не передан Документ");
		Возврат;
	КонецЕсли;

	ОткрытьФорму("Отчет.ДеревоДокументов"+"#",Докум);

КонецПроцедуры

Функция ВзятьТекстЯчейкиТаблицы(Конт, ИмяТаблицы, Адрес)
	Перем Текст;
    
	глмМодули.НовыйМодуль();
	глмМодули.ПередатьКонтекст(Конт);
	глмМодули.ПередатьПараметр("Адрес", Адрес);
	глмМодули.ПередатьПараметр("ИмяТаблицы", ИмяТаблицы);
	глмМодули.ПередатьВызовМетода("
		|Таб = СоздатьОбъект(""Таблица"");
		|Таб.ИсходнаяТаблица(ИмяТаблицы);
		|Попытка
		|	Таб.ВывестиСекцию(Адрес);
		|	Результат = Таб.Область(1, 1).Текст;
		|Исключение
		|КонецПопытки;
		|");
	
	Если глмМодули.Выполнить() = 1 Тогда
		Текст = глмМодули.РезультатВыполнения();
	КонецЕсли;
	
	Возврат Текст;
 	
КонецФункции

Функция РазделитьСтроку(сзЧасти,_сСтрока,сСимвол) Экспорт
	Перем Сч, сСтрока;

	сСтрока = _сСтрока;

	сзЧасти.УдалитьВсе();

	Пока 1=1 Цикл

		Сч = Найти(сСтрока,сСимвол);

		Если Сч = 0 Тогда

			Если СтрДлина(сСтрока)>0 Тогда

				сзЧасти.ДобавитьЗначение(сСтрока);

			КонецЕсли;

			Прервать;

		КонецЕсли;

		сзЧасти.ДобавитьЗначение(Лев(сСтрока,Сч-1));

		сСтрока = Прав(сСтрока,СтрДлина(сСтрока)-Сч);

	КонецЦикла;

	Возврат сзЧасти.РазмерСписка();

КонецФункции  

Функция ЗаписьВЖурнал(ТекстЗаписи = "", ДатаЗаписи = "", ВремяЗаписи = "", ИдЖурн = "") Экспорт
	
	ИмяФайла = КаталогИБ() + "SYSLOG\" + ?(ИдЖурн = "", 
		"log_", ИдЖурн) + ?(ДатаЗаписи = "", ТекущаяДата(), 
			ДатаЗаписи) + ".txt";
	
	Текст = СоздатьОбъект("Текст");
	
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда
		Попытка
			Текст.Открыть(ИмяФайла);
		Исключение
			Сообщить("Файл журнала занят");
			Возврат 0;
		КонецПопытки;	
	КонецЕсли;	
	
	Текст.ДобавитьСтроку(?(ВремяЗаписи = "", ТекущееВремя(), 
		ВремяЗаписи) + ": " + ТекстЗаписи);
			
	Попытка		
		Текст.Записать(ИмяФайла);
	Исключение
		Возврат 0;
	КонецПопытки;	
	
	Возврат 1;
	
КонецФункции