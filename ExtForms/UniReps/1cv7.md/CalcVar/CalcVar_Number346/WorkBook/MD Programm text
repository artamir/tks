ѕерем —имв»сключени€,  онстантыMSXML, ѕространства»мен;
//*******************************************
‘ункци€ ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, “ип, Ћокальное»м€) Ёкспорт ƒалее
‘ункци€ —ериализоватьќбъект–екурсивно(ќбъект, хмлѕарсер, хмл орень, «нач хмлЌабор—хем,
	хмлЎаблон="", спќбъектов="", URIѕрефикс="myType", ќписание“ипа="", »д="") Ёкспорт ƒалее
//*******************************************
‘ункци€ “ест()
	
	¬озврат """глм’ћЋ"" - подключен";
	
 онец‘ункции	
//*******************************************
‘ункци€ ƒата2—трока(¬ыбƒата, ¬рем€="")
	
	ƒата‘ормат = ѕрав("000" + ƒата√од(¬ыбƒата), 4) 
		+ "-" + ѕрав("0" + ƒатаћес€ц(¬ыбƒата), 2) 
		+ "-" + ѕрав("0" + ƒата„исло(¬ыбƒата), 2) 
		+ "T" + ?(¬рем€="", "00:00:00", ¬рем€);
		
	¬озврат ?(ƒата‘ормат = "0000-00-00T00:00:00",
		"0001-01-01T00:00:00", ƒата‘ормат);
	
 онец‘ункции
//*******************************************
‘ункци€ —оздатьЌабор—хем(хмлЌабор—хем)
	
	ѕопытка
		хмлЌабор—хем = —оздатьќбъект("Msxml2.XMLSchemaCache.6.0");
	»сключение
		—ообщить(ќписаниеќшибки(), "!");
		¬озврат 0;
	 онецѕопытки;	
	
	¬озврат 1;
	
 онец‘ункции
//*******************************************
‘ункци€ —оздатьѕарсер(хмлѕарсер)
	
	ѕопытка
		хмлѕарсер = —оздатьќбъект("Msxml2.DOMDocument.6.0");
	»сключение
		—ообщить(ќписаниеќшибки(), "!");
		¬озврат 0;
	 онецѕопытки;	
	
	¬озврат 1;
	
 онец‘ункции	
//*******************************************
‘ункци€ —оздатьƒокумент(хмлѕарсер, хмлЌабор—хем) Ёкспорт
	
	–езультат = ?(“ип«начени€—тр(хмлЌабор—хем)="OLE.IXMLDOMSchemaCollection2", 
		1, —оздатьЌабор—хем(хмлЌабор—хем)) * —оздатьѕарсер(хмлѕарсер);
	
	≈сли –езультат = 1 “огда
		
		хмлѕарсер.Schemas = хмлЌабор—хем;
		
	 онец≈сли;	
	
	¬озврат –езультат;
	
 онец‘ункции	
//*******************************************
‘ункци€ ƒобавитьјтрибут(хмлѕарсер, хмл”зел, »д, «начение) Ёкспорт
	
	хмлјтрибут = хмлѕарсер.createAttribute(»д);
	хмлјтрибут.value = «начение;
	хмл”зел.setAttributeNode(хмлјтрибут);
	
	¬озврат 1;
	
 онец‘ункции
//*******************************************
‘ункци€ ѕолучитьјтрибут(хмл”зел, »д) Ёкспорт
	
	¬озврат хмл”зел.getAttribute(»д);
	
 онец‘ункции
//*******************************************
‘ункци€ —оздатьЁлементƒокумента(хмлѕарсер, хмлЌабор—хем, хмл орень, 
	»м€ орневого”зла="ROOT",  одировка="windows-1251") Ёкспорт
	
	–езультат = —оздатьƒокумент(хмлѕарсер, хмлЌабор—хем);
	
	≈сли –езультат = 1 “огда
		хмлѕарсер.appendChild(хмлѕарсер.createProcessingInstruction("xml", 
			"version='1.0' encoding='" +  одировка + "'"));
		
		хмл орень = хмлѕарсер.appendChild(хмлѕарсер.createElement(»м€ орневого”зла));
		// в дальнейшем: продумать прогрузку контекста пространства имен
		ƒобавитьјтрибут(хмлѕарсер, хмл орень, 
			"xmlns:xs", "http://www.w3.org/2001/XMLSchema");
		ƒобавитьјтрибут(хмлѕарсер, хмл орень, 
			"xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
	 онец≈сли;
	
	¬озврат –езультат;
	
 онец‘ункции	
//*******************************************
‘ункци€ ƒобавить—хему»з‘айла(хмлЌабор—хем, URIѕространства»мен, »м€‘айла) Ёкспорт
	
	¬озврат ?(„исло(хмлЌабор—хем.add(URIѕространства»мен, »м€‘айла))=0,1,0);
	
 онец‘ункции	
//*******************************************
‘ункци€ «агрузить—хемыѕо—писку(хмлЌабор—хем, спЌабор—хем="") Ёкспорт
	ѕерем URIѕространства»мен, »м€‘айла;
	
	≈сли “ип«начени€—тр(спЌабор—хем)="—писок«начений" “огда
		ƒл€ й = 1 ѕо спЌабор—хем.–азмер—писка() ÷икл
			»м€‘айла = спЌабор—хем.ѕолучить«начение(й, URIѕространства»мен);
			≈сли ƒобавить—хему»з‘айла(хмлЌабор—хем, 
				URIѕространства»мен, »м€‘айла) = 0 “огда
					¬озврат 0;
			 онец≈сли;		
		 онец÷икла;
	 онец≈сли;	
	
	¬озврат 1;
	
 онец‘ункции	
//*******************************************
‘ункци€ ѕрочитатьƒокумент»з—троки(хмлѕарсер, хмлЌабор—хем, спЌабор—хем="", —тр="") Ёкспорт
	
	ѕопытка
		–езультат = —оздатьƒокумент(хмлѕарсер, хмлЌабор—хем)
			* «агрузить—хемыѕо—писку(хмлЌабор—хем, спЌабор—хем);
	»сключение
		¬озврат 0;
	 онецѕопытки;
	
	≈сли –езультат = 0 “огда
		¬озврат –езультат;
	 онец≈сли;	

	хмлѕарсер.async = 0;
	хмлѕарсер.SetProperty("MultipleErrorMessages", 1);
    хмлѕарсер.loadXML(—тр);
	
	ќшибки = хмлѕарсер.ParseError;
	≈сли ќшибки.ErrorCode <> 0 “огда
		–езультат = 0;
		ƒл€ й = 0 ѕо ќшибки.AllErrors.length - 1 ÷икл
			ќшибка = ќшибки.AllErrors(й);
			—ообщить("ќшибка: " + Ћев(ќшибка.Reason 
				+ " " + ќшибка.SrcText, 350));
		 онец÷икла;
	 онец≈сли;

	¬озврат –езультат;
	
 онец‘ункции	
//*******************************************
‘ункци€ ѕрочитатьƒокумент»з‘айла(хмлѕарсер, хмлЌабор—хем, спЌабор—хем="", »м€‘айла="") Ёкспорт
	
	ѕопытка
		–езультат = —оздатьƒокумент(хмлѕарсер, хмлЌабор—хем)
			* «агрузить—хемыѕо—писку(хмлЌабор—хем, спЌабор—хем);
	»сключение
		¬озврат 0;
	 онецѕопытки;
	
	≈сли –езультат = 0 “огда
		¬озврат –езультат;
	 онец≈сли;	

	хмлѕарсер.async = 0;
	хмлѕарсер.SetProperty("MultipleErrorMessages", 1);
    хмлѕарсер.load(»м€‘айла);
	
	ќшибки = хмлѕарсер.ParseError;
	≈сли ќшибки.ErrorCode <> 0 “огда
		–езультат = 0;
		ƒл€ й = 0 ѕо ќшибки.AllErrors.length - 1 ÷икл
			ќшибка = ќшибки.AllErrors(й);
			—ообщить("ќшибка: " + ќшибка.Reason 
				+ " " + ќшибка.SrcText);
		 онец÷икла;
	 онец≈сли;
	
	¬озврат –езультат;

 онец‘ункции	
//*******************************************
‘ункци€ ¬ывестиƒокумент¬—троку(хмлѕарсер) Ёкспорт
	
	¬озврат хмлѕарсер.xml;
	
 онец‘ункции	
//*******************************************
‘ункци€ ¬ывестиƒокумент¬‘айл(хмлѕарсер, »м€‘айла) Ёкспорт
	
	ѕопытка
		хмлѕарсер.save(»м€‘айла);
		
	»сключение
		—ообщить("ќшибка: " + ќписаниеќшибки(), "!");
		¬озврат 0;
		
	 онецѕопытки;
	
	¬озврат 1;
	
 онец‘ункции
//*******************************************
‘ункци€ ѕолучить—хему(хмлЌабор—хем, URIѕространства»мен)
	
	¬озврат хмлЌабор—хем.getSchema(URIѕространства»мен);
	
 онец‘ункции
//*******************************************
‘ункци€ ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, URIѕространства»мен, »м€“ипа) Ёкспорт
	
	¬озврат ѕолучить—хему(хмлЌабор—хем, URIѕространства»мен)
		.types.itemByName(»м€“ипа);
	
 онец‘ункции	
//*******************************************
ѕроцедура ѕостроить–еквизиты”злаѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмл”зел, хмлћодель онтента) Ёкспорт
	
	ƒл€ Ќ = 1 ѕо хмлћодель онтента.particles.length ÷икл
		
		хмлЁлемент онтента = хмлћодель онтента.particles(Ќ-1);

		≈сли  онстантыMSXML.ѕолучить(хмлЁлемент онтента.itemType)
			= "SOMITEM_ANY" “огда
				
		»наче≈сли  онстантыMSXML.ѕолучить(хмлЁлемент онтента.itemType) 
			= "SOMITEM_ELEMENT" “огда
				
				хмлќписание–еквизита = хмлЁлемент онтента;
                
				≈сли (хмлќписание–еквизита.type.name <> "NCName") “огда
						
					ƒл€   = 1 ѕо „исло(хмлќписание–еквизита.minOccurs) ÷икл
						хмл–еквизит = ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, 
							хмлќписание–еквизита.type, хмлќписание–еквизита.name);

						хмл”зел.appendChild(хмл–еквизит);
					 онец÷икла;
					
				 онец≈сли;
		»наче  
			
			ѕостроить–еквизиты”злаѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, хмл”зел, хмлЁлемент онтента);
			
		 онец≈сли;
		
	 онец÷икла;		

 онецѕроцедуры	
//*******************************************
‘ункци€ ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, хмлЌабор—хем, “ип, Ћокальное»м€) Ёкспорт

	јлиас = ѕространства»мен.ѕолучить(“ип.namespaceURI);

	»м€”зла = ?(ѕустое«начение(јлиас) = 0, јлиас + ":", "") + Ћокальное»м€;

	хмл”зел = хмлѕарсер.createElement(»м€”зла);

	≈сли —окрЋѕ(“ип.name) = "" “огда
		≈сли  онстантыMSXML.ѕолучить(“ип.itemType) 
			= "SOMITEM_COMPLEXTYPE" “огда

				хмлќписание“ипа = “ип;

		»наче
			¬озврат хмл”зел;
		 онец≈сли;
	»наче	
		ѕопытка

			хмлќписание“ипа = ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, 
				“ип.namespaceURI, “ип.name);

		»сключение
			//ƒобавитьјтрибут(хмлѕарсер, хмл”зел, "xsi:type", 
			//	“ип.namespaceURI + ":" + “ип.name);	
			¬озврат хмл”зел;		
		 онецѕопытки;
	 онец≈сли;
	
	≈сли  онстантыMSXML.ѕолучить(хмлќписание“ипа.itemType) 
		= "SOMITEM_COMPLEXTYPE" “огда
			
			хмлћодель онтента = хмлќписание“ипа.contentModel;
						
			ѕостроить–еквизиты”злаѕоќписанию“ипа(хмлѕарсер,	хмлЌабор—хем, 
				хмл”зел, хмлћодель онтента);
			
	 онец≈сли;
	
	¬озврат хмл”зел;
	
 онец‘ункции	
//*******************************************
‘ункци€ ¬ыполнитьѕреобразование(хмлјргумент, хмлЌабор—хем, хмл‘ункци€, хмл–езультат) Ёкспорт
	
	–езультат = —оздатьƒокумент(хмл–езультат, хмлЌабор—хем);
	
	≈сли –езультат = 1 “огда
		
		хмл–езультат.async = 0;
		//хмл–езультат.validateOnParse = -1;
		хмл–езультат.SetProperty("MultipleErrorMessages", 1);
		
		ѕопытка
			хмлјргумент.transformNodeToObject(хмл‘ункци€, хмл–езультат);
			ќшибки = хмл–езультат.ParseError;
			≈сли ќшибки.ErrorCode <> 0 “огда
				–езультат = 0;
				ƒл€ й = 0 ѕо ќшибки.AllErrors.length - 1 ÷икл
					ќшибка = ќшибки.AllErrors(й);
					—ообщить("ќшибка: " + Ћев(ќшибка.Reason 
						+ " " + ќшибка.SrcText, 350));
				 онец÷икла;
			 онец≈сли;
		»сключение
			—ообщить("ќшибка: " 
				+ Ћев(ќписаниеќшибки(),350));
			–езультат = 0;
		 онецѕопытки;	
	 онец≈сли;
	
	¬озврат –езультат;
	
 онец‘ункции
//*******************************************
‘ункци€ —ериализовать«начение(«начение, хмлѕарсер, хмл орень, 
	«нач хмлЌабор—хем, хмлЎаблон="", фл–екурсии=0) Ёкспорт
	ѕерем ћетка;
	
	–езультат = 1;
	
	≈сли “ип«начени€—тр(«начение) = "“аблица«начений" “огда
		
		хмл“аблица = хмл орень.appendChild(хмлѕарсер.createElement("“аблица«начений"));
		
		ƒобавитьјтрибут(хмлѕарсер, хмл“аблица, 
			"xmlns:xs", "http://www.w3.org/2001/XMLSchema");
		ƒобавитьјтрибут(хмлѕарсер, хмл“аблица, 
			"xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
		ƒобавитьјтрибут(хмлѕарсер, хмл“аблица, 
			"xmlns:myType", "http://my.org/torg");
		
		ƒл€ Ќом—тр = 1 ѕо «начение. оличество—трок() ÷икл
			
			хмл—трока = хмл“аблица.appendChild(хмлѕарсер.createElement("—трока"));
			
			хмлЌомер—троки = хмл—трока.appendChild(хмлѕарсер.createElement("Ќомер—троки"));
			хмлЌомер—троки.text = Ќом—тр;
			
			ƒл€ Ќом ол = 1 ѕо «начение. оличество олонок() ÷икл
				
				ћетка = «начение.ѕолучитьѕараметры олонки(Ќом ол);
				
				хмл олонка = хмл—трока.appendChild(хмлѕарсер.createElement(ћетка));

				–езультат = –езультат * —ериализовать«начение(«начение
					.ѕолучить«начение(Ќом—тр, Ќом ол), хмлѕарсер, хмл олонка, 
						хмлЌабор—хем, хмлЎаблон, 0);
			 онец÷икла;
			
		 онец÷икла;	
        
		≈сли фл–екурсии = 1 “огда
			–езультат = –езультат * —ериализоватьќбъект–екурсивно(хмл“аблица, 
				хмлѕарсер, хмл орень, "", хмлЎаблон, "", "myType", "", "");
		 онец≈сли;
			
	»наче≈сли “ип«начени€—тр(«начение) = "—писок«начений" “огда

		хмл—писок = хмл орень.appendChild(хмлѕарсер.createElement("—писок«начений"));
		
		ƒобавитьјтрибут(хмлѕарсер, хмл—писок, 
			"xmlns:xs", "http://www.w3.org/2001/XMLSchema");
		ƒобавитьјтрибут(хмлѕарсер, хмл—писок, 
			"xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
		ƒобавитьјтрибут(хмлѕарсер, хмл—писок, 
			"xmlns:myType", "http://my.org/torg");
			
		ƒл€ ѕоз = 1 ѕо «начение.–азмер—писка() ÷икл
			
			“ек«нач = «начение.ѕолучить«начение(ѕоз, ћетка);
			
			хмл”зел = хмл—писок.appendChild(хмлѕарсер.createElement(ћетка));
			
			–езультат = –езультат * —ериализовать«начение(“ек«нач, 
				хмлѕарсер, хмл”зел, хмлЌабор—хем, хмлЎаблон, 0);
	
		 онец÷икла;	

		≈сли фл–екурсии = 1 “огда
			–езультат = –езультат * —ериализоватьќбъект–екурсивно(хмл—писок, 
				хмлѕарсер, хмл орень, "", хмлЎаблон, "", "myType", "", "");
         онец≈сли;

	»наче≈сли “ип«начени€(«начение) < 10 “огда

		≈сли “ип«начени€—тр(«начение) = "ƒата" “огда
			хмл орень.text = ƒата2—трока(«начение);	
		»наче≈сли “ип«начени€—тр(«начение) = "„исло" “огда
			// квалификаторы числа хорошо бы брать из свойств реквизита
			хмл орень.text = ‘ормат(«начение, "„15.3.");
		»наче
			ѕопытка
			хмл орень.text = «начение;
			»сключение
			 онецѕопытки;
		 онец≈сли;
		
    »наче≈сли “ип«начени€(«начение) < 100 “огда
	    
		»д = глмћетаданные.—сылка2»д(«начение);
		хмл орень.text = »д;
		стр“ип–еквизита = глмћетаданные.»д2“ип(»д);
		≈сли стр“ип–еквизита <> "0." “огда
			ƒобавитьјтрибут(хмлѕарсер, хмл орень, 
				"xsi:type", "myType:" + стр“ип–еквизита);
		 онец≈сли;
		ѕопытка	
		ƒобавитьјтрибут(хмлѕарсер, хмл орень, 
			"view", "" + ?(«начение.¬ид() = "Ќоменклатура", 
				глмќбщие‘ункции.ѕолнЌаименование“овара(«начение), «начение));	
		»сключение
		 онецѕопытки;	
			
	 онец≈сли;
	
	¬озврат –езультат;
	
 онец‘ункции
//*******************************************
‘ункци€ —ериализоватьќбъект(ќбъект1—, хмлѕарсер, хмлЌабор—хем, хмл”зел, 
	ќписание“ипа="", с»д="") Ёкспорт

	≈сли “ип«начени€(ќбъект1—) = 11 “огда
		ќбъектћенеджер = —оздатьќбъект("—правочник." 
			+ ќбъект1—.¬ид());

		ќбъектћенеджер.ЌайтиЁлемент(ќбъект1—);
		
		≈сли ќбъектћенеджер.Ѕлокировка() = 1 “огда
		// мне достаточно просто знать, что не заблокирован	
			¬озврат 0;
		 онец≈сли;
		
	»наче≈сли “ип«начени€(ќбъект1—) = 12 “огда
		ќбъектћенеджер = —оздатьќбъект("ƒокумент." 
			+ ќбъект1—.¬ид());

		ќбъектћенеджер.Ќайтиƒокумент(ќбъект1—);
		
		≈сли ќбъектћенеджер.Ѕлокировка() = 1 “огда
			¬озврат 0;
		 онец≈сли;
		
	»наче
		ќбъектћенеджер = "";
		
	 онец≈сли;	
	
	//≈сли ќбъектћенеджер <> "" “огда
	//	≈сли ќбъектћенеджер.Ѕлокировка(1) = 0 “огда
	//	// при безуспешной попытка заблокировать документ,
	//	// откладываем его обработку
	//		—ообщить("ќбъект """ + ќбъект1— 
	//			+ """ заблокирован", "!");
	//			
	//		¬озврат 0;
	//		
	//	 онец≈сли;	
	// онец≈сли;
	
	»д = глмћетаданные.—сылка2»д(ќбъект1—);
	
	≈сли —окрЋѕ(ќписание“ипа) <> "" “огда
		“екст = —тр«аменить(ќписание“ипа, ":", –азделитель—трок);
		хмл”зел = хмлѕарсер.createElement(—трѕолучить—троку(“екст, 2));
	
	»наче
		хмл”зел = хмлѕарсер.createElement(глмћетаданные.»д2“ип(»д));
	
	 онец≈сли;	
	//
	ƒобавитьјтрибут(хмлѕарсер, хмл”зел, 
		"xmlns:xs", "http://www.w3.org/2001/XMLSchema");
	ƒобавитьјтрибут(хмлѕарсер, хмл”зел, 
		"xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
	ƒобавитьјтрибут(хмлѕарсер, хмл”зел, 
		"xmlns:myType", "http://my.org/torg");
	//\\
	хмл—сылки = хмл”зел.appendChild(хмлѕарсер
		.createElement("Ref"));
	хмл—сылки.text = ?(с»д="", »д, с»д);	
	
	≈сли —тр„исло¬хождений(глмћетаданные.»д2“ип(»д), "ѕеречисление.")>0 “огда
		«начение = глмћетаданные.¬ыбрать«начени€(»д, ќбъект1—.»дентификатор());
		—войства = глмћетаданные.¬ыбрать—войства«начени€(«начение, »д);
		//хмл аталога = хмл”зел.appendChild(хмлѕарсер
		//	.createElement("—войства«начени€"));
		хмл аталога = хмл”зел;
		//\\
		—войства.¬ыбрать—троки();
		ѕока —войства.ѕолучить—троку() = 1 ÷икл
			хмл—екции–еквизита = хмл аталога.appendChild(хмлѕарсер
				.createElement(—войства.»м€));
			хмл—екции–еквизита.text = —войства.«начение;
		 онец÷икла;
	»наче≈сли —тр„исло¬хождений(глмћетаданные.»д2“ип(»д), "—правочник.")>0 “огда
		ќбъект1—.»спользоватьƒату(“екуща€ƒата(), 1);
	 онец≈сли;	
	
	–еквизиты = глмћетаданные.¬ыбрать–еквизиты(»д, "", "", "");
	
	√руппы–еквизитов = —оздатьќбъект("“аблица«начений");
	
	–еквизиты.¬ыгрузить(√руппы–еквизитов,,, "»д аталога");
	√руппы–еквизитов.—вернуть("»д аталога","");
	
	√руппы–еквизитов.¬ыбрать—троки();
	ѕока √руппы–еквизитов.ѕолучить—троку() = 1 ÷икл
		≈сли √руппы–еквизитов.»д аталога 
			= "–еквизит“абличной„асти" “огда
				ѕродолжить;
		 онец≈сли;
		–еквизиты√руппы = глм“аблицы«начений.¬ыбратьѕо«начению(–еквизиты, 
			"»д аталога", √руппы–еквизитов.»д аталога);
		
		//хмл аталога = хмл”зел.appendChild(хмлѕарсер
		//		.createElement(√руппы–еквизитов.»д аталога));	
		хмл аталога = хмл”зел;
		//\\
		–еквизиты√руппы.¬ыбрать—троки();
		ѕока –еквизиты√руппы.ѕолучить—троку() = 1 ÷икл
			«начение = ќбъект1—.ѕолучитьјтрибут(–еквизиты√руппы.»д);
			// другого решени€, похоже не сделать: кривизна
			// св€зана с тем, что дата документа - реквизит, 
			// врем€ - метод)))  
			≈сли –еквизиты√руппы.»д = "ƒатаƒок" “огда
				≈сли “ип«начени€(ќбъект1—) = 12 “огда
					«начение = ƒата2—трока(«начение, 
						ќбъект1—.ѕолучить¬рем€()); 
				 онец≈сли;	
			 онец≈сли;
			//\\
			хмл—екции–еквизита = хмл аталога.appendChild(хмлѕарсер
				.createElement(–еквизиты√руппы.»д));
			
			—ериализовать«начение(«начение, хмлѕарсер, 
				хмл—екции–еквизита, хмлЌабор—хем, "");
				
		 онец÷икла;	
	 онец÷икла;	
	
	Ќ—=0; ≈сли √руппы–еквизитов.Ќайти«начение("–еквизит“абличной„асти", 
		Ќ—, "»д аталога") = 1 “огда
			–еквизиты√руппы = глм“аблицы«начений.¬ыбратьѕо«начению(–еквизиты, 
				"»д аталога", "–еквизит“абличной„асти");
		    // тут, возможно, лучше сделать как в 8-ке, копировать 
			// группу –“„-реквизиты со значени€ми каждый раз по числу
			// строк в документе - было бы, кстати, проще с шаблонами...
			//хмл аталога = хмл”зел.appendChild(хмлѕарсер
			//	.createElement("–еквизит“абличной„асти"));
				
		    ќбъект1—.¬ыбрать—троки();
			ѕока ќбъект1—.ѕолучить—троку() = 1 ÷икл
				//хмл—трока = хмл аталога.appendChild(хмлѕарсер
				//	.createElement("row" + ќбъект1—.Ќомер—троки));
				хмл—трока = хмл”зел.appendChild(хмлѕарсер
					.createElement("–еквизит“абличной„асти"));
				
				–еквизиты√руппы.¬ыбрать—троки();
				ѕока –еквизиты√руппы.ѕолучить—троку() = 1 ÷икл
					«начение = ќбъект1—.ѕолучитьјтрибут(–еквизиты√руппы.»д);
			
					хмл—екции–еквизита = хмл—трока.appendChild(хмлѕарсер
						.createElement(–еквизиты√руппы.»д));
						
					—ериализовать«начение(«начение, хмлѕарсер, 
						хмл—екции–еквизита, хмлЌабор—хем, "");

				 онец÷икла;
			 онец÷икла;	
	 онец≈сли;	
	
	//≈сли ќбъектћенеджер <> "" “огда
	//// сн€ть блокировку с объекта
	//	ќбъектћенеджер.Ѕлокировка(0);
	// онец≈сли;

	¬озврат 1;
	
 онец‘ункции
//*******************************************
// ѕоиск записей регистра соответствий идентификаторов 
// в распределенной информационной базе
//	ѕараметры:
//		»д - идентификатор отбора
//		Ќапр - направление, 0: поиск собственного 
//			идентификатора по заданному внешнему
//			1 или другое значение: поиск внешнего 
//			идентификатора по собственному
//
‘ункци€ ¬ыбратьќбъектыѕо—оотв(»д, Ќапр = 0)
	ѕерем √”»д, —уб»д,  од”зла;
	
	—оответстви€ = —оздатьќбъект("“аблица«начений");
// идентификатор объекта	
	—оответстви€.Ќова€ олонка("√”»д");
// запись соответстви€, если найдена
	—оответстви€.Ќова€ олонка("—сылка—оотв");
	
	т»д = —тр«аменить(»д, ":", –азделитель—трок);
	
	 олво«нач = —тр оличество—трок(т»д);
	
	√”»д = —трѕолучить—троку(т»д,  олво«нач);
	
	≈сли  олво«нач > 1 “огда
// идентификатор формата  од”зла:√”»д
		 од”зла = —трѕолучить—троку(т»д, 1);
		≈сли  олво«нач > 2 “огда
// идентификатор формата  од”зла:—уб»д:√”»д
			—уб»д = —трѕолучить—троку(т»д, 2);
		 онец≈сли;
	»наче	
// передан искомый идентификатор объекта		
		—оответстви€.Ќова€—трока();
		—оответстви€.√”»д = √”»д;
        ¬озврат —оответстви€;
	 онец≈сли;	
	
	≈сли  од”зла = "000" “огда
// передан искомый идентификатор объекта,
// в общем формате - нет информации по узлу
		—оответстви€.Ќова€—трока();
		—оответстви€.√”»д = √”»д;
        ¬озврат —оответстви€;
	 онец≈сли;	

    “екст«апроса = 
	"SELECT " + ?(Ќапр = 0, 
		"$—пр—оотв.¬нутренн€€—сылка", 
		"$—пр—оотв.GUID") + " AS √”»д,
	|	—пр—оотв.ID AS [—сылка—оотв $—правочник.—оотвќбъектовƒл€ќбмена]
	|FROM
	|	$—правочник.—оотвќбъектовƒл€ќбмена AS —пр—оотв
	|WHERE 
	|	$—пр—оотв." + ?(Ќапр = 0, 
			"GUID", "¬нутренн€€—сылка") + "= '" + —окрЋѕ(√”»д) + "' " 
	+ ?((—уб»д = "*") »Ћ» (ѕустое«начение(—уб»д) = 1), 
		"", " AND $—пр—оотв.SubGUID = " + —окрЋѕ(—уб»д)) 
	+ 		" AND $—пр—оотв.”зел = '" +  од”зла + "'";
	
	—оответстви€ = глмOLEDBQuery
		.¬ыполнить»нструкцию(“екст«апроса, 
			"", 1, 0, 0, 0);

// в случае, если задан код узла, вернет запись 
// соответстви€ и √”»д объекта, в соответствии с
// заданным направлением поиска "Ќапр"
	¬озврат —оответстви€;
	
 онец‘ункции	
//*******************************************
// ‘ормат »д:  од”зла(—3):»дентификатор(—40) - полный
// или »дентификатор(—40) - сокращенный в пределах своей
// информационной базы
//
‘ункци€ Ќайтиќбъект(«нач »д)
	
	“« = ¬ыбратьќбъектыѕо—оотв(»д, 0);
	≈сли “«. оличество—трок() > 0 “огда
		
		¬нут»д = —окрЋѕ(“«.ѕолучить«начение(1,1));
// возвращаем значение ссылочного типа		
		¬озврат глмћетаданные.»д2—сылка(¬нут»д);
		
	»наче
		¬озврат "";
	 онец≈сли;
	
 онец‘ункции	
//*******************************************
‘ункци€ Ќайти—оответствие(«нач »д)
	
	“« = ¬ыбратьќбъектыѕо—оотв(»д, 1);
	≈сли “«. оличество—трок() > 0 “огда
		
		¬нут»д = —окрЋѕ(“«.ѕолучить«начение(1,1));
// возвращаем значение строкового типа 
//- идентификатор внешней ссылки
		¬озврат ¬нут»д;
		
	»наче
		¬озврат "";
	 онец≈сли;
	
 онец‘ункции	
//*******************************************
‘ункци€ ”станов—оответствие(«нач ¬неш»д, «нач ¬нут»д, √олос=0)
	
	–езультат = 1;
	
	≈сли √олос <> 0 “огда

		—ообщить("”становка соответстви€: """
			+ ¬неш»д + """->""" + ¬нут»д + """");
	 онец≈сли;	
	
	т»д = —тр«аменить(¬неш»д, ":", –азделитель—трок);

	≈сли —тр оличество—трок(т»д) = 1 “огда
		
		≈сли √олос <> 0 “огда
			—ообщить("”становка не выполнена: "
				+ "передан формат внутреннего »д");
		 онец≈сли;
			
	»наче	
	
		 од”зла = —трѕолучить—троку(т»д, 1);
		
		≈сли  од”зла = "000" “огда
			
			≈сли √олос <> 0 “огда
				—ообщить("”становка не выполнена: "
					+ "передан код внутреннего узла");
			 онец≈сли;

		»наче	
			
		    ќбъект = Ќайтиќбъект(¬неш»д);
            
			≈сли ѕустое«начение(ќбъект) = 0 “огда
			
				≈сли √олос <> 0 “огда
					—ообщить("”становка не выполнена: "
						+ "найден объект """ + ќбъект + """");
				 онец≈сли;
			
			»наче
				
				спр—оотв = —оздатьќбъект("—правочник.—оотвќбъектовƒл€ќбмена");
				
				спр—оотв.Ќовый();
				спр—оотв.GUID = —трѕолучить—троку(т»д, 3);
				спр—оотв.SubGUID = —трѕолучить—троку(т»д, 2);
				спр—оотв.”зел =  од”зла;
				спр—оотв.¬нутренн€€—сылка = ¬нут»д;
			    спр—оотв.“ип«нач = глмћетаданные.»д2“ип(¬нут»д);
				
				ѕопытка
					спр—оотв.«аписать();

					≈сли √олос <> 0 “огда
						—ообщить("«аписано соответствие");
					 онец≈сли;

				»сключение
					–езультат = 0;

					≈сли √олос <> 0 “огда
						—ообщить("”становка не выполнена: "
							+ ќписаниеќшибки(), "!");
					 онец≈сли;

				 онецѕопытки;

			 онец≈сли;
		 онец≈сли;	
	 онец≈сли;
	
	¬озврат –езультат;
	
 онец‘ункции	
//*******************************************
‘ункци€ «начениејтрибута( онт, хмлјтрибут)
	
	«начение = хмлјтрибут.text;
	
	“ип = “ип«начени€( онт.ѕолучитьјтрибут(хмлјтрибут.tagName)); 
	
	≈сли (“ип = 10) или (“ип = 11) или (“ип = 12) “огда
		«начение = Ќайтиќбъект(хмлјтрибут.text);
	
	»наче≈сли “ип = 3 “огда
		«начение = ƒата(—ред(хмлјтрибут.text, 9, 2) 
			+ "." + —ред(хмлјтрибут.text, 6, 2)
				+ "." + Ћев(хмлјтрибут.text, 4));
	
	 онец≈сли;
	
	¬озврат «начение;
	
 онец‘ункции	
//*******************************************
‘ункци€ ”становитьјтрибуты онтекста( онт, хмл”зел, “ипќбъекта)
	
	≈сли “ипќбъекта = 11 “огда
		 онт.»спользоватьƒату(“екуща€ƒата());
	»наче	
		≈сли ћетаданные.ƒокумент( онт.¬ид())
			.–еквизит“абличной„асти() <> 0 “огда 
				 онт.”далить—троки();
		 онец≈сли;		
	 онец≈сли;	
	
	ƒл€ ном√руппы = 1 ѕо хмл”зел.childNodes.length - 1 ÷икл
		
		хмл√руппа–еквизитов = хмл”зел.childNodes(ном√руппы);
		≈сли хмл√руппа–еквизитов.tagName <> "–еквизит“абличной„асти" “огда
			хмлјтрибут = хмл√руппа–еквизитов;
			≈сли хмлјтрибут.tagName = "Ref" “огда
				ѕродолжить;
			 онец≈сли;	

			«начение = «начениејтрибута( онт, хмлјтрибут);
			
			// запись владельца элемента:
			≈сли (хмлјтрибут.tagName = "¬ладелец") 
				и (“ипќбъекта = 11) “огда
					ѕопытка
						 онт.»спользовать¬ладельца(«начение);
					»сключение
						≈сли “ип«начени€—тр( онт) 
							<> "√рупповой онтекст" “огда
								¬озврат 0;
						 онец≈сли;
					 онецѕопытки;	
			»наче
			//	
			    ѕопытка
					 онт.”становитьјтрибут(хмлјтрибут.tagName, «начение);
				»сключение
					≈сли “ип«начени€—тр( онт) 
						<> "√рупповой онтекст" “огда
							¬озврат 0;
					 онец≈сли;
				 онецѕопытки;	
			 онец≈сли;	
			//\\
		»наче	

			 онт.Ќова€—трока();
			ƒл€ ном–екв = 0 ѕо хмл√руппа–еквизитов.childNodes.length - 1 ÷икл
				
				хмлјтрибут = хмл√руппа–еквизитов.childNodes(ном–екв);
				
				«начение = «начениејтрибута( онт, хмлјтрибут);
			
				ѕопытка
					 онт.”становитьјтрибут(хмлјтрибут.tagName, «начение);
				»сключение
					≈сли “ип«начени€—тр( онт) 
						<> "√рупповой онтекст" “огда
							¬озврат 0;
					 онец≈сли;
				 онецѕопытки;	
			 онец÷икла;	
		 онец≈сли;	
	 онец÷икла;	
	
	¬озврат 1;
	
 онец‘ункции	
//*******************************************
‘ункци€ ѕрочитатьќбъект(ћенеджерќбъекта1—, хмлѕарсер, хмлЌабор—хем, хмл”зел, «аписать = 1) Ёкспорт
	
	ћенеджерќбъекта1— = —оздатьќбъект(хмл”зел.tagName); 
	// как-то нужно нивелировать этот патч, т.к. он содержит параметры
	ѕопытка
		// из внешней программы
		хмлѕарсер.setProperty("SelectionLanguage", "XPath");
		хмлѕарсер.setProperty("SelectionNamespaces", "xmlns:myType='http://my.org/torg'");
	    хмл—сылка = хмл”зел.selectNodes("myType:Ref").item(0);
	»сключение
		// ... внутренний
		хмл—сылка = хмл”зел.getElementsByTagName("Ref").item(0);
	 онецѕопытки;	
	//\\
	—сылка = Ќайтиќбъект(хмл—сылка.text);
	
	≈сли ѕустое«начение(—сылка) = 1 “огда
		ћенеджерќбъекта1—.Ќовый();
	»наче
		≈сли “ип«начени€(—сылка) = 11 “огда
			ћенеджерќбъекта1—.ЌайтиЁлемент(—сылка);
		»наче
			ћенеджерќбъекта1—.Ќайтиƒокумент(—сылка);
			ћенеджерќбъекта1—.—делатьЌеѕроведенным();
		 онец≈сли;	
	 онец≈сли;
	
	≈сли ”становитьјтрибуты онтекста(ћенеджерќбъекта1—, 
		хмл”зел, “ип«начени€(—сылка)) = 0 “огда
			¬озврат 0;
	 онец≈сли;	
	
	≈сли «аписать = 1 “огда
		ѕопытка
			ћенеджерќбъекта1—.«аписать();
			”станов—оответствие(хмл—сылка.text, 
				глмћетаданные.ќбъект2»д(ћенеджерќбъекта1—));
		»сключение
			—ообщить(ќписаниеќшибки());
			¬озврат 0;
		 онецѕопытки;	
	 онец≈сли;
	
	¬озврат 1;
	
 онец‘ункции
//*******************************************
‘ункци€ ѕрочитать«начение(«начение, «нач хмлѕарсер, «нач хмлЌабор—хем, «нач хмл”зел, «аписать = 1) Ёкспорт
// совсем по-хорошему, здесь нужно было 
// ориентироватьс€ на схему данных и 
// описание типов объектов в файле, но это 
// "ломало" бы всю "тему" с шаблонами 
// преобразований, по крайней мере, на первый
// взгл€д, шаблоны бы выгл€дели сложнее...
	≈сли хмл”зел.childNodes.length = 0 “огда
		
		¬озврат 0;
		
	»наче≈сли хмл”зел.tagName = "“аблица«начений" “огда
		
		«начение = —оздатьќбъект(хмл”зел.tagName);

		хмл—троки = хмл”зел.childNodes;
		ƒл€ ном—тр = 1 ѕо хмл—троки.length ÷икл

			хмл—трока = хмл—троки.item(ном—тр - 1);
			
			«начение.Ќова€—трока();
			
			хмл олонки = хмл—трока.childNodes;
			ƒл€ ном ол = 1 ѕо хмл олонки.length ÷икл
				
				хмл олонка = хмл олонки.item(ном ол - 1);
				
				≈сли ном—тр = 1 “огда
					«начение.Ќова€ олонка(хмл олонка.tagName);
				 онец≈сли;	
				
				«начячейки = "";
				≈сли ѕрочитать«начение(«начячейки, хмлѕарсер, 
					хмлЌабор—хем, хмл олонка, «аписать) = 1 “огда
// если таблица значений должна содержать
// вложенную таблицу, тогда эту таблицу
// нужно размещать первой колонкой - не
// знаю, почему по-другому работать не 
// будет, наверное, это особенность 
// реализации MSXML 6-й версии
						«начение.”становить«начение(ном—тр, 
							ном ол, «начячейки);
				 онец≈сли;			
			 онец÷икла;
		 онец÷икла;	
		
	»наче≈сли хмл”зел.tagName = "—писок«начений" “огда
		
		«начение = —оздатьќбъект(хмл”зел.tagName);
		
		хмл—троки = хмл”зел.childNodes;
		ƒл€ ном—тр = 1 ѕо хмл—троки.length ÷икл
			
			хмл«нач—писка = хмл—троки.item(ном—тр - 1);
			
			«нач—писка = "";
			
			≈сли ѕрочитать«начение(«нач—писка, хмлѕарсер, 
				хмлЌабор—хем, хмл«нач—писка, «аписать) = 1 “огда
					
					«начение.”становить(хмл«нач—писка.tagName, 
						«нач—писка);
						
			 онец≈сли;			
		 онец÷икла;	
		
	»наче≈сли —трока(хмл”зел.childNodes.item(0)) 
		= "OLE.IXMLDOMElement" “огда
// чтение сложного типа, переданного по
// структуре данных реквизитов
		≈сли (хмл”зел.childNodes.item(0).tagName 
			= "“аблица«начений") 
			»Ћ» (хмл”зел.childNodes.item(0).tagName 
				= "—писок«начений") “огда

				¬озврат ѕрочитать«начение(«начение, хмлѕарсер, 
					хмлЌабор—хем, хмл”зел.childNodes
						.item(0), «аписать);

		»наче
			
			¬озврат ѕрочитатьќбъект(«начение, хмлѕарсер, 
				хмлЌабор—хем, хмл”зел.childNodes
					.item(0), «аписать);

		 онец≈сли;
	»наче	
// чтение простых типов, в том числе, ссылок 
// любого типа
		«начение = хмл”зел.text;
		
		≈сли Ћев(«начение, 1) = """" “огда
			
			«начение = —тр«аменить(«начение, """", "");
			
		»наче≈сли Ћев(«начение, 1) = "{" “огда
			
			«начение = «начение»з—троки¬нутр(«начение);
			
		»наче
			
			ѕопытка

				«начение = „исло(«начение);
			
			»сключение

				¬озврат 0;
				
			 онецѕопытки;
			
		 онец≈сли;
	 онец≈сли;
    
	¬озврат 1;
	
 онец‘ункции
//*******************************************
‘ункци€ —ериализоватьќбъект–екурсивно(ќбъект, хмлѕарсер, хмл орень, «нач хмлЌабор—хем,
	хмлЎаблон="", спќбъектов="", URIѕрефикс="myType", ќписание“ипа="", »д="") Ёкспорт
	ѕерем хмл”зел, хмлROOT, хмл–езультат; 
	
	≈сли спќбъектов = "" “огда
		спќбъектов = —оздатьќбъект("—писок«начений");
	 онец≈сли;	
	
	≈сли “ип«начени€—тр(ќбъект) = "OLE.IXMLDOMElement" “огда
		–езультат = 1;
		хмл”зел = ќбъект;
	»наче
		–езультат = —ериализоватьќбъект(ќбъект, 
			хмлѕарсер, хмлЌабор—хем, хмл”зел, ќписание“ипа, »д);
		≈сли –езультат = 0 “огда
			¬озврат –езультат;
		 онец≈сли;	
	 онец≈сли;		
	
	≈сли хмлЎаблон <> "" “огда
		–езультат = —оздатьЁлементƒокумента(хмл–езультат, 
			хмлЌабор—хем, хмлROOT);
		хмлROOT.appendChild(хмл”зел);
		–езультат = ¬ыполнитьѕреобразование(хмл–езультат, 
			хмлЌабор—хем, хмлЎаблон, хмл”зел);
		// ошибки здесь не будет, ее нужно искать в шаблоне...	
		≈сли хмл”зел.childNodes.length > 1 “огда	
			хмл”зел = хмл”зел.childNodes(1);	
		»наче
			¬озврат 1;
		 онец≈сли;	
	 онец≈сли;	
		
	≈сли –езультат = 1 “огда
		стр’—Ћ = "<?xml version=""1.0"" encoding=""WINDOWS-1251""?>
		|<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" 
		|xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:myType=""http://my.org/buh"">
		|<xsl:template match=""/"">
		|<ROOT>
		|	<xsl:for-each select="".//* "">
		|		<xsl:variable name=""node"" select=""name()""/>
		|		<xsl:variable name=""value"" select="".""/>
		|		<xsl:for-each select=""@*[contains(name(),'xsi:type')]"">
		|			<xsl:element name=""{$node}"">
		|				<xsl:attribute name=""{name()}"">
		|					<xsl:value-of select="".""/>
		|				</xsl:attribute>
		|				<xsl:value-of select=""$value""/>
		|			</xsl:element>
		|		</xsl:for-each>
		|	</xsl:for-each>
		|</ROOT>
		|</xsl:template>
		|</xsl:stylesheet>
		|";
		хмл’—Ћ = ""; 
		хмл”зел–азвернут = "";
		–езультат = ѕрочитатьƒокумент»з—троки(хмл–езультат, хмлЌабор—хем, , 
			хмл”зел.xml) * ѕрочитатьƒокумент»з—троки(хмл’—Ћ, хмлЌабор—хем, , 
				стр’—Ћ) * ¬ыполнитьѕреобразование(хмл–езультат,	хмлЌабор—хем, 
					хмл’—Ћ, хмл”зел–азвернут);

		хмл”зел–азвернут = хмл”зел–азвернут.childNodes(1);
		≈сли –езультат = 1 “огда
			ƒл€ номјтр = 0 ѕо хмл”зел–азвернут.childNodes.length - 1 ÷икл
				хмлјтрибут = хмл”зел–азвернут.childNodes(номјтр);
		
				ќписание“ипа = "";
				ѕопытка
					“ип = хмлјтрибут.attributes.getNamedItem("xsi:type");
					ќписание“ипа = “ип.text;
				»сключение
				 онецѕопытки;
				≈сли —тр„исло¬хождений(ќписание“ипа, URIѕрефикс)>0 “огда
					«начение = «начение»з—троки¬нутр(хмлјтрибут.text);
					≈сли ѕустое«начение(«начение) = 0 “огда
						//≈сли —тр„исло¬хождений(ќписание“ипа, "F")>0 “огда
						//	–езультат = —ериализоватьќбъект–екурсивно(«начение, хмлѕарсер, 
						//		хмл орень, хмлЌабор—хем, хмлЎаблон, спќбъектов, , 
						//			ќписание“ипа, хмлјтрибут.text);
						//»наче	
						//	≈сли спќбъектов.Ќайти«начение(«начение) = 0 “огда 
							≈сли спќбъектов.Ќайти«начение(хмлјтрибут.text) = 0 “огда
						//		спќбъектов.ƒобавить«начение(«начение); 
								спќбъектов.ƒобавить«начение(хмлјтрибут.text);
								–езультат = —ериализоватьќбъект–екурсивно(«начение, хмлѕарсер, 
									хмл орень, хмлЌабор—хем, хмлЎаблон, спќбъектов, , 
										ќписание“ипа, хмлјтрибут.text);
						//	 онец≈сли;		
						 онец≈сли;		
					 онец≈сли;		
				 онец≈сли;
			 онец÷икла;
		»наче
			—ообщить("ќшибка!");
		 онец≈сли;
		
		// пустой узел объекта - 
		// 	результат работы "фильтра"
		≈сли хмл”зел.childNodes.length > 0 “огда
			хмл орень.appendChild(хмл”зел);
		 онец≈сли;	
		//\\
		
	»наче
		—ообщить("ќшибка при сериализации: " + ќбъект);
	 онец≈сли;	
	
	¬озврат –езультат;
	
 онец‘ункции
//*******************************************
‘ункци€ “аб2—труктура(“«)
	ѕерем хмлѕарсер, хмл орень;
	
	—оздатьЁлементƒокумента(хмлѕарсер, 
		"", хмл орень, "ROOT", "windows-1251");
	
    “«.¬ыбрать—троки();
	ѕока “«.ѕолучить—троку() = 1 ÷икл
	    
		»м€ = “«.»м€;
		ƒл€ ѕ = 1 ѕо —имв»сключени€.–азмер—писка() ÷икл
			»м€ = —тр«аменить(»м€, 
				—имв»сключени€.ѕолучить«начение(ѕ), "");
		 онец÷икла;
			
		хмл”зел = хмл орень.appendChild(хмлѕарсер
			.createElement(»м€));
			
		хмл”зел.text = “«.«начение;	
		
	 онец÷икла;
	
	¬озврат хмлѕарсер;
		
 онец‘ункции
//*******************************************
‘ункци€ “аб2»ерархи€(“«, хмлѕарсер = "", тз–еквизит = "", ¬ыбƒата = "") Ёкспорт
	ѕерем хмл орень;
	
	≈сли тз–еквизит <> "" “огда
		хмл–еквизит = “аб2—труктура(тз–еквизит);
		
		“ипќбъекта = —тр«аменить(хмл–еквизит
			.SelectSingleNode("ROOT/ѕолный»дентификатор")
				.text, "." + хмл–еквизит.SelectSingleNode(
					"ROOT/»дентификатор").text, "");

		ќбъект = —оздатьќбъект(“ипќбъекта);
		ќбъект.»спользоватьƒату(?(¬ыбƒата = "", 
			“екуща€ƒата(), ¬ыбƒата));
	 онец≈сли;	
	
	≈сли хмлѕарсер = "" “огда
		—оздатьЁлементƒокумента(хмлѕарсер, 
			"", хмл орень, "ROOT", "windows-1251");
		
		хмл”зел = хмл орень.appendChild(хмлѕарсер
			.createElement("_____0___"));
			
		≈сли тз–еквизит <> "" “огда	
			ƒобавитьјтрибут(хмлѕарсер, хмл”зел, "Value", 
				ѕолучитьѕустое«начение(хмл–еквизит
					.SelectSingleNode("ROOT/“ип").text));
		 онец≈сли;
	 онец≈сли;
	
	Ќ = 1;
	ѕока Ќ <= “«. оличество—трок() ÷икл
		“«.ѕолучить—трокуѕоЌомеру(Ќ);

		¬ыборка = хмлѕарсер.SelectNodes("//" 
			+ —тр«аменить(“«.Parent, " ", "_"));
			
		≈сли ¬ыборка.length <> 0 “огда
			хмл”зел = ¬ыборка.item(0).appendChild(хмлѕарсер
				.createElement(—тр«аменить(“«.Node, 
					" ", "_")));
			
			≈сли тз–еквизит <> "" “огда
				ќбъект.ЌайтиЁлемент(глмћетаданные
					.»д2—сылка(глмћетаданные
						. од»Ѕ2»д(“ипќбъекта, “«.Node)));
						
				«начение = ќбъект.ѕолучитьјтрибут(хмл–еквизит
					.SelectSingleNode("ROOT/»дентификатор").text);
					
				≈сли ѕустое«начение(«начение) = 1 “огда
					«начение = ¬ыборка.item(0).attributes
						.getNamedItem("Value").text;
				 онец≈сли;
					
				ƒобавитьјтрибут(хмлѕарсер, хмл”зел, 
					"Value", «начение);
			 онец≈сли;
			
			“«.”далить—троку(Ќ);
		»наче
			Ќ = Ќ + 1;
		 онец≈сли;
		
	 онец÷икла;	
	
	¬озврат ?(“«. оличество—трок() = 0, хмлѕарсер,
		“аб2»ерархи€(“«, хмлѕарсер, тз–еквизит, ¬ыбƒата));
	
 онец‘ункции
//*******************************************
‘ункци€ »ерархи€2“аб(хмлѕарсер, ”зел, тз–еквизит = "")
	
	“« = —оздатьќбъект("“аблица«начений");
	“«.Ќова€ олонка("Node", "—трока", 9, 0);
	
	≈сли тз–еквизит <> "" “огда
		
		хмл–еквизит = “аб2—труктура(тз–еквизит);
		“«.Ќова€ олонка("Value", хмл–еквизит
			.SelectSingleNode("ROOT/“ип").text, хмл–еквизит
				.SelectSingleNode("ROOT/ƒлина").text, хмл–еквизит
					.SelectSingleNode("ROOT/“очность").text);
		
	 онец≈сли;	
	
	// сам узел ...
	¬ыборка = хмлѕарсер.SelectNodes("//" 
		+ —тр«аменить(”зел, " ", "_"));
	
	“«.Ќова€—трока();
	“«.Node = —тр«аменить(¬ыборка.item(0)
		.tagName, "_", " ");
	≈сли тз–еквизит <> "" “огда	
		“«.Value = ¬ыборка.item(0).attributes
			.getNamedItem("Value").text;
	 онец≈сли;	
		
	// ... и его потомки	
	¬ыборка = хмлѕарсер.SelectNodes("//" 
		+ —тр«аменить(”зел, " ", "_") + "//*");
	
	ƒл€ Ќ = 1 ѕо ¬ыборка.length() ÷икл
		“«.Ќова€—трока();
		“«.Node = —тр«аменить(¬ыборка.item(Ќ-1)
			.tagName, "_", " ");
		≈сли тз–еквизит <> "" “огда	
			“«.Value = ¬ыборка.item(Ќ-1).attributes
				.getNamedItem("Value").text;	
		 онец≈сли;	
	 онец÷икла;	
	
	¬озврат “«;
	
 онец‘ункции	
//*******************************************
‘ункци€ ¬ыполнить“екстовый«апрос(хмлѕарсер, “екст«апроса)
	ѕерем хмл‘ункци€, хмл–езультат;
		
	ѕрочитатьƒокумент»з—троки(хмл‘ункци€, "", "", “екст«апроса);
	
	јтрибуты = хмлѕарсер.documentElement.attributes;
    
	ƒл€ Ќ = 1 ѕо јтрибуты.length() ÷икл
		≈сли —тр„исло¬хождений(јтрибуты.item(Ќ-1).name, "xmlns:") > 0 “огда
			ƒобавитьјтрибут(хмл‘ункци€, хмл‘ункци€.documentElement, 
				јтрибуты.item(Ќ-1).name, јтрибуты.item(Ќ-1).value);
		 онец≈сли;		
	 онец÷икла;	
	
	¬ыполнитьѕреобразование(хмлѕарсер, "", хмл‘ункци€, хмл–езультат);
	
	¬озврат хмл–езультат;
	
 онец‘ункции	
//*******************************************
‘ункци€ ѕрочитатьƒирективы»мпорта—ервиса(хмлќписание—ервиса)
	
	¬озврат ¬ыполнить“екстовый«апрос(хмлќписание—ервиса, 
		"<?xml version=""1.0"" encoding=""WINDOWS-1251""?>
		|<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"">
		|<xsl:template match=""/"">
		|<ROOT>
		|	<xsl:for-each select="".//* "">
		|		<xsl:for-each select=""*[contains(name(),'import')]"">
		|			<xsl:element name=""{@schemaLocation}"">
		|				<xsl:value-of select=""@namespace""/> 
		|			</xsl:element>
		|		</xsl:for-each>
		|	</xsl:for-each>
		|</ROOT>
		|</xsl:template>
		|</xsl:stylesheet>
		|");
	
 онец‘ункции	
//*******************************************
‘ункци€ ѕрочитать—ообщени€—ервиса(хмлќписание—ервиса)
	
	¬озврат ¬ыполнить“екстовый«апрос(хмлќписание—ервиса, 
		"<?xml version=""1.0"" encoding=""WINDOWS-1251""?>
		|<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"">
		|<xsl:template match=""/"">
		|<ROOT>
		|	<xsl:for-each select="".//* "">
		|		<xsl:for-each select=""*[contains(name(),':message')]"">
		|			<xsl:element name=""{@name}"">
		|				<xsl:for-each select=""*[contains(name(),':part')]"">
		|                       <xsl:element name=""{@element}"">
		|							<xsl:value-of select=""@name""/> 
		|						</xsl:element>
		|				</xsl:for-each>
		|			</xsl:element>
		|		</xsl:for-each>
		|	</xsl:for-each>
		|</ROOT>
		|</xsl:template>
		|</xsl:stylesheet> 
		|");
	
 онец‘ункции	
//*******************************************
‘ункци€ ѕрочитатьјдрес—ервиса(хмлќписание—ервиса)
	
	¬озврат ¬ыполнить“екстовый«апрос(хмлќписание—ервиса, 
		"<?xml version=""1.0"" encoding=""WINDOWS-1251""?>
		|<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"">
		|<xsl:template match=""/"">
		|<ROOT>
		|	<xsl:for-each select="".//* "">
		|		<xsl:for-each select=""*[contains(name(),':address')]"">
		|			<xsl:element name=""address"">
		|				<xsl:value-of select=""@location""/>
		|			</xsl:element>
		|		</xsl:for-each>  
		|	</xsl:for-each> 
		|</ROOT>
		|</xsl:template>
		|</xsl:stylesheet>
		|");
	
 онец‘ункции	
//*******************************************
‘ункци€ Ќайтиќписание—ообщени€—ервиса( аталогѕроекта, —ообщение)
	ѕерем хмлќписание—ервиса, хмл‘ункци€, хмл–езультат;
	
	сзќписание—ообщени€ = —оздатьќбъект("—писок«начений");
	
	‘—.”ст“ек аталог( аталогѕроекта);
	¬еб—ервис = ‘—.Ќайтиѕервый‘айл("*.wsdl");
	
	ѕока ѕустое«начение(¬еб—ервис) = 0 ÷икл
		
    	ѕрочитатьƒокумент»з‘айла(хмлќписание—ервиса, "", "",  аталогѕроекта + ¬еб—ервис);

		хмл—ообщени€ = ѕрочитать—ообщени€—ервиса(хмлќписание—ервиса); 
	
		¬ыборка = хмл—ообщени€.SelectNodes("//" + —ообщение);

		≈сли ¬ыборка.length() > 0 “огда

			хмл”зел—ообщени€ = ¬ыборка.item(0);
	        
			хмлќписание—ообщени€ = хмл”зел—ообщени€.childNodes(0);
			
			сзќписание—ообщени€.ƒобавить«начение(хмлќписание—ообщени€.tagName, 		"»м€");
			сзќписание—ообщени€.ƒобавить«начение(хмлќписание—ообщени€.prefix, 		"ѕрефикс");
			сзќписание—ообщени€.ƒобавить«начение(хмлќписание—ообщени€.namespaceURI, "ѕространство»мен");                  
			
			хмлјдрес = ѕрочитатьјдрес—ервиса(хмлќписание—ервиса);
			сзќписание—ообщени€.ƒобавить«начение(хмлјдрес.documentElement.text, 	"јдрес");
			
			хмлƒирективы = ѕрочитатьƒирективы»мпорта—ервиса(хмлќписание—ервиса); 
	
			стр’—Ћ = "<?xml version=""1.0"" encoding=""WINDOWS-1251""?>
				|<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"">
				|<xsl:template match=""child::node()"">
				|	<xsl:variable name=""node"" select=""*[contains(.,'" + хмлќписание—ообщени€.namespaceURI + "')]""/>
				|			<xsl:element name=""fileName"">
				|				<xsl:value-of select=""name($node)""/>
				|			</xsl:element>
				|</xsl:template>
				|</xsl:stylesheet>
				|"; 
		
			ѕрочитатьƒокумент»з—троки(хмл‘ункци€, "", , стр’—Ћ);
			¬ыполнитьѕреобразование(хмлƒирективы, "", хмл‘ункци€, хмл–езультат);
			
			сзќписание—ообщени€.ƒобавить«начение(хмл–езультат.documentElement.text, "»м€‘айла");
			
			ѕрервать;
			
		 онец≈сли;	
		
		¬еб—ервис = ‘—.Ќайти—ледующий‘айл();
		
	 онец÷икла;	
    
	¬озврат сзќписание—ообщени€;
	
 онец‘ункции
//*******************************************
‘ункци€ Ќайтијлиасѕространства»мен(хмлѕарсер, ѕространство»мен)
	
	ƒл€ Ќ=1 ѕо хмлѕарсер.documentElement.attributes.length ÷икл
		
		≈сли хмлѕарсер.documentElement.attributes(Ќ-1).value = ѕространство»мен “огда
		
			¬озврат —тр«аменить(хмлѕарсер.documentElement.attributes(Ќ-1).name, "xmlns:", ""); 
			
		 онец≈сли;	
		
	 онец÷икла;
	
 онец‘ункции	
//*******************************************
ѕроцедура ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, ѕространство»мен,  аталог, »м€‘айла) Ёкспорт
	ѕерем хмлѕарсер;
	
	ƒобавить—хему»з‘айла(хмлЌабор—хем, ѕространство»мен,  аталог + »м€‘айла);
	
	ѕрочитатьƒокумент»з‘айла(хмлѕарсер, "", "",  аталог + »м€‘айла);
    
	хмлƒирективы = ѕрочитатьƒирективы»мпорта—ервиса(хмлѕарсер);
	
	ƒл€ Ќ = 1 ѕо хмлƒирективы.documentElement.childNodes.length ÷икл
		
		хлмƒиректива = хмлƒирективы.documentElement.childNodes(Ќ-1);

		// метод "установить" не срабатывает
		≈сли ѕустое«начение(ѕространства»мен.ѕолучить(хлмƒиректива.text)) = 1 “огда

			ѕространства»мен.ƒобавить«начение(Ќайтијлиасѕространства»мен(хмлѕарсер,
				хлмƒиректива.text), хлмƒиректива.text);
			
			ƒобавить—хему»з‘айла–екурсивно(хмлЌабор—хем, 
				хлмƒиректива.text,  аталог, хлмƒиректива.tagName);
				
		 онец≈сли;	
	 онец÷икла;	
	
 онецѕроцедуры
//*******************************************
‘ункци€ –ассчитатьѕуть(сз—тек“егов)
	
	ѕуть = "";
	
	ƒл€ ѕ = 1 ѕо сз—тек“егов.–азмер—писка() ÷икл
		
		ѕуть = ѕуть + "\" + сз—тек“егов.ѕолучить«начение(ѕ);
		
	 онец÷икла;	
	
	¬озврат ѕуть;
	
 онец‘ункции
//*******************************************
‘ункци€ ‘ильтрѕути(сз—тек“егов, сзѕути)
	
	стрѕуть = –ассчитатьѕуть(сз—тек“егов);
	
	ƒл€ ѕ = 1 ѕо сзѕути.–азмер—писка() ÷икл
		
		“ек‘ильтр = сзѕути.ѕолучить«начение(ѕ);
		
		≈сли “ек‘ильтр = Ћев(стрѕуть, 
			—трƒлина(“ек‘ильтр)) “огда
				
				¬озврат 1;
		 онец≈сли;	
		
	 онец÷икла;	
	
	¬озврат 0;
	
 онец‘ункции
//*******************************************
‘ункци€ ¬ырезатьЁлементы(ƒанные, сзѕути, сз—тек“егов = "", »м€ = "", “егќткрыт = 0, –ез = "") Ёкспорт
	
	≈сли сз—тек“егов = "" “огда
    // полный путь элемента
		сз—тек“егов = —оздатьќбъект("—писок«начений");
	 онец≈сли;	
	
	≈сли “ип«начени€—тр(ƒанные) = "“екст" “огда
		
		 олво—трок = ƒанные. оличество—трок();
		
		ƒл€ Ќом—тр = 1 ѕо  олво—трок ÷икл
	        
			—осто€ние("ќбработка строки: " + Ќом—тр 
				+ " из " +  олво—трок);
	// цикл по строкам
			стр = ƒанные.ѕолучить—троку(Ќом—тр);
			
			–ез = ¬ырезатьЁлементы(стр, сзѕути, 
				сз—тек“егов, »м€, “егќткрыт, –ез);

		 онец÷икла;
	»наче
		
		ƒанные = —тр«аменить(ƒанные, —имв(10), "");
		
	// цикл по подстроке
		ѕока —трƒлина(ƒанные) > 0 ÷икл
		
			≈сли “егќткрыт = 0 “огда
	// читаем область данных		
				
				ѕоз = Ќайти(ƒанные, "<");
				
				≈сли ѕоз > 0 “огда
	// найден символ открыти€ тега
					≈сли ‘ильтрѕути(сз—тек“егов, сзѕути) = 0 “огда
	//[1]: добавление фрагмента данных до закрывающего тега				
						–ез = –ез + Ћев(ƒанные, ѕоз - 1);	
					 онец≈сли;
					
					»м€ = "";
					
					ƒанные = ѕрав(ƒанные, —трƒлина(ƒанные) - ѕоз);
					
					“егќткрыт = 1;
					
				»наче
	// вс€ оставша€с€ часть строки
	// содержит только данные
					≈сли ‘ильтрѕути(сз—тек“егов, сзѕути) = 0 “огда
	//[2]: добавление фрагмента данных после ...							
						–ез = –ез + ƒанные;
					 онец≈сли;	
		
					ƒанные = "";
		
				 онец≈сли;	
		
			»наче
	// читаем им€ тега
			    
				ѕоз = Ќайти(ƒанные, ">");
				
				≈сли ѕоз > 0 “огда
	// найден символ закрыти€ тега			
					
					»м€ = »м€ + Ћев(ƒанные, ѕоз - 1);
					
					ƒанные = ѕрав(ƒанные, —трƒлина(ƒанные) - ѕоз);
					
					“егќткрыт = 0;
					
					≈сли Ћев(»м€, 1) = "/" “огда
	// закрывающий тег
						≈сли ‘ильтрѕути(сз—тек“егов, сзѕути) = 0 “огда
	//[3]: добавление тега				
							–ез = –ез + "<" + »м€ + ">";	
						 онец≈сли;

						сз—тек“егов.”далить«начение(сз—тек“егов.–азмер—писка());
		
					»наче
	// открывающий тег
						≈сли ѕрав(»м€, 1) <> "/" “огда
	// если не пустой тег					
							т»м€ = —тр«аменить(»м€, " ", –азделитель—трок);
							
							сз—тек“егов.ƒобавить«начение(—трѕолучить—троку(т»м€, 1));

							≈сли ‘ильтрѕути(сз—тек“егов, сзѕути) = 0 “огда
	//[3]: добавление тега				
								–ез = –ез + "<" + »м€ + ">";	
							 онец≈сли;
						    
						 онец≈сли;
						
					 онец≈сли;	
					
				»наче
	// вс€ оставша€с€ часть строки
	// содержит только им€ тега
		
					»м€ = »м€ + ƒанные;
					
					ƒанные = "";
					
				 онец≈сли;	
		
			 онец≈сли;	               
			
		 онец÷икла;
		
	 онец≈сли;	
	
	¬озврат –ез;
	
 онец‘ункции
//*******************************************
ѕроцедура —формировать()
    ѕерем хмлѕарсер, хмлЌабор—хем, хмл орень;
	
	ќчиститьќкно—ообщений();
	
	//≈сли —оздатьЁлементƒокумента(хмлѕарсер, хмлЌабор—хем, хмл орень) = 1 “огда
	//	—ообщить(¬ывестиƒокумент¬—троку(хмлѕарсер));
	// онец≈сли;	
	
	//—тр = "<?xml version=""1.0"" encoding=""WINDOWS-1251""?>
	//	|<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"">
	//	|<xsl:apply-templates select=""*@""/>
	//	|<xsl:template match=""//ROOT/@"">
	//	|    <xsl:element name=""{name()}"">
	//	|        <xsl:value-of select=""text()""/>
	//	|    </xsl:element>
	//	|</xsl:template>
	//	|</xsl:stylesheet>
	//	|";
	//
	//≈сли ѕрочитатьƒокумент»з—троки(хмлѕарсер, хмлЌабор—хем, , —тр) = 1 “огда
	//	—ообщить(¬ывестиƒокумент¬—троку(хмлѕарсер));
	// онец≈сли;	
	
	//≈сли ѕрочитатьƒокумент»з‘айла(хмлѕарсер, хмлЌабор—хем, , 
	//	"X:\TEST\xml\tutorial\proba2.xsl") = 1 “огда
	//		—ообщить(¬ывестиƒокумент¬—троку(хмлѕарсер));
	// онец≈сли;
	
	//ѕопытка
	//	–езультат = —оздатьЁлементƒокумента(хмлѕарсер, хмлЌабор—хем, хмл орень)
	//		* ƒобавить—хему»з‘айла(хмлЌабор—хем, "http://my.org/kassa", 
	//			"X:\TEST\my.org_kassa.xsd");
	//»сключение
	//	—ообщить("ќшибка: " + ќписаниеќшибки(), "!");		
	//	¬озврат;
	// онецѕопытки;
	//
	//≈сли –езультат = 1 “огда
	//	хмл”зел = ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, 
	//		хмлЌабор—хем, ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, "http://my.org/kassa", 
	//			"DocumentObject.ќпераци€Ѕух"), 
	//				"DocumentObject.ќпераци€Ѕух");
	//	хмл орень.appendChild(хмл”зел);			
	//	—ообщить(¬ывестиƒокумент¬—троку(хмлѕарсер));
	//	//—ообщить(хмлѕарсер.prefix("http://my.org/kassa"));
	//»наче
	//	—ообщить("ќшибка!", "!");
    // онец≈сли;
	
	//ƒок = —оздатьќбъект("ƒокумент");
	//ƒок.ЌайтиѕоЌомеру("ѕЌк-001523", ƒата(2015,01,01), 
	//	"ѕриходна€Ќакладна€");
	//
	//Ќакл = —оздатьќбъект("ƒокумент.ѕриходна€Ќакладна€");
	//Ќакл.Ќайтиƒокумент(ƒок.“екущийƒокумент());  
	“овары = —оздатьќбъект("—правочник.Ќоменклатура");
	“овары.Ќайтиѕо оду(3069);
	//
	хмл”зел = "";
	ѕопытка
		–езультат = —оздатьЁлементƒокумента(хмлѕарсер, хмлЌабор—хем, хмл орень)
	    	//* —ериализоватьќбъект(Ќакл.“екущийƒокумент(), хмлѕарсер, хмлЌабор—хем, 
	    	//* —ериализоватьќбъект(ѕеречисление.≈диницы»змерени€.Ўтука, хмлѕарсер, хмлЌабор—хем, 
			* —ериализоватьќбъект(“овары.“екущийЁлемент(), хмлѕарсер, хмлЌабор—хем, 
				хмл”зел);
	»сключение
		¬озврат;
	 онецѕопытки;
	
	≈сли –езультат = 1 “огда
		хмл орень.appendChild(хмл”зел);
		¬ывестиƒокумент¬‘айл(хмлѕарсер, "X:\TEST\test.xml");
	»наче
		—ообщить("ќшибка!", "!");
	 онец≈сли;
	
	ћенеджерќбъекта1— = "";
	
	≈сли ѕрочитатьќбъект(ћенеджерќбъекта1—, хмлѕарсер, хмлЌабор—хем, хмл”зел) = 1 “огда
		
		—ообщить(ћенеджерќбъекта1—);
		
	 онец≈сли;
	
	//
	////хмл‘ункци€=""; хмл–езультат="";
	////
	////стр’—Ћ =	"<?xml version=""1.0"" encoding=""WINDOWS-1251""?>
	////			|<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"">
	////			|<xsl:template match=""/"">
	////			//|<ROOT>
	////			|<xsl:for-each select=""ROOT/ƒокумент.–асходна€Ќакладна€/–еквизитЎапки"">
	////			|<ƒокумент.–асходна€Ќакладна€>
	////			|<–еквизитЎапки>
	////			|<¬алюта><xsl:value-of select=""¬алюта""/></¬алюта>
	////			|</–еквизитЎапки>
	////			|</ƒокумент.–асходна€Ќакладна€>
	////			|</xsl:for-each>
	////			|<xsl:for-each select=""ROOT/—правочник.Ќоменклатура/–еквизит"">
	////			|<CatalogObject.Ќоменклатура>
	////			|<Ќаименование><xsl:value-of select="" од—оответстви€""/></Ќаименование>
	////			|</CatalogObject.Ќоменклатура>
	////			|</xsl:for-each>
	////			//|</ROOT>
	////			|</xsl:template>
	////			|</xsl:stylesheet>
	////			|";
	////ѕопытка			
	////	–езультат = ѕрочитатьƒокумент»з—троки(хмл‘ункци€, хмлЌабор—хем, , стр’—Ћ)
	////		* ¬ыполнитьѕреобразование(хмлѕарсер, хмлЌабор—хем, хмл‘ункци€, хмл–езультат);
	////»сключение
	////	—ообщить("ќшибка", "!");		
	////	¬озврат;
	//// онецѕопытки;
	//
	////≈сли –езультат = 1 “огда
	////	—ообщить(¬ывестиƒокумент¬—троку(хмл–езультат));
	//// онец≈сли;				
    //
	//ћенеджерќбъекта1— = "";
	//
	//≈сли ѕрочитатьќбъект(ћенеджерќбъекта1—, хмлѕарсер, хмлЌабор—хем, хмл”зел) = 1 “огда
	//	
	//	—ообщить(ћенеджерќбъекта1—);
	//	
	// онец≈сли;	
	
	//ƒок = —оздатьќбъект("ƒокумент");
	//ƒок.ЌайтиѕоЌомеру("822.06/роз", ƒата(2015,06,30), 
	//	"–асходна€Ќакладна€");
	//
	//Ќакл = —оздатьќбъект("ƒокумент.–асходна€Ќакладна€");
	//Ќакл.Ќайтиƒокумент(ƒок.“екущийƒокумент());
	//
	//спр“овары = —оздатьќбъект("—правочник.Ќоменклатура");
	//спр“овары.Ќайтиѕо оду(5192);
	//
	//
	//хмлЎаблон="";
	////стр’—Ћ =	"<?xml version=""1.0"" encoding=""WINDOWS-1251""?>
	////			|<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	////			|<xsl:template match=""/"">
	////			//|<ROOT>
	////			|<xsl:for-each select=""ROOT/ƒокумент.–асходна€Ќакладна€/–еквизитЎапки"">
	////			|<ƒокумент.–асходна€Ќакладна€>
	////			|<–еквизитЎапки>
	////			|<¬алюта xsi:type=""myType""><xsl:value-of select=""¬алюта""/></¬алюта>
	////			|</–еквизитЎапки>
	////			|</ƒокумент.–асходна€Ќакладна€>
	////			|</xsl:for-each>
	////			|<xsl:for-each select=""ROOT/—правочник.¬алюты/–еквизит—тандартный"">
	////			|<—правочник.¬алюты>
	////			|<–еквизит—тандартный>
	////			|<Ќаименование><xsl:value-of select=""Ќаименование""/></Ќаименование>
	////			|</–еквизит—тандартный>
	////			|</—правочник.¬алюты>
	////			|</xsl:for-each>
	////			//|</ROOT>
	////			|</xsl:template>
	////			|</xsl:stylesheet>
	////			|";
	//
	//ѕопытка
	//	–езультат = —оздатьЁлементƒокумента(хмлѕарсер, хмлЌабор—хем, хмл орень)
	//		//* ѕрочитатьƒокумент»з—троки(хмлЎаблон, хмлЌабор—хем, , стр’—Ћ)
	//		* ѕрочитатьƒокумент»з‘айла(хмлЎаблон, хмлЌабор—хем, "", "X:\TEST\xml\test.xsl")
	//    		* —ериализоватьќбъект–екурсивно(Ќакл.“екущийƒокумент(), хмлѕарсер, 
	//				хмл орень, хмлЌабор—хем, хмлЎаблон);
	//»сключение
	//	—ообщить(ќписаниеќшибки());		
	//	–езультат = 0;
	// онецѕопытки;
	//
	//≈сли –езультат = 1 “огда
	//	¬ывестиƒокумент¬‘айл(хмлѕарсер, "X:\TEST\xml\test.xml");
	//»наче
	//	—ообщить("ќшибка!", "!");
    // онец≈сли;
//	
//	ѕопытка
//		–езультат = —оздатьЁлементƒокумента(хмлѕарсер, хмлЌабор—хем, хмл орень)
//			* ƒобавить—хему»з‘айла(хмлЌабор—хем, "http://my.org/kassa", 
//				"X:\TEST\my.org_kassa.xsd");
//	»сключение
//		—ообщить("ќшибка: " + ќписаниеќшибки(), "!");		
//		¬озврат;
//	 онецѕопытки;
//	
//	≈сли –езультат = 1 “огда
//		
//		// набор записей регистра бухгалтерии
//		хмл”зел = ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, 
//			хмлЌабор—хем, ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, "http://my.org/kassa", 
//				"AccountingRegisterRecordSet.’озрасчетный"), 
//					"AccountingRegisterRecordSet.’озрасчетный");
//
//		хмл орень.appendChild(хмл”зел);			
//
//		// фильтр		
//		хмл‘ильтр = ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, 
//			хмлЌабор—хем, ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, "http://my.org/kassa", 
//				"FilterItem"), "FilterItem");
//		
//		хмл”зел.getElementsByTagName("Filter").item(0).appendChild(хмл‘ильтр);
//					
//		хмлЁлемент = хмл‘ильтр.appendChild(хмлѕарсер.createElement("Name"));
//		хмлЁлемент.text = "Recorder";			
//		
//		хмлЁлемент = хмл‘ильтр.appendChild(хмлѕарсер.createElement("ComparisonType"));
//		хмлЁлемент.text = "Equal";			
//		
//		хмлЁлемент = хмл‘ильтр.appendChild(хмлѕарсер.createElement("Value"));
//		хмлЁлемент.text = «начение¬—троку¬нутр(Ќакл.“екущийƒокумент());			
//		
//		// запись
//		хмл«апись = ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, 
//			хмлЌабор—хем, ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, "http://my.org/kassa", 
//				"AccountingRegisterRecord.’озрасчетный"), 
//					"AccountingRegisterRecord.’озрасчетный");
//		
//		хмл”зел.getElementsByTagName("Records").item(0).appendChild(хмл«апись);
//					
//		хмлЁлемент = хмл«апись.getElementsByTagName("Period").item(0);
//		хмлЁлемент.text = “екуща€ƒата();
//		ƒобавитьјтрибут(хмлѕарсер, хмлЁлемент, "xsi:type", "xsi:datetime");
//		
//		хмлЁлемент = хмл«апись.getElementsByTagName("ќрганизаци€").item(0);
//		хмлЁлемент.text = «начение¬—троку¬нутр( онстанта.ќсновна€‘ирма1);
//		ƒобавитьјтрибут(хмлѕарсер, хмлЁлемент, "xsi:type", "myType:—правочник.‘ирмы");
//		
//		// субконто
//		хмл—убконто = ѕостроить”зелѕоќписанию“ипа(хмлѕарсер, 
//			хмлЌабор—хем, ѕолучитьќписание“ипа—хемы(хмлЌабор—хем, "http://my.org/kassa", 
//				"AccountingRegisterExtDimension.’озрасчетный"), 
//					"AccountingRegisterExtDimension.’озрасчетный");
//		
//		хмл«апись.getElementsByTagName("ExtDimensionsDr").item(0).appendChild(хмл—убконто);
//					
//		хмл—убконто.getElementsByTagName("Type").item(0).text = "—правочник.Ќоменклатура";
//		хмл«начение = хмл—убконто.getElementsByTagName("Value").item(0); 
//		хмл«начение.text = «начение¬—троку¬нутр(спр“овары.“екущийЁлемент());
//		ƒобавитьјтрибут(хмлѕарсер, хмл«начение, "xsi:type", "myType:—правочник.Ќоменклатура");
//		
//		// запись в файл дл€ сравнени€
//		¬ывестиƒокумент¬‘айл(хмлѕарсер, "X:\TEST\xml\test.xml");
//		
//		// преобразование объекта по схеме обмена
//		хмлЎаблон = "";
//		ѕрочитатьƒокумент»з‘айла(хмлЎаблон, хмлЌабор—хем, "", "X:\TEST\xml\test.xsl");
//		
//	    —ериализоватьќбъект–екурсивно(хмл”зел, хмлѕарсер, хмл орень, 
//			хмлЌабор—хем, хмлЎаблон);
//			
//		¬ывестиƒокумент¬‘айл(хмлѕарсер, "X:\TEST\xml\test2.xml");
//		
//	»наче
//		—ообщить("ќшибка!", "!");
//     онец≈сли;
	
 онецѕроцедуры
//******************************************* 
—имв»сключени€ = —оздатьќбъект("—писок«начений");
—имв»сключени€.»з—троки—–азделител€ми("""("","")""");

ѕространства»мен = —оздатьќбъект("—писок«начений");
// в дальнейшем: загрузку значений констант можно выполн€ть из соответствующего xml-описани€
 онстантыMSXML = —оздатьќбъект("—писок«начений");
 онстантыMSXML.ƒобавить«начение("SOMITEM_SCHEMA", "4096");
 онстантыMSXML.ƒобавить«начение("SOMITEM_ATTRIBUTE", "4097");
 онстантыMSXML.ƒобавить«начение("SOMITEM_ATTRIBUTEGROUP", "4098");
 онстантыMSXML.ƒобавить«начение("SOMITEM_NOTATION", "4099");
 онстантыMSXML.ƒобавить«начение("SOMITEM_IDENTITYCONSTRAINT", "4352");
 онстантыMSXML.ƒобавить«начение("SOMITEM_KEY", "4353");
 онстантыMSXML.ƒобавить«начение("SOMITEM_KEYREF", "4354");
 онстантыMSXML.ƒобавить«начение("SOMITEM_UNIQUE", "4355");
 онстантыMSXML.ƒобавить«начение("SOMITEM_ANYTYPE", "8192");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE", "8448");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_ANYTYPE", "8449");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_ANYURI", "8450");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_BASE64BINARY", "8451");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_BOOLEAN", "8452");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_BYTE", "8453");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_DATE", "8454");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_DATETIME", "8455");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_DAY", "8456");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_DECIMAL", "8457");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_DOUBLE", "8458");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_DURATION", "8459");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_ENTITIES", "8460");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_ENTITY", "8461");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_FLOAT", "8462");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_HEXBINARY", "8463");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_ID", "8464");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_IDREF", "8465");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_IDREFS", "8466");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_INT", "8467");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_INTEGER", "8468");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_LANGUAGE", "8469");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_LONG", "8470");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_MONTH", "8471");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_MONTHDAY", "8472");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_NAME", "8473");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_NCNAME", "8474");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_NEGATIVEINTEGER", "8475");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_NMTOKEN", "8476");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_NMTOKENS", "8477");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_NONNEGATIVEINTEGER", "8478");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_NONPOSITIVEINTEGER", "8479");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_NORMALIZEDSTRING", "8480");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_NOTATION", "8481");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_POSITIVEINTEGER", "8482");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_QNAME", "8483");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_SHORT", "8484");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_STRING", "8485");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_TIME", "8486");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_TOKEN", "8487");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_UNSIGNEDBYTE", "8488");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_UNSIGNEDINT", "8489");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_UNSIGNEDLONG", "8490");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_UNSIGNEDSHORT", "8491");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_YEAR", "8492");
 онстантыMSXML.ƒобавить«начение("SOMITEM_DATATYPE_YEARMONTH", "8493");
 онстантыMSXML.ƒобавить«начение("SOMITEM_SIMPLETYPE", "8704");
 онстантыMSXML.ƒобавить«начение("SOMITEM_COMPLEXTYPE", "9216");
 онстантыMSXML.ƒобавить«начение("SOMITEM_PARTICLE", "16384");
 онстантыMSXML.ƒобавить«начение("SOMITEM_ANY", "16385");
 онстантыMSXML.ƒобавить«начение("SOMITEM_ANYATTRIBUTE", "16386");
 онстантыMSXML.ƒобавить«начение("SOMITEM_ELEMENT", "16387");
 онстантыMSXML.ƒобавить«начение("SOMITEM_GROUP", "16640");
 онстантыMSXML.ƒобавить«начение("SOMITEM_ALL", "16641");
 онстантыMSXML.ƒобавить«начение("SOMITEM_CHOICE", "16642");
 онстантыMSXML.ƒобавить«начение("SOMITEM_SEQUENCE", "16643");
 онстантыMSXML.ƒобавить«начение("SOMITEM_EMPTYPARTICLE", "16644");
 онстантыMSXML.ƒобавить«начение("SOMITEM_NULL", "2048");
 онстантыMSXML.ƒобавить«начение("SOMITEM_NULL_TYPE", "10240");
 онстантыMSXML.ƒобавить«начение("SOMITEM_NULL_ANY", "18433");
 онстантыMSXML.ƒобавить«начение("SOMITEM_NULL_ANYATTRIBUTE", "18434");
 онстантыMSXML.ƒобавить«начение("SOMITEM_NULL_ELEMENT", "18435");
 онстантыMSXML.ƒобавить«начение("SOMITEM_GROUP", "16388");
 онстантыMSXML.ƒобавить«начение("SOMITEM_ALL", "16389");
 онстантыMSXML.ƒобавить«начение("SOMITEM_CHOICE", "16390");
 онстантыMSXML.ƒобавить«начение("SOMITEM_SEQUENCE", "16391");
 онстантыMSXML.ƒобавить«начение("SOMITEM_EMPTYPARTICLE", "16392");
 онстантыMSXML.ƒобавить«начение("SOMITEM_SEQUENCE", "16643");
 онстантыMSXML.ƒобавить«начение("SCHEMAUSE_OPTIONAL", "0");
 онстантыMSXML.ƒобавить«начение("SCHEMAUSE_PROHIBITED", "1");
 онстантыMSXML.ƒобавить«начение("SCHEMAUSE_REQUIRED", "2");
 онстантыMSXML.ƒобавить«начение("SCHEMACONTENTTYPE_EMPTY", "0");
 онстантыMSXML.ƒобавить«начение("SCHEMACONTENTTYPE_TEXTONLY", "1");
 онстантыMSXML.ƒобавить«начение("SCHEMACONTENTTYPE_ELEMENTONLY", "2");
 онстантыMSXML.ƒобавить«начение("SCHEMACONTENTTYPE_MIXED", "3");