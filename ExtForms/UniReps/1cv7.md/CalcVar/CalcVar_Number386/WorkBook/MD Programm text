Перем грРП, мОсновнаяФирма1, 
	мСтоловая, мСкладПД, мГруппаПД;
//*******************************************
Функция Тест()
	
	Возврат """глмРИБ003"" - подключен";
	
КонецФункции
//*******************************************
Функция НаборДанныхОбъекта(Объект, РасшОбъект)
    Перем тзТовары;
	
	РасшОбъект.Установить("Документ", Объект);
	РасшОбъект.Установить("Проведен", Объект.Проведен());
	РасшОбъект.Установить("ПометкаУдаления", Объект.ПометкаУдаления());
	РасшОбъект.Установить("ДатаДок", глмХМЛ.Дата2Строка(Объект.ДатаДок, 
		Объект.ПолучитьВремя())); 
	РасшОбъект.Установить("НомерДок", 
		СтрПолучитьСтроку(СтрЗаменить(Объект.НомерДок,
			"/", РазделительСтрок), 1)); 
	РасшОбъект.Установить("Комментарий", Объект.Основание);
	РасшОбъект.Установить("ВнешнийИдентификатор", "");

	Если Объект.Вид() = "РасходнаяНакладная" Тогда
// в данной настройке обмена, только расходные 
// накладные имеют внешний источник        
		ВнешИд = глмХМЛ.НайтиСоответствие("003:" 
			+ глмМетаданные.Ссылка2Ид(Объект));

		Если Объект.ПризнакМоб = 4 Тогда
// если документ не оформлен в мобильной торговле
		
		ИначеЕсли СокрЛП(ВнешИд) = "" Тогда
// если документ оформлен, но заявка пришла не ч/з СЭД

		Иначе
			РасшОбъект.Установить("ВнешнийИдентификатор", ВнешИд);
			РасшОбъект.Установить("Контрагент", СокрЛП(Объект.Клиент.НомерТТ)); 
// подробную информацию передаем только по накладным, 
// созданным во внешнем источнике		
			сзТовары = СоздатьОбъект("СписокЗначений");
			РасшОбъект.ДобавитьЗначение(сзТовары, "Товары");
			
			глмКорректировкаЗаписейРегистров.ОтклДвижения = 0;
			глмКорректировкаЗаписейРегистров.ДатаДок = Объект.ДатаДок;
			глмКорректировкаЗаписейРегистров.КорректировкаЗаписейРегистров = Объект;
			глмКорректировкаЗаписейРегистров.ЗагрузитьНаборДвижений(Объект);
		
			НаборДвижений = глмКорректировкаЗаписейРегистров.НаборДвижений;
// только этот регистр содержит всю полную информацию
			тзПродажи = НаборДвижений.Получить("Продажи");

//// Функция исключена из набора   				
//	   		тзОшибки = глмСерииНоменклатуры
//				.ПолучитьРезультатОбработкиОперации(Объект, ""); 
//// подбор данных по вет. сертификатам				
//			сзКолВкл = СоздатьОбъект("СписокЗначений");
//			сзКолВкл.ИзСтрокиСРазделителями("""Товар"",""Серия""");
//		
//			Ключ = глмТаблицыЗначений.СоздатьЗапись(тзПродажи, сзКолВкл, "", "");
//			тзПродажи = глмТаблицыЗначений.ЛевоеСоединение(тзПродажи, 
//				тзОшибки, Ключ, "", 0);
//\\			
			тзПродажи.ВыбратьСтроки();
			Пока тзПродажи.ПолучитьСтроку() = 1 Цикл
// проверка необходимости формировать электронные 
// ВСД по документу				
				флНужныСертификаты = ?(тзПродажи.Товар.схТип = 5, 1, 0);	
// формирование структуры выгрузки для табличной части				
				сзСтрока = СоздатьОбъект("СписокЗначений");
				сзСтрока.ДобавитьЗначение(тзПродажи.Товар.Код, "Товар"); 
				сзСтрока.ДобавитьЗначение(тзПродажи.Количество, "Количество"); 
				сзСтрока.ДобавитьЗначение(тзПродажи.Сумма / ?(тзПродажи.Количество = 0, 
					 1, тзПродажи.Количество), "Цена");
   				сзСтрока.ДобавитьЗначение(тзПродажи.Сумма, "Сумма");
   				сзСтрока.ДобавитьЗначение(флНужныСертификаты, "Поднадзорный");
//// Функция исключена из набора   				
//   				сзСтрока.ДобавитьЗначение(СокрЛП(тзПродажи.ГУИдВетСвидетельства), 
//   					"ГУИдВетСвидетельства");
//\\
				сзТовары.ДобавитьЗначение(сзСтрока, "Строка");
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
	
	Возврат 1;
	
КонецФункции
//*******************************************
Функция НайтиПоНомеру(хмлУзел, РН)
	
	НомерДок = хмлУзел.selectSingleNode("myType:НомерДок").text;
	
	НомерДок = СокрЛП(НомерДок);
	
	Если Лев(НомерДок, 3) <> "КРТ" Тогда
		
		НомерДок = НомерДок + "/тк";
		
	КонецЕсли;	
	
	Возврат РН.НайтиПоНомеру(НомерДок, ТекущаяДата());
	
КонецФункции	
//*******************************************
Функция ЗагрузитьДанныеРасходнойНакладной(хмлУзел, ДокИд, Док)
	Перем СтатусЗаявки; // 0-новая, 1-в работе, 2-отгружена
	
	РН = СоздатьОбъект("Документ.РасходнаяНакладная");
	
	спрКлиенты = СоздатьОбъект("Справочник.Контрагенты");
	спрТовары = СоздатьОбъект("Справочник.Номенклатура");

	СтатусЗаявки = 0;
	
	Если ПустоеЗначение(Док) = 1 Тогда
// заплатка на переходный период заполнения соответсвий
		Если НайтиПоНомеру(хмлУзел, РН) = 0 Тогда
//			
			РН.Новый();
			Сообщить("Создан новый документ");
//         
		Иначе
			СтатусЗаявки = ?(РН.ПризнакМоб = 4, 1, 2);
		КонецЕсли;
//\\	
	ИначеЕсли РН.НайтиДокумент(Док) = 0 Тогда

		Если НайтиПоНомеру(хмлУзел, РН) = 0 Тогда
			РН.Новый();
			Сообщить("Создан новый документ");
		Иначе
			СтатусЗаявки = ?(РН.ПризнакМоб = 4, 1, 2);
		КонецЕсли;
	Иначе
// можно еще ориентироваться на значение реквизита 
// "ДокументСинхронизирован", однако надежнее на 
// объективные и актуальные сведения из базы 
// данных-приемника
		ПринятыРасхождения = Число(хмлУзел
			.selectSingleNode("myType:ПринятыРасхождения").text);

		Если ПринятыРасхождения = 0 Тогда
// заявка уже была загружена и по ней не было 
// никаких изменений
			Сообщить("Загрузка отклонена - документ существует");
			Возврат 1;
		КонецЕсли;	
		СтатусЗаявки = ?(РН.ПризнакМоб = 4, 1, 2);
	КонецЕсли;	
	
	КлиентИд = хмлУзел.selectSingleNode("myType:Клиент").text;
// не факт, что поиск по справочнику соответствий 
// будет быстрее поиска по таблице условно-постоянной
// информации
//	Клиент = глмХМЛ.НайтиОбъект(КлиентИд);
//	Если спрКлиенты.НайтиЭлемент(Клиент) = 0 Тогда
		тКлиентИд = СтрЗаменить(КлиентИд, ":", РазделительСтрок);
		КодКлиента = СтрПолучитьСтроку(тКлиентИд, 2);
		Если спрКлиенты.НайтиПоРеквизиту("НомерТТ", 
			КодКлиента, 1) = 1 Тогда
				Клиент = спрКлиенты.ТекущийЭлемент();
//		  		глмХМЛ.УстановСоответствие(КлиентИд, 
//		  			глмМетаданные.Ссылка2Ид(Клиент), 0);
		Иначе
	        Сообщить("Загрузка документа отклонена - клиент не найден");
		  	Возврат 0;		
		КонецЕсли;	
//	КонецЕсли;
// шапка документа
	Если СтатусЗаявки = 0 Тогда
	  	РН.Автор = глПользователь;
		РН.Фирма = Константа.ОсновнаяФирма;
  		РН.НомерДок = хмлУзел.selectSingleNode("myType:НомерДок").text;
		РН.НомерМОБ = РН.НомерДок;
	  	ДатаДок = хмлУзел.selectSingleNode("myType:ДатаДок").text;
	  	РН.ДатаДок = Дата(Лев(ДатаДок, 4), Сред(ДатаДок, 6, 2), Сред(ДатаДок, 9, 2));
		РН.Дата_курса = РН.ДатаДок;
		РН.ПризнакОтв = 1;
		РН.Склад = Константа.СкладПД;
		РН.Фирма1 = Константа.ОсновнаяФирма1;
		РН.Признак = Перечисление.ПрНакладной.Развозка1_часть1;
		РН.СтатусВСД = Перечисление.СтатусыВСД.Проект;
		РН.ПризнакРазв = Перечисление.ПрНакладной.Развозка1;
		РН.ПризнакНакладной = Перечисление.ПризнРасхНакл.Продажа; 
		РН.Валюта = Константа.ОсновнаяВалюта;
		РН.Курс = 1;
		РН.ПризнакМоб = 4;
		РН.ОтборМОБ = 1;
	КонецЕсли;	
	Если СтатусЗаявки < 2 Тогда
		РН.Клиент = Клиент;	
		спрКлиенты.ИспользоватьДату(РН.ДатаДок);
		РН.Основание = Клиент.Договор.Получить(РН.ДатаДок);
		РН.Комментарий = хмлУзел.selectSingleNode("myType:Комментарий").text;
	Иначе
// заявка уже оформлена и, вероятно, проведена 
// через ИС "Меркурий" - корректировать некоторые 
// реквизиты шапки в автоматическом режиме 
// не представляется возможным
		Если РН.Клиент <> Клиент Тогда
			Сообщить("Загрузка документа отклонена - клиент различается");
			Возврат 0;
		КонецЕсли;	
	КонецЕсли;	
// таб. часть:
	РН.УдалитьСтроки();
	спрТовары.ИспользоватьДату(РН.ДатаДок);
	ВыбСтроки = хмлУзел.selectNodes("myType:РеквизитТабличнойЧасти"); 
	Для номСтроки = 0 По ВыбСтроки.length - 1 Цикл
		хмлСтрока = ВыбСтроки.item(номСтроки);
		РН.НоваяСтрока();
		ТоварИд = хмлСтрока.selectSingleNode("myType:Товар").text;
//		Товар = глмХМЛ.НайтиОбъект(ТоварИд);
//		Если спрТовары.НайтиЭлемент(Товар) = 0 Тогда
			тТоварИд = СтрЗаменить(ТоварИд, ":", РазделительСтрок);
			КодТовара = Число(СтрПолучитьСтроку(тТоварИд, 2));
			Если спрТовары.НайтиПоКоду(КодТовара, 0) = 1 Тогда
				Товар = спрТовары.ТекущийЭлемент();
//		  		глмХМЛ.УстановСоответствие(ТоварИд, 
//		  			глмМетаданные.Ссылка2Ид(Товар), 0);
		  	Иначе
		  		//Сообщить("Товар с кодом """ + КодТовара 
		  		//	+ """ не найден");
		  		Сообщить("Загрузка документа отклонена - товар с кодом """ 
		  			+ КодТовара + """ не найден");
		  		Возврат 0;
			КонецЕсли;	
//		КонецЕсли;
		РН.Товар = Товар;
		КоличествоШт = Число(хмлСтрока
			.selectSingleNode("myType:Количество").text);
// теоретически, возможна ситуация, когда количество по накладной
// выше количества, отгруженного по заявке, но практически, 
// вероятность такого близка к 0
		Количество = Цел(КоличествоШт / Товар.КФП);
		//Если Количество = Цел(Количество) Тогда
			РН.Коэффициент = Товар.КФП;
			РН.Количество = Количество;
		//Иначе
		//	РН.Коэффициент = 1;
		//	РН.Количество = КоличествоШт;
		//КонецЕсли;	
////КОВ по ООО Лента сумму заполняем так, как есть в Реализации
//		Если СокрЛП(Клиент.ИНН) = "7814148471" Тогда
			РН.Цена = Число(хмлСтрока.selectSingleNode("myType:Цена").text);
			РН.Сумма = Число(хмлСтрока.selectSingleNode("myType:Сумма").text);
//		Иначе
////			
//			РН.Цена = Окр(спрТовары.ПолучитьАтрибут(глВзятьИмяРеквизитаКатегорииЦен(
//				глВзятьПорядокИзКатегорииЦен(спрКлиенты.КатегорЦена))),2);
//			РН.Сумма = РН.Цена * РН.Количество * РН.Коэффициент;
//		КонецЕсли;		
//\\		
		РН.ЦенаКор = РН.Цена * Товар.ЗначК;
//		РН.СтНДС = спрТовары.СтавкаНДС;
//		РН.НДС	= РН.Сумма * глВыделяемыйНДС(РН.СтНДС);
	КонецЦикла;	
	
	Рез = 1;
	
	Попытка	
		РН.Записать();
		Если СтатусЗаявки > 0 Тогда
			Рез = РН.Провести();
			Сообщить("Документ:""" + РН.ТекущийДокумент() + """ - записан");
		КонецЕсли;	
	Исключение
// документ не создан/изменения не записаны		
		Сообщить("Документ:""" + РН.ТекущийДокумент() + """ - ошибка записи");
		Возврат 0;
	КонецПопытки;
// удалось записать документ, но не удалось установить соответствие
// - эту ситуацию нужно отрабатывать восстановлением связи объектов
// через поиск документа по номеру
	Возврат ?(СтатусЗаявки <> 0, Рез, глмХМЛ.УстановСоответствие(ДокИд, 
		глмМетаданные.Ссылка2Ид(РН.ТекущийДокумент()), 0));
	
КонецФункции	
//*******************************************
Функция ЗагрузитьДанные(хмлПарсер)
	
	хмлПарсер.setProperty("SelectionLanguage", "XPath");
	хмлПарсер.setProperty("SelectionNamespaces", "xmlns:myType='http://my.org/torg'");
    
	ВыбДок = хмлПарсер.selectNodes("//myType:Документ.РасходнаяНакладная"); 
	
	Для номУзла = 0 По ВыбДок.length - 1 Цикл
// расходная накладная
		хмлУзел = ВыбДок.item(номУзла);
		ДокИд = хмлУзел.selectSingleNode("myType:Ref").text;
		Сообщить("Поиск Ид:""" + ДокИд + """");
  		Док = глмХМЛ.НайтиОбъект(ДокИд);
  		Сообщить("Найден:""" + Док + """");
  		ЗагрузитьДанныеРасходнойНакладной(хмлУзел, ДокИд, Док);
  		глмОбщиеФункции.ПаузаПриДоступеКДанным(500);
  	КонецЦикла;	
	
	Возврат 1;
	
КонецФункции	
//*******************************************
грРП = Константа.ОсновнойПокупатель;
мОсновнаяФирма1 = Константа.ОсновнаяФирма1;
мСтоловая = Константа.Столовая;
мСкладПД = Константа.СкладПД;
спрКлиенты = СоздатьОбъект("Справочник.Контрагенты");
спрКлиенты.НайтиПоКоду(2802);
мГруппаПД = спрКлиенты.ТекущийЭлемент();