Перем НовыйЭлемент;
Перем Закрывать;
Перем ПолученныйКонтекст;
//*****
//
// Устанавливает значения периодических реквизитов справочника.
Процедура Установить(Объект, Значение)
	Период = СоздатьОбъект("Периодический");
	Фирма=ТекущийЭлемент();
	Период.ИспользоватьОбъект(Объект, Фирма);
	ДатаЗнач = НачГода(РабочаяДата());
	Период.ВыбратьЗначения();
	Если Период.ПолучитьЗначение() = 1 Тогда
		Если Период.ДатаЗнач <= ТекущаяДата() Тогда
			ДатаЗнач = РабочаяДата();
		КонецЕсли;
	КонецЕсли;
	СтароеЗначение = Период.ЗначениеНаДату(ДатаЗнач);
	Если ТипЗначения(СтароеЗначение) = 2 Тогда
		СтароеЗначение = СокрП(СтароеЗначение);
	КонецЕсли;
	НовоеЗначение = Значение;
	Если ТипЗначения(НовоеЗначение) = 2 Тогда
		НовоеЗначение = СокрП(НовоеЗначение);
	КонецЕсли;

	Если СтароеЗначение <> НовоеЗначение Тогда
		Период.ДатаЗнач = ДатаЗнач;
		Период.Значение = НовоеЗначение;
		Период.Записать();
	КонецЕсли;
КонецПроцедуры

//*****
Процедура УдалитьИсторию(Реквизит)
	    П = СоздатьОбъект("Периодический");
	    П.ИспользоватьОбъект(Реквизит, ТекущийЭлемент());
	    П.ВыбратьЗначения();
	    Пока П.ПолучитьЗначение() = 1 Цикл
	    	П.Удалить();
	    КонецЦикла;
КонецПроцедуры

//*****
Процедура ПриЗаписиФирмы()
	Если НовыйЭлемент = 1 Тогда
		УдалитьИсторию("ПолнНаименование");
		УдалитьИсторию("ОфициальноеНаименование");
		УдалитьИсторию("ЮридическийАдрес");
		УдалитьИсторию("ПочтовыйАдрес");
		УдалитьИсторию("Руководитель");
		УдалитьИсторию("ГлБухгалтер");
		УдалитьИсторию("Кассир");
		УдалитьИсторию("МетодОпределенияВыручки");
		УдалитьИсторию("МетодРасчетаСебестоимостиФинансовогоУчета");
	    НовыйЭлемент = 0;
	КонецЕсли;

	Установить( "ПолнНаименование", РеквизитПолноеНаименование );
	Установить( "ОфициальноеНаименование", РеквизитОфициальноеНаименование );
	Установить( "ЮридическийАдрес", РеквизитЮридическийАдрес );
	Установить( "ПочтовыйАдрес", РеквизитПочтовыйАдрес );
	Установить( "Руководитель", РеквизитРуководитель );
	Установить( "ГлБухгалтер", РеквизитГлБухгалтер );
	Установить( "Кассир", РеквизитКассир );
	Установить( "ГНИ", РеквизитГНИ );
	Установить( "МетодОпределенияВыручки", РеквизитМетодОпределенияВыручки );
	Установить( "МетодРасчетаСебестоимостиФинансовогоУчета", РеквизитМетодРасчетаСебестоимости );
КонецПроцедуры


//*****
//
// Параметры:
//  НомерРеквизита - число, условный номер реквизита диалога, из которого вызвана процедура
//
Процедура ПриИзмененииУчетнойПолитики( НомерРеквизита )
	ТекстВопроса="Этот реквизит является элементом учетной политики предприятия."+РазделительСтрок+
				 "Он должен устанавливаться 1 раз в начале года. Его изменение"+РазделительСтрок+
				 "в течение года может привести к нарушениям в работе системы."+РазделительСтрок+РазделительСтрок+
				 "Вы уверены, что хотите изменить этот реквизит?";
	Если Вопрос( ТекстВопроса, 4 )= "Нет" Тогда
		Если НомерРеквизита=1 Тогда
		    РеквизитМетодОпределенияВыручки=МетодОпределенияВыручки;
		    Если ПустаяСтрока( РеквизитМетодОпределенияВыручки ) = 1 Тогда
		    	РеквизитМетодОпределенияВыручки=Перечисление.МетодыОпределенияВыручки.ПоОтгрузке;
		    КонецЕсли;
		ИначеЕсли НомерРеквизита=2 Тогда
			РеквизитМетодРасчетаСебестоимости=МетодРасчетаСебестоимостиФинансовогоУчета;
		    Если ПустаяСтрока( РеквизитМетодРасчетаСебестоимости ) = 1 Тогда
			    РеквизитМетодРасчетаСебестоимости=Перечисление.МетодыРасчетаСебестоимости.FIFO;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//-----------------------
Процедура ДобавитьРС()
	Перем ФормаЗаписи;
	ФормаЗаписи=ВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Элемент.БанковскиеСчета",ФормаЗаписи,,,ТекущийЭлемент());
КонецПроцедуры

//-----------------------
Процедура ИзменитьРС()
	Перем ФормаЗаписи;
	Эл=СписокСчетов.ПолучитьЗначение(СписокСчетов.ТекущаяСтрока());
	ФормаЗаписи=ВзятьКонтекст(Контекст);
	ОткрытьФормуМодально(Эл,ФормаЗаписи);
КонецПроцедуры

//-----------------------
Процедура УдалитьРС()
	Если Вопрос("Вы действительно хотите удалить банковский счет"+РазделительСтрок+"(счет будет помечен на удаление)?",1)=2 Тогда
		Возврат;
	КонецЕсли;
	Поз=СписокСчетов.ТекущаяСтрока();
	Эл=СписокСчетов.ПолучитьЗначение(Поз);
	Спр=СоздатьОбъект("Справочник.БанковскиеСчета");
	Спр.ИспользоватьВладельца(ТекущийЭлемент());
	Если Спр.НайтиЭлемент(Эл)=1 Тогда
		Спр.Удалить(0);
		СписокСчетов.УдалитьЗначение(Поз);
		СписокСчетов.ТекущаяСтрока(?(Поз>1,Поз-1,1));
		Если СписокСчетов.РазмерСписка()=0 Тогда
			Форма.КнИзменить.Доступность(0);
			Форма.КнУдалить.Доступность(0);
		КонецЕсли;
		Форма.Обновить();
	КонецЕсли;
КонецПроцедуры

//*****
Процедура ВводНового(ПризнКопирования)
	Если  ПризнКопирования=0 Тогда
		Наименование="Новый";
		ПрефиксНомеровДокументов="А"+Симв(191+Код );
		НовыйЭлемент=1;
	    РеквизитМетодОпределенияВыручки=Перечисление.МетодыОпределенияВыручки.ПоОтгрузке;
	    // Устанавливаем значение реквизита "Метод расчета себестоимости"
	    РеквизитМетодРасчетаСебестоимости=Перечисление.МетодыРасчетаСебестоимости.FIFO;
	КонецЕсли;
	// для новых элементов устанавливаем
	// дату записи периодических реквизитов на '01.01.80'
	ИспользоватьДату('01.01.80');
КонецПроцедуры

//*****
Процедура ПриВыбореЗакладки(Ном,Значен)
	Если Значен="Общие" Тогда
		Форма.ИспользоватьСлой("Основной, Кнопки, ОбщиеСведения ",2);
	ИначеЕсли Значен="Дополнительно" Тогда
		Форма.ИспользоватьСлой("Дополнительно, Кнопки", 2 );
	ИначеЕсли Значен="РасчСчета" Тогда
		Если Выбран()=0 Тогда
		    Предупреждение( "Выполните запись сведений о фирме:"+РазделительСтрок+
							"перейдите к закладке ""Общие"""+РазделительСтрок+
							"и нажмите кнопку ""Записать""", 5 );
		    СтатусВозврата(0);
		    Возврат;
		КонецЕсли;
		СписокСчетов.УдалитьВсе();
		Спр=СоздатьОбъект("Справочник.БанковскиеСчета");
		Спр.ИспользоватьВладельца(ТекущийЭлемент());
		Спр.ПорядокКодов();
		Спр.ВыбратьЭлементы();
		Пока Спр.ПолучитьЭлемент()=1  Цикл
			Если Спр.ПометкаУдаления()=1 Тогда
			    Продолжить;
			КонецЕсли;
			СписокСчетов.ДобавитьЗначение(Спр.ТекущийЭлемент(), СокрП(Спр.ВидСчета)+ " счет №"+СокрЛП(Спр.Номер)+" в "+СокрЛП(Спр.Банк));
		КонецЦикла;
		Если СписокСчетов.РазмерСписка()=0 Тогда
		    Форма.КнИзменить.Доступность(0);
		    Форма.КнУдалить.Доступность(0);
		Иначе
			СписокСчетов.ТекущаяСтрока(1);
		КонецЕсли;
		Форма.ИспользоватьСлой("РасчСчета, Кнопки ",2);
	КонецЕсли;
КонецПроцедуры

//*****
Процедура ПриОткрытии()
	ПолученныйКонтекст = глРасшифровка;
	Если Выбран()=1 Тогда
		Форма.Закладки.ДобавитьЗначение("Общие","Общие");
		Форма.Закладки.ДобавитьЗначение("Дополнительно","Дополнительно");
		Форма.Закладки.ДобавитьЗначение("РасчСчета","Банковские счета");

		// Справочник "Фирмы" содержит много периодических реквизитов. Если значение такого реквизита
		// вводится в первый раз, то его надо записать на начало года. Для этого редактирование
		// таких реквизитов выполняется через служебные ревизиты диалога.

		// Записываем в реквизиты диалога значения периодических реквизитов справочника
		РеквизитПолноеНаименование=ПолнНаименование;
		РеквизитОфициальноеНаименование=ОфициальноеНаименование;
		РеквизитЮридическийАдрес=ЮридическийАдрес;
		РеквизитПочтовыйАдрес=ПочтовыйАдрес;
		РеквизитРуководитель=Руководитель;
		РеквизитГлБухгалтер=ГлБухгалтер;
		РеквизитКассир=Кассир;
		РеквизитГНИ=ГНИ;

		РеквизитМетодРасчетаСебестоимости=МетодРасчетаСебестоимостиФинансовогоУчета;

		РеквизитМетодОпределенияВыручки=МетодОпределенияВыручки;

	КонецЕсли;
	Форма.ИспользоватьСлой("Основной, Кнопки, ОбщиеСведения ",2);
	Форма.КнопкаПоУмолчанию("Закрыть");
КонецПроцедуры

//----------------------
Процедура ПриЗакрытии()
	Если Закрывать = 0 Тогда
		ПриЗаписиФирмы();
	    СтатусВозврата(0);
	    Закрывать = 1;
	ИначеЕсли Выбран()=1 Тогда
		Спр=СоздатьОбъект("Справочник.БанковскиеСчета");
		Спр.ИспользоватьВладельца(ТекущийЭлемент());
		Спр.ВыбратьЭлементы();
		ЕстьСчет=0;
		Пока Спр.ПолучитьЭлемент()=1  Цикл
			Если Спр.ПометкаУдаления()=1 Тогда
			    Продолжить;
			КонецЕсли;
			ЕстьСчет=1;
			Прервать;
		КонецЦикла;
		Если ЕстьСчет=0 Тогда
		    Предупреждение("Введите хотя бы один банковский счет фирмы!");
		//    СтатусВозврата(0);
		КонецЕсли;
	    ПриЗаписиФирмы();
	    Если ТипЗначенияСтр(ПолученныйКонтекст) = "ГрупповойКонтекст" Тогда
	        ПолученныйКонтекст.ОсновнаяФирма = ПолученныйКонтекст.ОсновнаяФирма;
	        ПолученныйКонтекст.Форма.Обновить();
	    КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//----------------------
Процедура ПриЗаписи()
	Форма.Закладки.УдалитьВсе();
	Форма.Закладки.ДобавитьЗначение("Общие","Общие");
	Форма.Закладки.ДобавитьЗначение("Дополнительно","Дополнительно");
	Форма.Закладки.ДобавитьЗначение("РасчСчета","Банковские счета");

	Форма.ИспользоватьСлой("Основной, Кнопки, ОбщиеСведения ",2);
КонецПроцедуры

//*****
// Печать справок о счетах
Процедура ПечатьСправкиОСчетах( ВидСправки )

	ДатаНачалаКвартала=НачКвартала( РабочаяДата() );
	ДатаНачалаСледПериода=КонКвартала( РабочаяДата() )+1;

	Справка=СоздатьОбъект("Таблица");
	Если ВидСправки = 1 Тогда
	    Справка.ИсходнаяТаблица("Рублевые");
	Иначе
		Справка.ИсходнаяТаблица("Валютные");
	КонецЕсли;

	Справка.ВывестиСекцию("Шапка");

	Спр=СоздатьОбъект("Справочник.БанковскиеСчета");
	Спр.ИспользоватьВладельца(ТекущийЭлемент());
	Спр.ПорядокКодов();
	Спр.ВыбратьЭлементы();
	СчетчикСтрок=0;
	Пока Спр.ПолучитьЭлемент()=1  Цикл
		Если Спр.ПометкаУдаления()=1 Тогда
		    Продолжить;
		КонецЕсли;
		Если ВидСправки = 1 Тогда
			Если Спр.ТипСчета=Перечисление.ТипыБанковскихСчетов.Валютный Тогда
	        	Продолжить;
			КонецЕсли;
	    ИначеЕсли ВидСправки = 2 Тогда
			Если Спр.ТипСчета=Перечисление.ТипыБанковскихСчетов.Рублевый Тогда
	        	Продолжить;
			КонецЕсли;
	    КонецЕсли;

		// В отчет должны попадать счета, у которых дата закрытия счета пустая или
		// лежит в текущем квартале
		Если Число( Спр.ДатаЗакрытияСчета ) > 0 Тогда
			Если (Спр.ДатаЗакрытияСчета < ДатаНачалаКвартала ) Тогда
			    Продолжить;
			КонецЕсли;
		КонецЕсли;

		СчетчикСтрок=СчетчикСтрок+1;
		Справка.ВывестиСекцию( "Строка" );

	КонецЦикла;

	Справка.ВывестиСекцию( "Подвал" );
	Справка.ТолькоПросмотр(1);
	Справка.Опции(0,0,0,0);
	Если ВидСправки = 1 Тогда
		Справка.Показать("Справка о рублевых счетах");
	ИначеЕсли ВидСправки = 2 Тогда
		Справка.Показать("Справка о валютных счетах");
	КонецЕсли;

КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр)
	
	Если ИдентЭлемДиалога = "ОсновнойПодотчОбъект" Тогда
		ФлагСтандОбр = 0;
		
		спрПодотчетныеОбъекты = СоздатьОбъект("Справочник.схПодотчетныеОбъекты");
		спрПодотчетныеОбъекты.ИспользоватьВладельца(ТекущийЭлемент());
		
		Если спрПодотчетныеОбъекты.Выбрать("", "ФормаСписка") = 1 Тогда
			ОсновнойПодотчОбъект = спрПодотчетныеОбъекты.ТекущийЭлемент();
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры	
//----------------------
Форма.ИспользоватьЗакладки(1);
НовыйЭлемент = 0;
Закрывать = 1;
