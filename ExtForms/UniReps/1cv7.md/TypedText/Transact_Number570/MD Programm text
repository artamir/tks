Перем тзДанныеДокумента;
//*******************************************
Процедура ДвиженияПоПродажам(НаборДвижений)
    Перем тзИсточникСерий;
	// таблица продаж содержит, практически
	// все параметры сделки и может использоваться
	// для формирования других движений документов,
	// проверки сертификатов и формирования прочей
	// отчетности
	тзПродажи = НаборДвижений.Получить("Продажи");

	// получение значений реквизитов документа
	// без блокировки соответствующих таблиц
	Если глмРасчетныеДанные
		.ПолучитьДанныеОбъекта(ТекущийДокумент(), 
			1, тзДанныеДокумента) = 0 Тогда
	// не получилось собрать данные о документе			
				СтатусВозврата(0);
				Возврат;
	КонецЕсли;
	
	// данные по движениям по регистру нужны были 
	// на момент определения источника серий для 
	// подбора, в случае подписанных документов
	тзПродажи.УдалитьСтроки();
	
	тзТабЧасть = тзДанныеДокумента
		.Получить("РеквизитТабличнойЧасти");
	
	тзТабЧасть.ВыбратьСтроки();
	Пока тзТабЧасть.ПолучитьСтроку() = 1 Цикл

		тзПродажи.НоваяСтрока();
		тзПродажи.Товар = тзТабЧасть.Товар;
		
		Если ПустоеЗначение(тзИсточникСерий) = 1 Тогда
			тзПродажи.Серия = тзТабЧасть.Серия;
		Иначе
			НомСтр = 0;
			Если тзИсточникСерий.НайтиЗначение(тзТабЧасть.Товар, 
				НомСтр, "Товар") = 0 Тогда
	// на этапе проекта, не будем требовать строго
	// присутствие серий в выборе
			Иначе
				тзПродажи.Серия = тзИсточникСерий
					.ПолучитьЗначение(НомСтр, "Серия");	
			КонецЕсли;	
		КонецЕсли;	
        
		Если (ПустоеЗначение(тзПродажи.Серия) = 1) 
			и (глИспСерииПоУмолч = 1) Тогда
				тзПродажи.Серия = тзПродажи.Товар.схСерияПоУмолчанию;
		КонецЕсли;
				
		тзПродажи.Количество = тзТабЧасть.Количество 
			* тзТабЧасть.Коэффициент;

		тзПродажи.Вес = тзТабЧасть.Товар.ВесТовара 
			* тзПродажи.Количество / 1000;

		тзПродажи.Сумма = тзТабЧасть.Сумма;
        тзПродажи.Производитель = тзТабЧасть.Товар.Произв;
		
	КонецЦикла;
	
    // оказывается, нельзя выполнять эту операцию на 
	// пустой (отсутствие строк) таблице значений
	Если тзПродажи.КоличествоСтрок() > 0 Тогда
	// при проведении документа, блокируются все
	// таблицы, к значениям которых обращались
	// через реквизиты
		тзПродажи.Заполнить(тзДанныеДокумента
			.Получить("РеквизитШапки")
				.ПолучитьЗначение(1, "Клиент"), , , "Клиент");
				
		тзПродажи.Заполнить(тзДанныеДокумента
			.Получить("РеквизитШапки")
				.ПолучитьЗначение(1, "Фирма1"), , , "Фирма");
	КонецЕсли;
	
	тзПродажи.Свернуть("Фирма,Клиент,Товар,Серия,Производитель",
		"Вес,Количество,Себестоимость,Сумма");
	
	// скорректируем итог по сумме продаж документа
	СуммаДокумента = тзПродажи.Итог("Сумма");

	НаборДвижений.Установить("Продажи", тзПродажи);
	
КонецПроцедуры	

//*******************************************
Процедура ОбработкаПроведения(ПараметрПроведения=0)

	// документ для загрузки движений
	// пустой документ - только формирование
	// набора движений
	ТекДок = ПолучитьПустоеЗначение("Документ.ТранспортнаяТранзакция");
		
	Если ПустоеЗначение(СтатусВСД) = 1 Тогда

		СтатусВСД = Перечисление.СтатусыВСД.Проект;
		
	ИначеЕсли СтатусВСД <> Перечисление.СтатусыВСД.Проект Тогда
    // получение текущих (автоудаление - откл) 
	// движений данного документа
		ТекДок = ТекущийДокумент();
		
	КонецЕсли;

	// формирование/загрузка набора движений
	глмКорректировкаЗаписейРегистров.ОтклДвижения = 0;
	глмКорректировкаЗаписейРегистров.ДатаДок = ДатаДок;
	глмКорректировкаЗаписейРегистров.КорректировкаЗаписейРегистров = ТекДок;
	глмКорректировкаЗаписейРегистров.ЗагрузитьНаборДвижений(ТекДок);

	НаборДвижений = глмКорректировкаЗаписейРегистров.НаборДвижений;
	
	// формирование продаж - основная таблица
	// по которой формируются (проверяются) 
	// все остальные
	ДвиженияПоПродажам(НаборДвижений);
    
	// запись движений, контроль остатков,
	// где это необходимо
    СтатусВозврата(глмКорректировкаЗаписейРегистров
		.ЗаписатьНаборДвижений(Контекст));
	
КонецПроцедуры

//*******************************************
Процедура ОбработкаУдаленияПроведения()
	
	Если СтатусВСД <> Перечисление.СтатусыВСД.Проект Тогда

	// снимать с проведения документ можно 
	// только удалив ВСД и переведя накладную 
	// в состояние "Проект"
		глмОбщиеФункции.ОбработатьОшибку("20006", 
			"глмСтатусыВСД", Контекст);
        
		СтатусВозврата(0);

	КонецЕсли;	
	
КонецПроцедуры