Перем ПериодОпросаЗаданий, ОтказовДоВыгрузкиЗадания;
//*******************************************
Функция Тест() Экспорт

	Возврат "Глобальный модуль ""ПланЗаданий"" успешно подключен";

КонецФункции
//*******************************************
Функция ПроверкаПериодаЗадания(
	НачДата, 
	НачЧас, 
	НачМинута, 
	КонДата, 
	КонЧас, 
	КонМинута)
	
	Возврат 1;
	
КонецФункции	
//*******************************************
Функция ВзятьИмяФайлаБлк(		// файл блокировки, для
	//	исключения случаев запуска нового экземпляра до
	//  завершения предыдущего
	) Экспорт

	стрИмяФайла = глмОбщиеФункции.ПолучитьИмяВременногоФайла("lck");
	
	Возврат СтрЗаменить(СтрЗаменить(стрИмяФайла, 
		"\", "\\"), "\\\\", "\\");
	
КонецФункции	
//*******************************************
Функция Статус( 				// проверка текущего 
	//  статуса системы (система с памятью)
	Конт,						// контекст обработки
	стрВыбСтатус				// запрашиваемый статус
	) 
	
	Возврат ?(Конт.стрСтатус = стрВыбСтатус, 1, 0);
	
КонецФункции
//*******************************************
Процедура ВывестиСведенияОВыполнении(Задание, спПараметры)

	// вывод сведений в окно сообщений	
	// шаблон времени
	Состояние("" + ТекущаяДата() + " " 
		+ ТекущееВремя() + " " 
			+ _getPerformanceCounter() 
	// шаблон текущего задания		
				+ " " + Задание + ": " 
					+ спПараметры
						.ВСтрокуСРазделителями());
	
КонецПроцедуры	
//*******************************************
Процедура ЗапуститьНаВыполнение(// выполнить запуск
	//  ранее поставленной в план задачи 
	Конт,
	Задание, 					// текст задачи, инструкции
	спПараметры,                // список параметров
	тзСтатистики                // таблица статистики
	) Экспорт
	
	стрВычисления = "[" + ?(ПустоеЗначение(Конт) = 0, 
		"Конт.", "") + Задание + "(" + спПараметры
			.ВСтрокуСРазделителями() + ")]";
		
    //Сообщить(стрВычисления);
	ВывестиСведенияОВыполнении(Задание, спПараметры);
	//\\
	
	тзСтатистики.НоваяСтрока();
	тзСтатистики.Дата = ТекущаяДата();
	тзСтатистики.Время = ТекущееВремя();
	тзСтатистики.Задание = стрВычисления;
	тзСтатистики.Результат = Шаблон(стрВычисления);
	
	Если тзСтатистики.КоличествоСтрок() 
		> глмТаблицаЗаданий.мРазмерСтатистики Тогда
			тзСтатистики.УдалитьСтроку(1);
	КонецЕсли;	
	
КонецПроцедуры
//*******************************************
Процедура Планировщик(			// планировщик заданий
	Конт,						// контекст обработки
	Хендл, 						// файл блокировки
	тзЗаданий, 					// таблица заданий
	тзСтатистики				// таблица статистики
	) Экспорт

	Если глмБлокировка.Модуль.LockFile(Хендл, 
		1073741823, 0, 1, 0) = 0 Тогда
			Возврат;

	КонецЕсли;		
	
	НС = 1;
	Пока НС <= тзЗаданий.КоличествоСтрок() Цикл
		
		тзЗаданий.ПолучитьСтрокуПоНомеру(НС);
        
		Если Шаблон("[" + тзЗаданий.Условие 
			+ "]") <> "1" Тогда
				
			Если тзЗаданий.Однократно = 1 Тогда
				тзЗаданий.Отказов = тзЗаданий.Отказов + 1;
				
				Если тзЗаданий.Отказов = ОтказовДоВыгрузкиЗадания Тогда
					Сообщить("Ошибка обработки задания """ 
						+ тзЗаданий.Задание 
							+ """ - ошибка доступа", "!");

					тзСтатистики.НоваяСтрока();
					тзСтатистики.Дата = ТекущаяДата();
					тзСтатистики.Время = ТекущееВремя();
					тзСтатистики.Задание = тзЗаданий.Задание;
					тзСтатистики.Результат = -1;

					Если тзСтатистики.КоличествоСтрок() 
						> глмТаблицаЗаданий.мРазмерСтатистики Тогда
							тзСтатистики.УдалитьСтроку(1);
					КонецЕсли;	
											
					тзЗаданий.УдалитьСтроку(НС);
					
					Продолжить;
					
				КонецЕсли;	
			КонецЕсли;
			НС = НС + 1;

		ИначеЕсли тзЗаданий.Однократно = 1 Тогда
			
			Если тзЗаданий.Задержек > 0 Тогда
				тзЗаданий.Задержек = тзЗаданий.Задержек - 1;
				НС = НС + 1;
				Продолжить;				
			КонецЕсли;	
			
			Задание = тзЗаданий.Задание;
			Параметры = тзЗаданий.Параметры;
			
			тзЗаданий.УдалитьСтроку(НС);
			
			ЗапуститьНаВыполнение(Конт, Задание, 
				Параметры, тзСтатистики);

		Иначе
			тзЗаданий.Таймер = тзЗаданий.Таймер - 1;
			Если тзЗаданий.Таймер = 0 Тогда
				
				Задание = тзЗаданий.Задание;
				Параметры = тзЗаданий.Параметры;
				
				тзЗаданий.Таймер = тзЗаданий.Период;
				
				ЗапуститьНаВыполнение(Конт, Задание, 
					Параметры, тзСтатистики);

			КонецЕсли;
			НС = НС + 1;
			
		КонецЕсли;
		
	КонецЦикла;	

	глмБлокировка.Модуль.UnlockFile(Хендл,
		1073741823, 0, 1, 0);
		
КонецПроцедуры	
//*******************************************
Процедура ЗапуститьПланировщик(РасшФормы) Экспорт
	
	РасшФормы.ОбработкаОжидания("Планировщик", 
		ПериодОпросаЗаданий);
	
КонецПроцедуры	
//*******************************************
Процедура ОстановитьПланировщик(РасшФормы) Экспорт
	
    РасшФормы.ОбработкаОжидания("Планировщик", 0);
		
КонецПроцедуры	
//*******************************************
Процедура СнятьПаузу(РасшФормы) Экспорт
	
	РасшФормы.ОбработкаОжидания("СнятьПаузу", 0);

	РасшФормы.ОбработкаОжидания(
		"Планировщик", ПериодОпросаЗаданий);
	
КонецПроцедуры
//*******************************************
Функция ВзятьПаузу(РасшФормы, Время = 1000) Экспорт
	
	РасшФормы.ОбработкаОжидания(
		"Планировщик", 0);
	
	РасшФормы.ОбработкаОжидания("СнятьПаузу", Время);
	
	Возврат 1;
	
КонецФункции
//*******************************************
ПериодОпросаЗаданий = 5;
ОтказовДоВыгрузкиЗадания = 10000;
