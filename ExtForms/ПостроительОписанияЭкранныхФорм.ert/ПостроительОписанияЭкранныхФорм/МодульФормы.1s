Перем хмлПоток, Браузер;
//*******************************************
Процедура ПриНачалеВыбораЗначения(Элемент, Продолжать) // предопределенная процедура
	Перем Каталог, ИмяФайла;
		
	Если Лев(Элемент,6) = "стрИмя" Тогда
		Выбор = ФС.ВыбратьКаталог(Каталог, 60);
		Если Выбор=1 Тогда
			глУстановПараметр(Элемент, """" 
				+ СокрЛП(Каталог) + """");
		КонецЕсли;
	ИначеЕсли ТипЗначенияСтр(Элемент) = "Строка" Тогда		
		Выбор = ФС.ВыбратьФайл(0, ИмяФайла, Каталог,,"(*.ert)|*.ert");
		Если Выбор=1 Тогда
			глУстановПараметр(Элемент, """" 
				+ СокрЛП(Каталог + ИмяФайла) + """");
		КонецЕсли;
	КонецЕсли
КонецПроцедуры
//*******************************************
Процедура УстановитьВидимостьЭлементовДиалога()
	
КонецПроцедуры	
//*******************************************
Процедура ОбновитьПолнИдентификатор()
	
	ВыбОбъект.УдалитьВсе();
	
	Выборка = глмМетаданные.ВыбратьОбъекты(глмМетаданные
		.ПолучитьПустойИд());
	
	Выборка.ВыбратьСтроки();
	Пока Выборка.ПолучитьСтроку() = 1 Цикл
		
		Если глмМетаданные.ЭтоКаталог(Выборка.Ид) = 0 Тогда
			ВыбОбъект.ДобавитьЗначение(Выборка.Ид,
				глмМетаданные.Ид2Тип(Выборка.Ид));
		КонецЕсли;
	КонецЦикла;
	
	ВыбОбъект.ДобавитьЗначение("ВнешняяОбработка");
	
КонецПроцедуры
//*******************************************
Процедура РеквизитВверх()
	
	ТекСтр = тзСортировки.ТекущаяСтрока();
	
	ТекИмя = тзСортировки.Имя;
	
	НовСтр = ?(ТекСтр = 1, тзСортировки
		.КоличествоСтрок(), ТекСтр - 1);
	
	Квадрант = тзСортировки.Квадрант;
	Проекция = тзСортировки.Проекция;
	тзСортировки.Квадрант = тзСортировки
		.ПолучитьЗначение(НовСтр, "Квадрант");
	тзСортировки.Проекция = тзСортировки
		.ПолучитьЗначение(НовСтр, "Проекция");
	тзСортировки.ПолучитьСтрокуПоНомеру(НовСтр);
	тзСортировки.Квадрант = Квадрант;
	тзСортировки.Проекция = Проекция;
	
	тзСортировки
		.Сортировать("Квадрант,Проекция");
	
	НС = 0; Если тзСортировки
		.НайтиЗначение(ТекИмя, НС, "Имя") = 1 Тогда	
			тзСортировки.ТекущаяСтрока(НС)
	КонецЕсли;
		
КонецПроцедуры
//*******************************************
Процедура РеквизитВниз()
	
	ТекСтр = тзСортировки.ТекущаяСтрока();
	
	ТекИмя = тзСортировки.Имя;

	НовСтр = ?(ТекСтр = тзСортировки
		.КоличествоСтрок(), 1, ТекСтр + 1);
	
	Квадрант = тзСортировки.Квадрант;
	Проекция = тзСортировки.Проекция;
	тзСортировки.Квадрант = тзСортировки
		.ПолучитьЗначение(НовСтр, "Квадрант");
	тзСортировки.Проекция = тзСортировки
		.ПолучитьЗначение(НовСтр, "Проекция");
	тзСортировки.ПолучитьСтрокуПоНомеру(НовСтр);
	тзСортировки.Квадрант = Квадрант;
	тзСортировки.Проекция = Проекция;
	
	тзСортировки
		.Сортировать("Квадрант,Проекция");
	
	НС = 0; Если тзСортировки
		.НайтиЗначение(ТекИмя, НС, "Имя") = 1 Тогда	
			тзСортировки.ТекущаяСтрока(НС)
	КонецЕсли;
	
КонецПроцедуры
//*******************************************
Функция КаталогОписания(Объект)
	
	КаталогОписания = СокрЛП(стрИмяКаталога);
	
	Если глмМетаданные.ВИерархии(Объект, 
		глмМетаданные.Тип2Ид("Справочник")) = 1 Тогда
			КаталогОписания = КаталогОписания 
				+ "\Subconto\Subconto_Number" 
					+ глмМетаданные.Ид2КодТаблицыИБ(Объект)
						+ "\WorkBook";
					
	ИначеЕсли глмМетаданные.ВИерархии(Объект, 
		глмМетаданные.Тип2Ид("Документ")) = 1 Тогда
			КаталогОписания = КаталогОписания 
				+ "\Document\Document_Number" 
					+ глмМетаданные.Ид2КодТаблицыИБ(Объект)
						+ "\WorkBook";				
	Иначе
		
	КонецЕсли;	
	
	Возврат КаталогОписания;
	
КонецФункции	
//*******************************************
Процедура ЗаписатьНастройку()
	
	хмлСортировка = глмОбщиеФункции.ВыгрузитьТаблицуВХМЛ(тзСортировки);
	глмХМЛ.ВывестиДокументВФайл(хмлСортировка, 
		КаталогОписания(ВыбОбъект) + "\Sort Stream.xml");
	
КонецПроцедуры
//*******************************************
// прочитать (просто) stream - это может быть не только конфигурация диалога,
// но и любые другие данные в этом формате, например, внутреннее значение (Ид)
Функция ПрочитатьПоток(Объект)
	Перем хмлПарсер, хмлНаборСхем, хмлКорень;
	
	глмХМЛ.СоздатьЭлементДокумента(хмлПарсер, хмлНаборСхем, 
		хмлКорень, "ROOT", "windows-1251");
	
	КаталогОписания = КаталогОписания(Объект);
	
	Если КаталогОписания <> "" Тогда
		
		ИмяФайла = КаталогОписания + "\Dialog Stream";
		ФС.КопироватьФайл(ИмяФайла, ИмяФайла + ".txt", 1);
		
		Текст = СоздатьОбъект("Текст");
		Текст.Открыть(ИмяФайла + ".txt");
		
		хмлУзел = хмлКорень;
		хмлАттр = "";

		ТекОбъект = 0;
		ТекЗнач = 0;
		
		СимволКавычки = 0;
		
		Для НомСтр = 1 По Текст.КоличествоСтрок() Цикл
			
			ТекСтр = Текст.ПолучитьСтроку(НомСтр);
			Для НомКол = 1 По СтрДлина(ТекСтр) Цикл
 				
				ТекСимв = Сред(ТекСтр, НомКол, 1);
				Если ТекСимв = "{" Тогда 
					ТекОбъект = ТекОбъект + 1;
					Если хмлАттр <> "" Тогда
						хмлАттр.text = СтрЗаменить(хмлАттр.text, "%", " ");
						хмлАттр.text = ?(хмлАттр.text="""", "", хмлАттр.text);
					КонецЕсли;
					хмлАттр = "";
					СимволКавычки = 0;
					хмлУзел = хмлУзел.appendChild(хмлПарсер
						.createElement("Obj" + ТекОбъект));
					
				ИначеЕсли ТекСимв = "}" Тогда 
					Если хмлАттр <> "" Тогда
						хмлАттр.text = СтрЗаменить(хмлАттр.text, "%", " "); 
						хмлАттр.text = ?(хмлАттр.text="""", "", хмлАттр.text);
					КонецЕсли;	
					хмлАттр = "";
					СимволКавычки = 0;
					хмлУзел = хмлУзел.parentNode;
					
				ИначеЕсли ТекСимв = "," Тогда
					Если хмлАттр <> "" Тогда
						хмлАттр.text = СтрЗаменить(хмлАттр.text, "%", " "); 
						хмлАттр.text = ?(хмлАттр.text="""", "", хмлАттр.text);
					КонецЕсли;	
					хмлАттр = "";
					СимволКавычки = 0;
					
				Иначе
					Если хмлАттр = "" Тогда
						ТекЗнач = ТекЗнач + 1;
						хмлАттр = хмлУзел.appendChild(хмлПарсер
							.createElement("Val" + ТекЗнач));
					КонецЕсли;
						
					Если ТекСимв = """" Тогда
						Если СимволКавычки = 0 Тогда
							СимволКавычки = 1;
							Продолжить;
						Иначе
							СимволКавычки = 0;
						КонецЕсли;	
					Иначе
						СимволКавычки = 0;
						
					КонецЕсли;	
					
					Попытка
						хмлАттр.text = хмлАттр.text 
							+ ?(ТекСимв=" ", "%", ТекСимв);
					Исключение
							
					КонецПопытки;		
				КонецЕсли;
				
			КонецЦикла;	
			
		КонецЦикла;	
		
		ФС.УдалитьФайл(ИмяФайла + ".txt");
		
	Иначе
		
	КонецЕсли;

	Возврат хмлПарсер;	
	
КонецФункции
//*******************************************
Процедура КвадрантТаблицы(тзРеквизиты, Ширина, Высота)
	
	Х = тзРеквизиты.х;// + тзРеквизиты.Ширина / 4;
	У = тзРеквизиты.у + тзРеквизиты.Высота / 2;
	
	Если У <= Высота * Х / Ширина Тогда
	//Если тзРеквизиты.х <= Ширина Тогда
		Если У <= Высота - Высота * Х / Ширина Тогда
		//Если тзРеквизиты.у <= Высота Тогда
			тзРеквизиты.Квадрант = 1;
			х1 = (У - Ширина / Высота * Х)
				/ (Высота / Ширина - Ширина / Высота);
			тзРеквизиты.Проекция = х1 * х1 + (Высота / Ширина * х1) 
				* (Высота / Ширина * х1);
		Иначе
			тзРеквизиты.Квадрант = 2; 
			//тзРеквизиты.Квадрант = 4;
			х1 = (Ширина / Высота * Х 
				+ У + Высота) 
					/ (Ширина / Высота - Высота / Ширина);
			тзРеквизиты.Проекция = х1 * х1 + (Высота - Высота 
				/ Ширина * х1) * (Высота - Высота / Ширина * х1)
		КонецЕсли;	
	Иначе
		Если У <= Высота - Высота * Х / Ширина Тогда
		//Если тзРеквизиты.у <= Высота Тогда
			тзРеквизиты.Квадрант = 4; 
			//тзРеквизиты.Квадрант = 2;
			х1 = (Ширина / Высота * Х 
				+ У + Высота) 
					/ (Ширина / Высота - Высота / Ширина);
			тзРеквизиты.Проекция = х1 * х1 + (Высота - Высота 
				/ Ширина * х1) * (Высота - Высота / Ширина * х1)
		Иначе
			тзРеквизиты.Квадрант = 3;
			х1 = (У - Ширина / Высота * Х)
				/ (Высота / Ширина - Ширина / Высота);
			тзРеквизиты.Проекция = х1 * х1 + (Высота / Ширина * х1) 
				* (Высота / Ширина * х1);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры
//*******************************************
Процедура ВывестиРеквизитНаФорму(хмлУзел, стрКод, х0, у0, к, Ширина, Высота, тзРеквизиты)
	
	Тип = хмлУзел.childNodes(1).text;
	
	Если Тип = "STATIC" Тогда
		ТекВыр = хмлУзел.childNodes(11).text;
		ТекЗнач = ?(ТекВыр <> "", глмОбщиеФункции
			.ВычВырВКонтФормы(ВыбСсылка, ТекВыр), 
				хмлУзел.childNodes(0).text);
		ТекЗнач = СтрЗаменить(ТекЗнач, """", "'");
		ТекЗнач = ?(ТекЗнач = "", "<" 
			+ хмлУзел.childNodes(12).text 
				+ ">", ТекЗнач);
		// формула здесь слишком простая, нужно вычислять
		// по реальной ширине каждого символа, заглавные - шире,
		// спецсимволы - уже...
		ТекЗнач = Лев(ТекЗнач, Цел(Число(хмлУзел.childNodes(5).text)/4));		
		стрКод = стрКод 
			+"					ctx.fillStyle = ""#000"";
			|					ctx.font = """ + Цел(8 * к) + "px sans-serif"";
			|					ctx.fillText(""" + глмОбщиеФункции
				.ПреобразоватьСтрокуВУТФ8(ТекЗнач) 
			+ """, " + Число(Цел(Число(хмлУзел.childNodes(3).text) * к) + х0)  
			+ ", " + Число(Цел((Число(хмлУзел.childNodes(4).text) + 9) * к) + у0) + ");
		    |";
		
	ИначеЕсли Тип = "BUTTON" Тогда
		стрКод = стрКод 
			+"					ctx.strokeStyle = ""#000"";
            |					ctx.strokeRect(" 
			+ Число(Цел(Число(хмлУзел.childNodes(3).text) * к) + х0)
			+ ", " + Число(Цел(Число(хмлУзел.childNodes(4).text) * к) + у0) 
			+ ", " + Цел(Число(хмлУзел.childNodes(5).text) * к) 
			+ ", " + Цел(Число(хмлУзел.childNodes(6).text) * к) + ");
			|					ctx.fillStyle = ""#000"";
			|					ctx.font = """ + Цел(8 * к) + "px sans-serif"";
			|					ctx.fillText(""" + глмОбщиеФункции
				.ПреобразоватьСтрокуВУТФ8(хмлУзел.childNodes(0).text) 
			+ """, " + Число(Цел(Число(хмлУзел.childNodes(3).text) * к) + х0)  
			+ ", " + Число(Цел(Число(хмлУзел.childNodes(4).text) * к) + у0 + 9) + ");
		    |";

	ИначеЕсли Тип = "1CGROUPBOX" Тогда
		стрКод = стрКод 
			+"					ctx.strokeStyle = ""#000"";
            |					ctx.strokeRect(" 
			+ Число(Цел(Число(хмлУзел.childNodes(3).text) * к) + х0)
			+ ", " + Число(Цел((Число(хмлУзел.childNodes(4).text) + 5) * к)
			+ у0)//у0 - Число(хмлУзел.childNodes(6).text)) 
			+ ", " + Цел(Число(хмлУзел.childNodes(5).text) * к) 
			+ ", " 
			+ Число(Цел((Число(хмлУзел.childNodes(6).text) - 5) * к)) + ");
		    |";
    
	ИначеЕсли Тип = "CHECKBOX" Тогда
		стрКод = стрКод 
			+"					ctx.fillStyle = ""white"";
			|					ctx.fillRect(" 
			+ Число(Цел(Число(хмлУзел.childNodes(3).text) * к) + х0)
			+ ", " + Число(Цел((Число(хмлУзел.childNodes(4).text) + 2) * к) + у0) 
			+ ", 9, 9);
			|					ctx.fillStyle = ""#000"";
			|					ctx.font = """ + Цел(8 * к) + "px sans-serif"";
			|					ctx.fillText(""" + глмОбщиеФункции
				.ПреобразоватьСтрокуВУТФ8(хмлУзел.childNodes(0).text) 
			+ """, " + Число(Цел((Число(хмлУзел.childNodes(3).text) + 11) * к) + х0)  
			+ ", " + Число(Цел((Число(хмлУзел.childNodes(4).text) + 9) * к) + у0) + ");
		    |";			
	
	Иначе
		ТекВыр = хмлУзел.childNodes(12).text;
		ТекЗнач = ?((ТекВыр <> "") И (Тип <> "browse"), глмОбщиеФункции
			.ВычВырВКонтФормы(ВыбСсылка, ТекВыр), "");
		ТекЗнач = СтрЗаменить(ТекЗнач, """", "'");
		ТекЗнач = Лев(ТекЗнач, Цел(Число(хмлУзел.childNodes(5).text)/4));		
		стрКод = стрКод 
			+"					ctx.fillStyle = ""white"";
			|					ctx.fillRect(" 
			+ Число(Цел(Число(хмлУзел.childNodes(3).text) * к) + х0)
			+ ", " + Число(Цел(Число(хмлУзел.childNodes(4).text) * к) + у0) 
			+ ", " + Цел(Число(хмлУзел.childNodes(5).text) * к) 
			+ ", " + Цел(Число(хмлУзел.childNodes(6).text) * к) + ");
			|					ctx.fillStyle = ""#000"";
			|					ctx.font = """ + Цел(8 * к) + "px sans-serif"";
			|					ctx.fillText(""" + глмОбщиеФункции
				.ПреобразоватьСтрокуВУТФ8(ТекЗнач) 
			+ """, " + Число(Цел(Число(хмлУзел.childNodes(3).text) * к) + х0)  
			+ ", " + Число(Цел((Число(хмлУзел.childNodes(4).text) + 9) * к) + у0) + ");
			|";
	    			
	КонецЕсли;
	
	ТекВыр = хмлУзел.childNodes(12).text;

	Если (ТекВыр <> "")
//		И ((Тип = "CHECKBOX") ИЛИ (Тип = "TABLE")
//		ИЛИ (Тип = "1CEDIT") ИЛИ (Тип = "BMASKED")) 
			Тогда	
        
		тзРеквизиты.НоваяСтрока();
		тзРеквизиты.Имя = ТекВыр;
			
		Попытка
			Ид = глмМетаданные.Ссылка2Ид(ВыбСсылка);
			
			Реквизит = глмМетаданные.ВыбратьРеквизиты(Ид, "", "", ТекВыр);
			Реквизит.ПолучитьСтрокуПоНомеру(1);					
//
//			ВыбСв_ва = глмМетаданные.ВыбратьСвойстваРеквизита(Реквизит, Ид)	
			тзРеквизиты.Синоним = глмМетаданные
				.СвойствоРеквизита(Реквизит, "Синоним", Ид);
			тзРеквизиты.Описание = глмМетаданные
				.СвойствоРеквизита(Реквизит, "Комментарий", Ид); 
			
			Если глмМетаданные.мПримитивныеТипы
				.Принадлежит(глмМетаданные.СвойствоРеквизита(Реквизит, 
					"Тип", Ид)) = 1 Тогда
						тзРеквизиты.Тип = глмМетаданные
							.СвойствоРеквизита(Реквизит, 
								"Тип", Ид) + "(" 
								+ глмМетаданные.СвойствоРеквизита(Реквизит, 
								"Длина", Ид) + "," 
								+ глмМетаданные.СвойствоРеквизита(Реквизит, 
								"Точность", Ид) + ")";
			Иначе
				Вид = СокрЛП(глмМетаданные.СвойствоРеквизита(Реквизит, 
					"Вид", Ид));				
				тзРеквизиты.Тип = глмМетаданные
					.СвойствоРеквизита(Реквизит, "Тип", Ид) 
						+ ?(Вид="", "", ".") + Вид;
			КонецЕсли;
		
		Исключение
//		    Возврат;
			
		КонецПопытки;	
				
		тзРеквизиты.х = Число(хмлУзел.childNodes(3).text);
		тзРеквизиты.у = Число(хмлУзел.childNodes(4).text);
		тзРеквизиты.Ширина = Число(хмлУзел.childNodes(5).text);
		тзРеквизиты.Высота = Число(хмлУзел.childNodes(6).text);
		тзРеквизиты.НомСтр = тзРеквизиты.НомерСтроки;
		//
		НС=0; Если тзСортировки.НайтиЗначение(тзРеквизиты.Имя, НС, ) = 1 Тогда
			тзРеквизиты.Квадрант = тзСортировки.ПолучитьЗначение(НС, "Квадрант"); 
			тзРеквизиты.Проекция = тзСортировки.ПолучитьЗначение(НС, "Проекция");
		Иначе	
			КвадрантТаблицы(тзРеквизиты, Ширина, Высота);
		КонецЕсли;	
		//тзРеквизиты.НомТабл = 
	КонецЕсли;

КонецПроцедуры
//*******************************************
Функция КодСтраницыОписанияДиалога(хмлПарсер, Слои="", тзРеквизиты);
    
	х0 = 40; у0 = 40; к = 1.1;
	
	стрКод = 	"<!DOCTYPE HTML>
				|<html>
				|    <head>
				|        <title>Dialog Stream</title>
				|        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge""/>
				//|        <meta charset=windows-1251/>
				|        	<script>
				|				function draw() 
               	|				   {
				|					var obj_canvas = document.getElementById(""c"");
				|					var ctx = obj_canvas.getContext(""2d"");
				|					ctx.strokeRect(5, 5, 1395, 695);
				|";
    
	хмлФорма = хмлПарсер.childNodes(1).childNodes(1)
		.childNodes(1).childNodes(1);
	
	Ширина = Число(хмлФорма.childNodes(14).text); 
	Высота = Число(хмлФорма.childNodes(15).text);
	
	стрКод = стрКод 
				+"					ctx.fillStyle = ""#C2C2BD"";
				|					ctx.fillRect(" + х0 + ", " + у0 + ", " 
				+ Число(Цел(Ширина * к)) + ", " 
				+ Число(Цел(Высота * к)) + ");
				|";
    Если глмМетаданные.ВИерархии(ВыбОбъект
		.ПолучитьЗначение(ВыбОбъект.ТекущаяСтрока()), 
			глмМетаданные.Тип2Ид("Документ")) = 0 Тогда
				хмлРеквизиты = хмлПарсер.childNodes(1).childNodes(1)
					.childNodes(2); 
	Иначе				
		хмлТабЧасть = хмлПарсер.childNodes(1).childNodes(1)
			.childNodes(2).childNodes(3).childNodes(1);
		
		хмлСлойРеквизита = хмлТабЧасть.childNodes(41);
		Если СтрЧислоВхождений(Слои, хмлСлойРеквизита.text) > 0 Тогда
			
			хмлТабЧасть.childNodes(12).text = "ТабЧасть";		
	
			ВывестиРеквизитНаФорму(хмлТабЧасть, стрКод, 
				х0, у0, к, Ширина, Высота, тзРеквизиты);
				
		КонецЕсли;		
		
		хмлРеквизиты = хмлПарсер.childNodes(1).childNodes(1)
			.childNodes(3);
	КонецЕсли;				
		
	Для НомПП = 1 По хмлРеквизиты.childNodes.length - 1 Цикл
		
		хмлРеквизит = хмлРеквизиты.childNodes(НомПП);
		
		хмлСлойРеквизита = хмлРеквизит.childNodes(41);
		Если СтрЧислоВхождений(Слои, хмлСлойРеквизита.text) > 0 Тогда
			
			//стрКод = стрКод 
			//	+"					ctx.fillStyle = ""white"";
			//	|					ctx.fillRect(" + хмлРеквизит.childNodes(3).text 
			//		+ ", " + хмлРеквизит.childNodes(4).text + ", " 
			//			+ хмлРеквизит.childNodes(5).text + ", " + хмлРеквизит.childNodes(6).text + ");
			//	|";
			
			ВывестиРеквизитНаФорму(хмлРеквизит, стрКод, 
				х0, у0, к, Ширина, Высота, тзРеквизиты);
			
		КонецЕсли;	
		
	КонецЦикла;	
    
	тзРеквизиты.Выгрузить(тзСортировки,,,"Имя,Квадрант,Проекция");
	тзСортировки.Сортировать("Квадрант, Проекция");
	
	НомТабл = 1;
	Для НомКв = 1 По 4 Цикл
		тзМетки = глмТаблицыЗначений.ВыбратьПоЗначению(тзРеквизиты, "Квадрант", НомКв);
		Если ТипЗначения(тзМетки) <> 100 Тогда
			Продолжить;
		КонецЕсли;	
		тзРеквизиты.Сортировать("НомСтр");
		Если НомКв = 1 Тогда
			тзМетки.Сортировать("Проекция"); 
			тзМетки.ВыбратьСтроки();
			Пока тзМетки.ПолучитьСтроку() = 1 Цикл
				тзРеквизиты.ПолучитьСтрокуПоНомеру(тзМетки.НомСтр);
				тзРеквизиты.НомТабл = НомТабл;
				НомТабл = НомТабл + 1;
				стрКод = стрКод 
					+"					ctx.beginPath();
					|					ctx.moveTo(" + (Цел(тзРеквизиты.х * к) + х0)
					+ ", " + (Цел(тзРеквизиты.у * к) + у0) + ");  
					|					ctx.lineTo(" + (Цел(Ширина 
					/ тзМетки.КоличествоСтрок() 
					* (тзМетки.НомерСтроки - 1)) + х0 - 20) + ", " + 20 + ");  
					|					ctx.lineWidth = ""0.5"";
					|					ctx.strokeStyle = ""red"";
					|					ctx.stroke();
					|					ctx.fillStyle = ""#000"";
					|					ctx.font = """ + Цел(8 * к) + "px sans-serif"";
					|					ctx.fillText(""" + тзРеквизиты.НомТабл	+ "."", " 
					+ (Цел(Ширина 
					/ тзМетки.КоличествоСтрок() 
					* (тзМетки.НомерСтроки - 1)) + х0 - 20) + ", " + 20 + ");
					|";

			КонецЦикла;	
		ИначеЕсли НомКв = 2 Тогда
			тзМетки.Сортировать("Проекция"); 
			тзМетки.ВыбратьСтроки();
			Пока тзМетки.ПолучитьСтроку() = 1 Цикл
				тзРеквизиты.ПолучитьСтрокуПоНомеру(тзМетки.НомСтр);
				тзРеквизиты.НомТабл = НомТабл;
				НомТабл = НомТабл + 1;
				стрКод = стрКод 
					+"					ctx.beginPath();
					|					ctx.moveTo(" + (Цел(тзРеквизиты.х * к) + х0)
					+ ", " + (Цел(тзРеквизиты.у * к) + у0) + ");  
					|					ctx.lineTo(" + (Цел(Ширина * к) + х0 + 20)
					+ ", " + (Цел(Высота * к / тзМетки.КоличествоСтрок() 
					* (тзМетки.НомерСтроки - 1)) + у0 - 20) + ");  
					|					ctx.lineWidth = ""0.5"";
					|					ctx.strokeStyle = ""red"";
					|					ctx.stroke();
					|					ctx.fillStyle = ""#000"";
					|					ctx.font = """ + Цел(8 * к) + "px sans-serif"";
					|					ctx.fillText(""" + тзРеквизиты.НомТабл	+ "."", " 
					+ (Цел(Ширина * к) + х0 + 20)
					+ ", " + (Цел(Высота * к / тзМетки.КоличествоСтрок() 
					* (тзМетки.НомерСтроки - 1)) + у0 - 20) + ");
					|";

			КонецЦикла;	
		ИначеЕсли НомКв = 3 Тогда
			тзМетки.Сортировать("Проекция"); 
			тзМетки.ВыбратьСтроки();
			Пока тзМетки.ПолучитьСтроку() = 1 Цикл
				тзРеквизиты.ПолучитьСтрокуПоНомеру(тзМетки.НомСтр);
				тзРеквизиты.НомТабл = НомТабл;
				НомТабл = НомТабл + 1;
				стрКод = стрКод 
					+"					ctx.beginPath();
					|					ctx.moveTo(" + (Цел(тзРеквизиты.х * к) + х0)
					+ ", " + (Цел(тзРеквизиты.у * к) + у0) + ");  
					|					ctx.lineTo(" + (Ширина * к - Цел(Ширина 
					/ тзМетки.КоличествоСтрок() 
					* (тзМетки.НомерСтроки - 1)) + у0 + 20) + ", " 
					+ (Цел(Высота * к) + у0 + 20) + ");  
					|					ctx.lineWidth = ""0.5"";
					|					ctx.strokeStyle = ""red"";
					|					ctx.stroke();
					|					ctx.fillStyle = ""#000"";
					|					ctx.font = """ + Цел(8 * к) + "px sans-serif"";
					|					ctx.fillText(""" + тзРеквизиты.НомТабл	+ "."", " 
					+ (Ширина * к - Цел(Ширина 
					/ тзМетки.КоличествоСтрок() 
					* (тзМетки.НомерСтроки - 1)) + у0 + 20) + ", " 
					+ (Цел((Высота + 8) * к) + у0 + 20) + ");
					|";

			КонецЦикла;	
		ИначеЕсли НомКв = 4 Тогда
			тзМетки.Сортировать("Проекция-"); 
			тзМетки.ВыбратьСтроки();
			Пока тзМетки.ПолучитьСтроку() = 1 Цикл
				тзРеквизиты.ПолучитьСтрокуПоНомеру(тзМетки.НомСтр);
				тзРеквизиты.НомТабл = НомТабл;
				НомТабл = НомТабл + 1;
				стрКод = стрКод 
					+"					ctx.beginPath();
					|					ctx.moveTo(" + (Цел(тзРеквизиты.х * к) + х0)
					+ ", " + (Цел(тзРеквизиты.у * к) + у0) + ");  
					|					ctx.lineTo(" + 20
					+ ", " + (Высота - Цел(Высота * к / тзМетки.КоличествоСтрок() 
					* (тзМетки.НомерСтроки - 2)) + у0) + ");  
					|					ctx.lineWidth = ""0.5"";
					|					ctx.strokeStyle = ""red"";
					|					ctx.stroke();
					|					ctx.fillStyle = ""#000"";
					|					ctx.font = """ + Цел(8 * к) + "px sans-serif"";
					|					ctx.fillText(""" + тзРеквизиты.НомТабл	+ "."", " 
					+ 20
					+ ", " + (Высота - Цел(Высота * к / тзМетки.КоличествоСтрок() 
					* (тзМетки.НомерСтроки - 2)) + у0) + ");
					|";
					
			КонецЦикла;		
		КонецЕсли;	
	КонецЦикла;	
	
    стрКод = стрКод 
				+"				   }
				|			</script>
				|   </head> 
 				|   <body onload=""draw();"">
 				|       <canvas id=""c"" width=""" 
 				+ (Ширина + 140) + """ height=""" 
 				+ (Высота + 120) + """></canvas>
				|       <table border=""1"">
				|";
	
	тзРеквизиты.Сортировать("НомТабл");
	Пока тзРеквизиты.КоличествоКолонок() > 
		тзРеквизиты.ПолучитьПараметрыКолонки("НомТабл") Цикл
			тзРеквизиты.УдалитьКолонку(тзРеквизиты.КоличествоКолонок());
	КонецЦикла;
		
	стрКод = стрКод 
				+ "           <tr>
				|";

	Для НомКол = 1 По тзРеквизиты.КоличествоКолонок() Цикл
		стрКод = стрКод
				+"              <th>" 
				+ глмОбщиеФункции.ПреобразоватьСтрокуВУТФ8(тзРеквизиты
					.ПолучитьПараметрыКолонки(НомКол)) + "</th>
				|";
				
	КонецЦикла;			

	стрКод = стрКод
				+"           </tr>
                |";
				
	Для НомСтр = 1 По тзРеквизиты.КоличествоСтрок() Цикл

		стрКод = стрКод
				+"           <tr>
                |";
				
		Для НомКол = 1 По тзРеквизиты.КоличествоКолонок() Цикл
			стрКод = стрКод
				+"              <td>" 
				+ глмОбщиеФункции.ПреобразоватьСтрокуВУТФ8(тзРеквизиты
					.ПолучитьЗначение(НомСтр, НомКол)) + "</td>
				|";
					
		КонецЦикла;			

		стрКод = стрКод
				+"           </tr>
                |";
				
	КонецЦикла;
				
 	стрКод = стрКод 
				+"      </table>
 				|   </body>
				|</html>		
				|";
	
	Возврат стрКод;
	
КонецФункции
//*******************************************
Процедура ПриОткрытии()
	
	ОчиститьОкноСообщений();
	
	ОбновитьПолнИдентификатор()
	
КонецПроцедуры
//*******************************************
Процедура ПослеОткрытия()
	
    Браузер=СоздатьОбъект("АктивИкс");
    Браузер.УстановитьАтрибут(Форма,"axBrowser"); 
	Браузер.СоздатьЭУ("WEBKITX.WebKitXCtrl.1");
	
КонецПроцедуры	
//*******************************************
Процедура ПриВыбореОбъекта()
	Перем хмлСортировка;
	
	хмлПоток = ПрочитатьПоток(ВыбОбъект
		.ПолучитьЗначение(ВыбОбъект
			.ТекущаяСтрока()));
			
	глмХМЛ.ВывестиДокументВФайл(хмлПоток, 
		КаталогИБ() + "DialogStream.xml");
    
	хмлФорма = хмлПоток.childNodes(1).childNodes(1)
		.childNodes(1).childNodes(1);

	хмлСлои = хмлФорма.childNodes(28);
	
	//сзСлои = СоздатьОбъект("СписокЗначений");
	сзСлои.УдалитьВсе();
	Для НомПП = 1 По хмлСлои.childNodes.length - 1 Цикл
		хмлСлой = хмлСлои.childNodes(НомПП).childNodes(0);
		
		сзСлои.ДобавитьЗначение(хмлСлой.text);	
	КонецЦикла;
	
	Тип = "";
	ИмяТипа = ВыбОбъект.ПолучитьЗначение(ВыбОбъект
		.ТекущаяСтрока(), Тип);
	
	Если ИмяТипа = "ВнешняяОбработка" Тогда	
		Форма.ВыбСсылка.НазначитьТип("Строка");
	Иначе	
		Форма.ВыбСсылка.НазначитьТип(Тип);
	КонецЕсли;	
	
	ИмяФайла = КаталогОписания(ВыбОбъект) + "\Sort Stream.xml";
	
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда
		Если глмХМЛ
			.ПрочитатьДокументИзФайла(хмлСортировка, 
				"", "", ИмяФайла) = 1 Тогда

				Таблица = глмОбщиеФункции
					.ЗагрузитьТаблицуИзХМЛ(хмлСортировка);
				Таблица.Выгрузить(тзСортировки);	
		КонецЕсли;		
	КонецЕсли;
			
КонецПроцедуры	
//*******************************************
Процедура Сформировать()
	
	стрСлои = "";
	Для НомПП = 1 По сзСлои.РазмерСписка() Цикл
		Если сзСлои.Пометка(НомПП) = 1 Тогда
			стрСлои = стрСлои + ?(стрСлои <> "", ",", "") 
				+ сзСлои.ПолучитьЗначение(НомПП);
		КонецЕсли;	
	КонецЦикла;
	
	тзРеквизиты = СоздатьОбъект("ТаблицаЗначений");
	тзРеквизиты.НоваяКолонка("Имя", "Строка",,,"Имя"); 
	тзРеквизиты.НоваяКолонка("Синоним", "Строка");
	тзРеквизиты.НоваяКолонка("Описание", "Строка"); 
	тзРеквизиты.НоваяКолонка("Тип", "Строка");
	тзРеквизиты.НоваяКолонка("НомТабл", "Число");
	тзРеквизиты.НоваяКолонка("НомСтр", "Число");
	тзРеквизиты.НоваяКолонка("х", "Число");
	тзРеквизиты.НоваяКолонка("у", "Число"); 
	тзРеквизиты.НоваяКолонка("Ширина", "Число");
	тзРеквизиты.НоваяКолонка("Высота", "Число");
	тзРеквизиты.НоваяКолонка("Квадрант", "Число",,,"Квадрант");
	тзРеквизиты.НоваяКолонка("Проекция", "Число",,,"Проекция");

	стрКодСтраницы = КодСтраницыОписанияДиалога(хмлПоток, 
		стрСлои, тзРеквизиты); //"Основной,Счет");
	
	Текст = СоздатьОбъект("Текст");
	Текст.КодоваяСтраница(0);
	Текст.ДобавитьСтроку(стрКодСтраницы);
	Текст.Записать(КаталогИБ() + "DialogStream.html");
	
	Браузер.Объект.OpenURL(КаталогИБ() + "DialogStream.html");	
	
КонецПроцедуры
